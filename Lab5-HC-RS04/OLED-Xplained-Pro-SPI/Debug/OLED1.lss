
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000074b4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004074b4  004074b4  000174b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  004074bc  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000330  204009d0  00407e8c  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400d00  004081bc  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402d00  0040a1bc  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001c3f1  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003fd7  00000000  00000000  0003ce48  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00006961  00000000  00000000  00040e1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000c48  00000000  00000000  00047780  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000c38  00000000  00000000  000483c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000a80b  00000000  00000000  00049000  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00011abb  00000000  00000000  0005380b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00091092  00000000  00000000  000652c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002afc  00000000  00000000  000f6358  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	00 2d 40 20 91 10 40 00 8d 10 40 00 8d 10 40 00     .-@ ..@...@...@.
  400010:	8d 10 40 00 8d 10 40 00 8d 10 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	8d 10 40 00 8d 10 40 00 00 00 00 00 8d 10 40 00     ..@...@.......@.
  40003c:	8d 10 40 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  40004c:	8d 10 40 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  40005c:	8d 10 40 00 8d 10 40 00 00 00 00 00 b5 0e 40 00     ..@...@.......@.
  40006c:	c9 0e 40 00 dd 0e 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  40007c:	8d 10 40 00 f1 0e 40 00 05 0f 40 00 8d 10 40 00     ..@...@...@...@.
  40008c:	8d 10 40 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  40009c:	8d 10 40 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  4000ac:	8d 10 40 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  4000bc:	8d 10 40 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  4000cc:	8d 10 40 00 00 00 00 00 8d 10 40 00 00 00 00 00     ..@.......@.....
  4000dc:	8d 10 40 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  4000ec:	8d 10 40 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  4000fc:	8d 10 40 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ..@...@...@...@.
  40010c:	8d 10 40 00 8d 10 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 8d 10 40 00 8d 10 40 00 8d 10 40 00     ......@...@...@.
  40012c:	8d 10 40 00 8d 10 40 00 00 00 00 00 8d 10 40 00     ..@...@.......@.
  40013c:	8d 10 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	004074bc 	.word	0x004074bc

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	004074bc 	.word	0x004074bc
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	004074bc 	.word	0x004074bc
  4001a8:	00000000 	.word	0x00000000

004001ac <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  4001ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  4001b0:	b980      	cbnz	r0, 4001d4 <_read+0x28>
  4001b2:	460c      	mov	r4, r1
  4001b4:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  4001b6:	2a00      	cmp	r2, #0
  4001b8:	dd0f      	ble.n	4001da <_read+0x2e>
  4001ba:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  4001bc:	4e08      	ldr	r6, [pc, #32]	; (4001e0 <_read+0x34>)
  4001be:	4d09      	ldr	r5, [pc, #36]	; (4001e4 <_read+0x38>)
  4001c0:	6830      	ldr	r0, [r6, #0]
  4001c2:	4621      	mov	r1, r4
  4001c4:	682b      	ldr	r3, [r5, #0]
  4001c6:	4798      	blx	r3
		ptr++;
  4001c8:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  4001ca:	42bc      	cmp	r4, r7
  4001cc:	d1f8      	bne.n	4001c0 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  4001ce:	4640      	mov	r0, r8
  4001d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  4001d4:	f04f 38ff 	mov.w	r8, #4294967295
  4001d8:	e7f9      	b.n	4001ce <_read+0x22>
	for (; len > 0; --len) {
  4001da:	4680      	mov	r8, r0
  4001dc:	e7f7      	b.n	4001ce <_read+0x22>
  4001de:	bf00      	nop
  4001e0:	20400cac 	.word	0x20400cac
  4001e4:	20400ca4 	.word	0x20400ca4

004001e8 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  4001e8:	3801      	subs	r0, #1
  4001ea:	2802      	cmp	r0, #2
  4001ec:	d815      	bhi.n	40021a <_write+0x32>
{
  4001ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4001f2:	460e      	mov	r6, r1
  4001f4:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
  4001f6:	b19a      	cbz	r2, 400220 <_write+0x38>
  4001f8:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001fa:	f8df 8038 	ldr.w	r8, [pc, #56]	; 400234 <_write+0x4c>
  4001fe:	4f0c      	ldr	r7, [pc, #48]	; (400230 <_write+0x48>)
  400200:	f8d8 0000 	ldr.w	r0, [r8]
  400204:	f815 1b01 	ldrb.w	r1, [r5], #1
  400208:	683b      	ldr	r3, [r7, #0]
  40020a:	4798      	blx	r3
  40020c:	2800      	cmp	r0, #0
  40020e:	db0a      	blt.n	400226 <_write+0x3e>
  400210:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
  400212:	3c01      	subs	r4, #1
  400214:	d1f4      	bne.n	400200 <_write+0x18>
  400216:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  40021a:	f04f 30ff 	mov.w	r0, #4294967295
  40021e:	4770      	bx	lr
	for (; len != 0; --len) {
  400220:	4610      	mov	r0, r2
  400222:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
  400226:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
  40022a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  40022e:	bf00      	nop
  400230:	20400ca8 	.word	0x20400ca8
  400234:	20400cac 	.word	0x20400cac

00400238 <rtt_init>:
 * \return 0 if successful.
 */
uint32_t rtt_init(Rtt *p_rtt, uint16_t us_prescaler)
{
#if (SAM4N || SAM4S || SAM4E || SAM4C || SAMG51 || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST | g_wobits_in_rtt_mr);
  400238:	4b03      	ldr	r3, [pc, #12]	; (400248 <rtt_init+0x10>)
  40023a:	681b      	ldr	r3, [r3, #0]
  40023c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
  400240:	4319      	orrs	r1, r3
  400242:	6001      	str	r1, [r0, #0]
#else
	p_rtt->RTT_MR = (us_prescaler | RTT_MR_RTTRST);
#endif
	return 0;
}
  400244:	2000      	movs	r0, #0
  400246:	4770      	bx	lr
  400248:	204009ec 	.word	0x204009ec

0040024c <rtt_read_timer_value>:
 *
 * \return The current Real-time Timer value.
 */
uint32_t rtt_read_timer_value(Rtt *p_rtt)
{
	uint32_t rtt_val = p_rtt->RTT_VR;
  40024c:	6882      	ldr	r2, [r0, #8]

	while (rtt_val != p_rtt->RTT_VR) {
  40024e:	6883      	ldr	r3, [r0, #8]
  400250:	429a      	cmp	r2, r3
  400252:	d003      	beq.n	40025c <rtt_read_timer_value+0x10>
		rtt_val = p_rtt->RTT_VR;
  400254:	6882      	ldr	r2, [r0, #8]
	while (rtt_val != p_rtt->RTT_VR) {
  400256:	6883      	ldr	r3, [r0, #8]
  400258:	4293      	cmp	r3, r2
  40025a:	d1fb      	bne.n	400254 <rtt_read_timer_value+0x8>
	}

	return rtt_val;
}
  40025c:	4618      	mov	r0, r3
  40025e:	4770      	bx	lr

00400260 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400260:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  400262:	4b07      	ldr	r3, [pc, #28]	; (400280 <spi_enable_clock+0x20>)
  400264:	4298      	cmp	r0, r3
  400266:	d003      	beq.n	400270 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400268:	4b06      	ldr	r3, [pc, #24]	; (400284 <spi_enable_clock+0x24>)
  40026a:	4298      	cmp	r0, r3
  40026c:	d004      	beq.n	400278 <spi_enable_clock+0x18>
  40026e:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400270:	2015      	movs	r0, #21
  400272:	4b05      	ldr	r3, [pc, #20]	; (400288 <spi_enable_clock+0x28>)
  400274:	4798      	blx	r3
  400276:	bd08      	pop	{r3, pc}
  400278:	202a      	movs	r0, #42	; 0x2a
  40027a:	4b03      	ldr	r3, [pc, #12]	; (400288 <spi_enable_clock+0x28>)
  40027c:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  40027e:	e7f6      	b.n	40026e <spi_enable_clock+0xe>
  400280:	40008000 	.word	0x40008000
  400284:	40058000 	.word	0x40058000
  400288:	00401039 	.word	0x00401039

0040028c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  40028c:	6843      	ldr	r3, [r0, #4]
  40028e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  400292:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400294:	6843      	ldr	r3, [r0, #4]
  400296:	0409      	lsls	r1, r1, #16
  400298:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  40029c:	4319      	orrs	r1, r3
  40029e:	6041      	str	r1, [r0, #4]
  4002a0:	4770      	bx	lr

004002a2 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4002a2:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4002a4:	f643 2499 	movw	r4, #15001	; 0x3a99
  4002a8:	6905      	ldr	r5, [r0, #16]
  4002aa:	f015 0f02 	tst.w	r5, #2
  4002ae:	d103      	bne.n	4002b8 <spi_write+0x16>
		if (!timeout--) {
  4002b0:	3c01      	subs	r4, #1
  4002b2:	d1f9      	bne.n	4002a8 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4002b4:	2001      	movs	r0, #1
  4002b6:	e00c      	b.n	4002d2 <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4002b8:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4002ba:	f014 0f02 	tst.w	r4, #2
  4002be:	d006      	beq.n	4002ce <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4002c0:	0412      	lsls	r2, r2, #16
  4002c2:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4002c6:	4311      	orrs	r1, r2
		if (uc_last) {
  4002c8:	b10b      	cbz	r3, 4002ce <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4002ca:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4002ce:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4002d0:	2000      	movs	r0, #0
}
  4002d2:	bc30      	pop	{r4, r5}
  4002d4:	4770      	bx	lr

004002d6 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4002d6:	b932      	cbnz	r2, 4002e6 <spi_set_clock_polarity+0x10>
  4002d8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4002dc:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002de:	f023 0301 	bic.w	r3, r3, #1
  4002e2:	6303      	str	r3, [r0, #48]	; 0x30
  4002e4:	4770      	bx	lr
  4002e6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4002ea:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002ec:	f043 0301 	orr.w	r3, r3, #1
  4002f0:	6303      	str	r3, [r0, #48]	; 0x30
  4002f2:	4770      	bx	lr

004002f4 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  4002f4:	b932      	cbnz	r2, 400304 <spi_set_clock_phase+0x10>
  4002f6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  4002fa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4002fc:	f023 0302 	bic.w	r3, r3, #2
  400300:	6303      	str	r3, [r0, #48]	; 0x30
  400302:	4770      	bx	lr
  400304:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400308:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40030a:	f043 0302 	orr.w	r3, r3, #2
  40030e:	6303      	str	r3, [r0, #48]	; 0x30
  400310:	4770      	bx	lr

00400312 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  400312:	2a04      	cmp	r2, #4
  400314:	d003      	beq.n	40031e <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400316:	b16a      	cbz	r2, 400334 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400318:	2a08      	cmp	r2, #8
  40031a:	d016      	beq.n	40034a <spi_configure_cs_behavior+0x38>
  40031c:	4770      	bx	lr
  40031e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400322:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400324:	f023 0308 	bic.w	r3, r3, #8
  400328:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  40032a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40032c:	f043 0304 	orr.w	r3, r3, #4
  400330:	6303      	str	r3, [r0, #48]	; 0x30
  400332:	4770      	bx	lr
  400334:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400338:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40033a:	f023 0308 	bic.w	r3, r3, #8
  40033e:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  400340:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400342:	f023 0304 	bic.w	r3, r3, #4
  400346:	6303      	str	r3, [r0, #48]	; 0x30
  400348:	4770      	bx	lr
  40034a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40034e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400350:	f043 0308 	orr.w	r3, r3, #8
  400354:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  400356:	e7e1      	b.n	40031c <spi_configure_cs_behavior+0xa>

00400358 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400358:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  40035c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40035e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400362:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400364:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400366:	431a      	orrs	r2, r3
  400368:	630a      	str	r2, [r1, #48]	; 0x30
  40036a:	4770      	bx	lr

0040036c <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  40036c:	1e43      	subs	r3, r0, #1
  40036e:	4419      	add	r1, r3
  400370:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400374:	1e43      	subs	r3, r0, #1
  400376:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400378:	bf94      	ite	ls
  40037a:	b200      	sxthls	r0, r0
		return -1;
  40037c:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400380:	4770      	bx	lr

00400382 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400382:	b17a      	cbz	r2, 4003a4 <spi_set_baudrate_div+0x22>
{
  400384:	b410      	push	{r4}
  400386:	4614      	mov	r4, r2
  400388:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  40038c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40038e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  400392:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  400394:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  400396:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  40039a:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  40039c:	2000      	movs	r0, #0
}
  40039e:	f85d 4b04 	ldr.w	r4, [sp], #4
  4003a2:	4770      	bx	lr
        return -1;
  4003a4:	f04f 30ff 	mov.w	r0, #4294967295
  4003a8:	4770      	bx	lr

004003aa <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  4003aa:	6943      	ldr	r3, [r0, #20]
  4003ac:	f013 0f02 	tst.w	r3, #2
  4003b0:	d002      	beq.n	4003b8 <uart_write+0xe>
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  4003b2:	61c1      	str	r1, [r0, #28]
	return 0;
  4003b4:	2000      	movs	r0, #0
  4003b6:	4770      	bx	lr
		return 1;
  4003b8:	2001      	movs	r0, #1
}
  4003ba:	4770      	bx	lr

004003bc <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  4003bc:	6943      	ldr	r3, [r0, #20]
  4003be:	f013 0f01 	tst.w	r3, #1
  4003c2:	d003      	beq.n	4003cc <uart_read+0x10>
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  4003c4:	6983      	ldr	r3, [r0, #24]
  4003c6:	700b      	strb	r3, [r1, #0]
	return 0;
  4003c8:	2000      	movs	r0, #0
  4003ca:	4770      	bx	lr
		return 1;
  4003cc:	2001      	movs	r0, #1
}
  4003ce:	4770      	bx	lr

004003d0 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
  4003d0:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
  4003d2:	010b      	lsls	r3, r1, #4
  4003d4:	4293      	cmp	r3, r2
  4003d6:	d914      	bls.n	400402 <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  4003d8:	00c9      	lsls	r1, r1, #3
  4003da:	084b      	lsrs	r3, r1, #1
  4003dc:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
  4003e0:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
  4003e4:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  4003e6:	1e5c      	subs	r4, r3, #1
  4003e8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  4003ec:	428c      	cmp	r4, r1
  4003ee:	d901      	bls.n	4003f4 <usart_set_async_baudrate+0x24>
		return 1;
  4003f0:	2001      	movs	r0, #1
  4003f2:	e017      	b.n	400424 <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
  4003f4:	6841      	ldr	r1, [r0, #4]
  4003f6:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
  4003fa:	6041      	str	r1, [r0, #4]
  4003fc:	e00c      	b.n	400418 <usart_set_async_baudrate+0x48>
		return 1;
  4003fe:	2001      	movs	r0, #1
  400400:	e010      	b.n	400424 <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
  400402:	0859      	lsrs	r1, r3, #1
  400404:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
  400408:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
  40040c:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
  40040e:	1e5c      	subs	r4, r3, #1
  400410:	f64f 71fe 	movw	r1, #65534	; 0xfffe
  400414:	428c      	cmp	r4, r1
  400416:	d8f2      	bhi.n	4003fe <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
  400418:	0412      	lsls	r2, r2, #16
  40041a:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
  40041e:	431a      	orrs	r2, r3
  400420:	6202      	str	r2, [r0, #32]

	return 0;
  400422:	2000      	movs	r0, #0
}
  400424:	f85d 4b04 	ldr.w	r4, [sp], #4
  400428:	4770      	bx	lr
	...

0040042c <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
  40042c:	4b08      	ldr	r3, [pc, #32]	; (400450 <usart_reset+0x24>)
  40042e:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
  400432:	2300      	movs	r3, #0
  400434:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
  400436:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
  400438:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
  40043a:	2388      	movs	r3, #136	; 0x88
  40043c:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
  40043e:	2324      	movs	r3, #36	; 0x24
  400440:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
  400442:	f44f 7380 	mov.w	r3, #256	; 0x100
  400446:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
  400448:	f44f 2300 	mov.w	r3, #524288	; 0x80000
  40044c:	6003      	str	r3, [r0, #0]
  40044e:	4770      	bx	lr
  400450:	55534100 	.word	0x55534100

00400454 <usart_init_rs232>:
{
  400454:	b570      	push	{r4, r5, r6, lr}
  400456:	4605      	mov	r5, r0
  400458:	460c      	mov	r4, r1
  40045a:	4616      	mov	r6, r2
	usart_reset(p_usart);
  40045c:	4b0f      	ldr	r3, [pc, #60]	; (40049c <usart_init_rs232+0x48>)
  40045e:	4798      	blx	r3
	ul_reg_val = 0;
  400460:	2200      	movs	r2, #0
  400462:	4b0f      	ldr	r3, [pc, #60]	; (4004a0 <usart_init_rs232+0x4c>)
  400464:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
  400466:	b1a4      	cbz	r4, 400492 <usart_init_rs232+0x3e>
  400468:	4632      	mov	r2, r6
  40046a:	6821      	ldr	r1, [r4, #0]
  40046c:	4628      	mov	r0, r5
  40046e:	4b0d      	ldr	r3, [pc, #52]	; (4004a4 <usart_init_rs232+0x50>)
  400470:	4798      	blx	r3
  400472:	4602      	mov	r2, r0
  400474:	b978      	cbnz	r0, 400496 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400476:	6863      	ldr	r3, [r4, #4]
  400478:	68a1      	ldr	r1, [r4, #8]
  40047a:	430b      	orrs	r3, r1
  40047c:	6921      	ldr	r1, [r4, #16]
  40047e:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
  400480:	68e1      	ldr	r1, [r4, #12]
  400482:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
  400484:	4906      	ldr	r1, [pc, #24]	; (4004a0 <usart_init_rs232+0x4c>)
  400486:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
  400488:	6869      	ldr	r1, [r5, #4]
  40048a:	430b      	orrs	r3, r1
  40048c:	606b      	str	r3, [r5, #4]
}
  40048e:	4610      	mov	r0, r2
  400490:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
  400492:	2201      	movs	r2, #1
  400494:	e7fb      	b.n	40048e <usart_init_rs232+0x3a>
  400496:	2201      	movs	r2, #1
  400498:	e7f9      	b.n	40048e <usart_init_rs232+0x3a>
  40049a:	bf00      	nop
  40049c:	0040042d 	.word	0x0040042d
  4004a0:	204009f0 	.word	0x204009f0
  4004a4:	004003d1 	.word	0x004003d1

004004a8 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
  4004a8:	2340      	movs	r3, #64	; 0x40
  4004aa:	6003      	str	r3, [r0, #0]
  4004ac:	4770      	bx	lr

004004ae <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
  4004ae:	2310      	movs	r3, #16
  4004b0:	6003      	str	r3, [r0, #0]
  4004b2:	4770      	bx	lr

004004b4 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  4004b4:	6943      	ldr	r3, [r0, #20]
  4004b6:	f013 0f02 	tst.w	r3, #2
  4004ba:	d004      	beq.n	4004c6 <usart_write+0x12>
	p_usart->US_THR = US_THR_TXCHR(c);
  4004bc:	f3c1 0108 	ubfx	r1, r1, #0, #9
  4004c0:	61c1      	str	r1, [r0, #28]
	return 0;
  4004c2:	2000      	movs	r0, #0
  4004c4:	4770      	bx	lr
		return 1;
  4004c6:	2001      	movs	r0, #1
}
  4004c8:	4770      	bx	lr

004004ca <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  4004ca:	6943      	ldr	r3, [r0, #20]
  4004cc:	f013 0f01 	tst.w	r3, #1
  4004d0:	d005      	beq.n	4004de <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  4004d2:	6983      	ldr	r3, [r0, #24]
  4004d4:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4004d8:	600b      	str	r3, [r1, #0]
	return 0;
  4004da:	2000      	movs	r0, #0
  4004dc:	4770      	bx	lr
		return 1;
  4004de:	2001      	movs	r0, #1
}
  4004e0:	4770      	bx	lr
	...

004004e4 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4004e4:	4b01      	ldr	r3, [pc, #4]	; (4004ec <gfx_mono_set_framebuffer+0x8>)
  4004e6:	6018      	str	r0, [r3, #0]
  4004e8:	4770      	bx	lr
  4004ea:	bf00      	nop
  4004ec:	204009f4 	.word	0x204009f4

004004f0 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  4004f0:	4b02      	ldr	r3, [pc, #8]	; (4004fc <gfx_mono_framebuffer_put_byte+0xc>)
  4004f2:	681b      	ldr	r3, [r3, #0]
  4004f4:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  4004f8:	5442      	strb	r2, [r0, r1]
  4004fa:	4770      	bx	lr
  4004fc:	204009f4 	.word	0x204009f4

00400500 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400500:	4b02      	ldr	r3, [pc, #8]	; (40050c <gfx_mono_framebuffer_get_byte+0xc>)
  400502:	681b      	ldr	r3, [r3, #0]
  400504:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  400508:	5c40      	ldrb	r0, [r0, r1]
  40050a:	4770      	bx	lr
  40050c:	204009f4 	.word	0x204009f4

00400510 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400510:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400514:	1884      	adds	r4, r0, r2
  400516:	2c80      	cmp	r4, #128	; 0x80
  400518:	dd02      	ble.n	400520 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40051a:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  40051e:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400520:	b322      	cbz	r2, 40056c <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  400522:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  400524:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  400528:	2601      	movs	r6, #1
  40052a:	fa06 f101 	lsl.w	r1, r6, r1
  40052e:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400530:	2b01      	cmp	r3, #1
  400532:	d01d      	beq.n	400570 <gfx_mono_generic_draw_horizontal_line+0x60>
  400534:	2b00      	cmp	r3, #0
  400536:	d035      	beq.n	4005a4 <gfx_mono_generic_draw_horizontal_line+0x94>
  400538:	2b02      	cmp	r3, #2
  40053a:	d117      	bne.n	40056c <gfx_mono_generic_draw_horizontal_line+0x5c>
  40053c:	3801      	subs	r0, #1
  40053e:	b2c7      	uxtb	r7, r0
  400540:	19d4      	adds	r4, r2, r7
  400542:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400544:	f8df a090 	ldr.w	sl, [pc, #144]	; 4005d8 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  400548:	f04f 0900 	mov.w	r9, #0
  40054c:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4005dc <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400550:	4621      	mov	r1, r4
  400552:	4628      	mov	r0, r5
  400554:	47d0      	blx	sl
			temp ^= pixelmask;
  400556:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40055a:	464b      	mov	r3, r9
  40055c:	b2d2      	uxtb	r2, r2
  40055e:	4621      	mov	r1, r4
  400560:	4628      	mov	r0, r5
  400562:	47c0      	blx	r8
  400564:	3c01      	subs	r4, #1
  400566:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400568:	42bc      	cmp	r4, r7
  40056a:	d1f1      	bne.n	400550 <gfx_mono_generic_draw_horizontal_line+0x40>
  40056c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400570:	3801      	subs	r0, #1
  400572:	b2c7      	uxtb	r7, r0
  400574:	19d4      	adds	r4, r2, r7
  400576:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400578:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4005d8 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  40057c:	f04f 0900 	mov.w	r9, #0
  400580:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4005dc <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400584:	4621      	mov	r1, r4
  400586:	4628      	mov	r0, r5
  400588:	47d0      	blx	sl
			temp |= pixelmask;
  40058a:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40058e:	464b      	mov	r3, r9
  400590:	b2d2      	uxtb	r2, r2
  400592:	4621      	mov	r1, r4
  400594:	4628      	mov	r0, r5
  400596:	47c0      	blx	r8
  400598:	3c01      	subs	r4, #1
  40059a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40059c:	42bc      	cmp	r4, r7
  40059e:	d1f1      	bne.n	400584 <gfx_mono_generic_draw_horizontal_line+0x74>
  4005a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4005a4:	3801      	subs	r0, #1
  4005a6:	b2c7      	uxtb	r7, r0
  4005a8:	19d4      	adds	r4, r2, r7
  4005aa:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4005ac:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4005d8 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  4005b0:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  4005b2:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4005dc <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4005b6:	4621      	mov	r1, r4
  4005b8:	4628      	mov	r0, r5
  4005ba:	47c0      	blx	r8
			temp &= ~pixelmask;
  4005bc:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4005c0:	2300      	movs	r3, #0
  4005c2:	b2d2      	uxtb	r2, r2
  4005c4:	4621      	mov	r1, r4
  4005c6:	4628      	mov	r0, r5
  4005c8:	47c8      	blx	r9
  4005ca:	3c01      	subs	r4, #1
  4005cc:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4005ce:	42bc      	cmp	r4, r7
  4005d0:	d1f1      	bne.n	4005b6 <gfx_mono_generic_draw_horizontal_line+0xa6>
  4005d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4005d6:	bf00      	nop
  4005d8:	00400811 	.word	0x00400811
  4005dc:	0040070d 	.word	0x0040070d

004005e0 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  4005e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4005e4:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4005e8:	b18b      	cbz	r3, 40060e <gfx_mono_generic_draw_filled_rect+0x2e>
  4005ea:	461c      	mov	r4, r3
  4005ec:	4690      	mov	r8, r2
  4005ee:	4606      	mov	r6, r0
  4005f0:	1e4d      	subs	r5, r1, #1
  4005f2:	b2ed      	uxtb	r5, r5
  4005f4:	442c      	add	r4, r5
  4005f6:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  4005f8:	f8df 9018 	ldr.w	r9, [pc, #24]	; 400614 <gfx_mono_generic_draw_filled_rect+0x34>
  4005fc:	463b      	mov	r3, r7
  4005fe:	4642      	mov	r2, r8
  400600:	4621      	mov	r1, r4
  400602:	4630      	mov	r0, r6
  400604:	47c8      	blx	r9
  400606:	3c01      	subs	r4, #1
  400608:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  40060a:	42ac      	cmp	r4, r5
  40060c:	d1f6      	bne.n	4005fc <gfx_mono_generic_draw_filled_rect+0x1c>
  40060e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400612:	bf00      	nop
  400614:	00400511 	.word	0x00400511

00400618 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  400618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40061c:	b083      	sub	sp, #12
  40061e:	4604      	mov	r4, r0
  400620:	4688      	mov	r8, r1
  400622:	4691      	mov	r9, r2
  400624:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  400626:	7a5b      	ldrb	r3, [r3, #9]
  400628:	f89b 2008 	ldrb.w	r2, [fp, #8]
  40062c:	2100      	movs	r1, #0
  40062e:	9100      	str	r1, [sp, #0]
  400630:	4649      	mov	r1, r9
  400632:	4640      	mov	r0, r8
  400634:	4d21      	ldr	r5, [pc, #132]	; (4006bc <gfx_mono_draw_char+0xa4>)
  400636:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  400638:	f89b 3000 	ldrb.w	r3, [fp]
  40063c:	b113      	cbz	r3, 400644 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  40063e:	b003      	add	sp, #12
  400640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400644:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400648:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  40064a:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  40064e:	bf18      	it	ne
  400650:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  400652:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  400656:	f89b 700a 	ldrb.w	r7, [fp, #10]
  40065a:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  40065c:	fb17 f70a 	smulbb	r7, r7, sl
  400660:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400664:	f8db 3004 	ldr.w	r3, [fp, #4]
  400668:	fa13 f787 	uxtah	r7, r3, r7
  40066c:	e01f      	b.n	4006ae <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  40066e:	0064      	lsls	r4, r4, #1
  400670:	b2e4      	uxtb	r4, r4
  400672:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400674:	b2eb      	uxtb	r3, r5
  400676:	429e      	cmp	r6, r3
  400678:	d910      	bls.n	40069c <gfx_mono_draw_char+0x84>
  40067a:	b2eb      	uxtb	r3, r5
  40067c:	eb08 0003 	add.w	r0, r8, r3
  400680:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  400682:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  400686:	bf08      	it	eq
  400688:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  40068c:	f014 0f80 	tst.w	r4, #128	; 0x80
  400690:	d0ed      	beq.n	40066e <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  400692:	2201      	movs	r2, #1
  400694:	4649      	mov	r1, r9
  400696:	4b0a      	ldr	r3, [pc, #40]	; (4006c0 <gfx_mono_draw_char+0xa8>)
  400698:	4798      	blx	r3
  40069a:	e7e8      	b.n	40066e <gfx_mono_draw_char+0x56>
		inc_y += 1;
  40069c:	f109 0901 	add.w	r9, r9, #1
  4006a0:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  4006a4:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  4006a8:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  4006ac:	d0c7      	beq.n	40063e <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  4006ae:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  4006b2:	2e00      	cmp	r6, #0
  4006b4:	d0f2      	beq.n	40069c <gfx_mono_draw_char+0x84>
  4006b6:	2500      	movs	r5, #0
  4006b8:	462c      	mov	r4, r5
  4006ba:	e7de      	b.n	40067a <gfx_mono_draw_char+0x62>
  4006bc:	004005e1 	.word	0x004005e1
  4006c0:	004007ad 	.word	0x004007ad

004006c4 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  4006c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4006c8:	4604      	mov	r4, r0
  4006ca:	4690      	mov	r8, r2
  4006cc:	461d      	mov	r5, r3
  4006ce:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4006d0:	4f0d      	ldr	r7, [pc, #52]	; (400708 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4006d2:	460e      	mov	r6, r1
  4006d4:	e008      	b.n	4006e8 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4006d6:	7a6a      	ldrb	r2, [r5, #9]
  4006d8:	3201      	adds	r2, #1
  4006da:	4442      	add	r2, r8
  4006dc:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4006e0:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4006e2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4006e6:	b16b      	cbz	r3, 400704 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4006e8:	7820      	ldrb	r0, [r4, #0]
  4006ea:	280a      	cmp	r0, #10
  4006ec:	d0f3      	beq.n	4006d6 <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  4006ee:	280d      	cmp	r0, #13
  4006f0:	d0f7      	beq.n	4006e2 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  4006f2:	462b      	mov	r3, r5
  4006f4:	4642      	mov	r2, r8
  4006f6:	4649      	mov	r1, r9
  4006f8:	47b8      	blx	r7
			x += font->width;
  4006fa:	7a2b      	ldrb	r3, [r5, #8]
  4006fc:	4499      	add	r9, r3
  4006fe:	fa5f f989 	uxtb.w	r9, r9
  400702:	e7ee      	b.n	4006e2 <gfx_mono_draw_string+0x1e>
}
  400704:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400708:	00400619 	.word	0x00400619

0040070c <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  40070c:	b570      	push	{r4, r5, r6, lr}
  40070e:	4604      	mov	r4, r0
  400710:	460d      	mov	r5, r1
  400712:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  400714:	b91b      	cbnz	r3, 40071e <gfx_mono_ssd1306_put_byte+0x12>
  400716:	4b0d      	ldr	r3, [pc, #52]	; (40074c <gfx_mono_ssd1306_put_byte+0x40>)
  400718:	4798      	blx	r3
  40071a:	42b0      	cmp	r0, r6
  40071c:	d015      	beq.n	40074a <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  40071e:	4632      	mov	r2, r6
  400720:	4629      	mov	r1, r5
  400722:	4620      	mov	r0, r4
  400724:	4b0a      	ldr	r3, [pc, #40]	; (400750 <gfx_mono_ssd1306_put_byte+0x44>)
  400726:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  400728:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  40072c:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400730:	4c08      	ldr	r4, [pc, #32]	; (400754 <gfx_mono_ssd1306_put_byte+0x48>)
  400732:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400734:	f3c5 1002 	ubfx	r0, r5, #4, #3
  400738:	f040 0010 	orr.w	r0, r0, #16
  40073c:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  40073e:	f005 000f 	and.w	r0, r5, #15
  400742:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400744:	4630      	mov	r0, r6
  400746:	4b04      	ldr	r3, [pc, #16]	; (400758 <gfx_mono_ssd1306_put_byte+0x4c>)
  400748:	4798      	blx	r3
  40074a:	bd70      	pop	{r4, r5, r6, pc}
  40074c:	00400501 	.word	0x00400501
  400750:	004004f1 	.word	0x004004f1
  400754:	0040081d 	.word	0x0040081d
  400758:	00400a3d 	.word	0x00400a3d

0040075c <gfx_mono_ssd1306_init>:
{
  40075c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400760:	480d      	ldr	r0, [pc, #52]	; (400798 <gfx_mono_ssd1306_init+0x3c>)
  400762:	4b0e      	ldr	r3, [pc, #56]	; (40079c <gfx_mono_ssd1306_init+0x40>)
  400764:	4798      	blx	r3
	ssd1306_init();
  400766:	4b0e      	ldr	r3, [pc, #56]	; (4007a0 <gfx_mono_ssd1306_init+0x44>)
  400768:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  40076a:	2040      	movs	r0, #64	; 0x40
  40076c:	4b0d      	ldr	r3, [pc, #52]	; (4007a4 <gfx_mono_ssd1306_init+0x48>)
  40076e:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400770:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400772:	f04f 0801 	mov.w	r8, #1
  400776:	462f      	mov	r7, r5
  400778:	4e0b      	ldr	r6, [pc, #44]	; (4007a8 <gfx_mono_ssd1306_init+0x4c>)
{
  40077a:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  40077c:	4643      	mov	r3, r8
  40077e:	463a      	mov	r2, r7
  400780:	b2e1      	uxtb	r1, r4
  400782:	4628      	mov	r0, r5
  400784:	47b0      	blx	r6
  400786:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400788:	2c80      	cmp	r4, #128	; 0x80
  40078a:	d1f7      	bne.n	40077c <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  40078c:	3501      	adds	r5, #1
  40078e:	b2ed      	uxtb	r5, r5
  400790:	2d04      	cmp	r5, #4
  400792:	d1f2      	bne.n	40077a <gfx_mono_ssd1306_init+0x1e>
  400794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400798:	204009f8 	.word	0x204009f8
  40079c:	004004e5 	.word	0x004004e5
  4007a0:	0040085d 	.word	0x0040085d
  4007a4:	0040081d 	.word	0x0040081d
  4007a8:	0040070d 	.word	0x0040070d

004007ac <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  4007ac:	09c3      	lsrs	r3, r0, #7
  4007ae:	d12a      	bne.n	400806 <gfx_mono_ssd1306_draw_pixel+0x5a>
  4007b0:	291f      	cmp	r1, #31
  4007b2:	d828      	bhi.n	400806 <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  4007b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4007b8:	4614      	mov	r4, r2
  4007ba:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  4007bc:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  4007be:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  4007c2:	2201      	movs	r2, #1
  4007c4:	fa02 f701 	lsl.w	r7, r2, r1
  4007c8:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  4007cc:	4601      	mov	r1, r0
  4007ce:	4630      	mov	r0, r6
  4007d0:	4b0d      	ldr	r3, [pc, #52]	; (400808 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4007d2:	4798      	blx	r3
  4007d4:	4602      	mov	r2, r0
	switch (color) {
  4007d6:	2c01      	cmp	r4, #1
  4007d8:	d009      	beq.n	4007ee <gfx_mono_ssd1306_draw_pixel+0x42>
  4007da:	b164      	cbz	r4, 4007f6 <gfx_mono_ssd1306_draw_pixel+0x4a>
  4007dc:	2c02      	cmp	r4, #2
  4007de:	d00e      	beq.n	4007fe <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4007e0:	2300      	movs	r3, #0
  4007e2:	4629      	mov	r1, r5
  4007e4:	4630      	mov	r0, r6
  4007e6:	4c09      	ldr	r4, [pc, #36]	; (40080c <gfx_mono_ssd1306_draw_pixel+0x60>)
  4007e8:	47a0      	blx	r4
  4007ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  4007ee:	ea48 0200 	orr.w	r2, r8, r0
  4007f2:	b2d2      	uxtb	r2, r2
		break;
  4007f4:	e7f4      	b.n	4007e0 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  4007f6:	ea20 0207 	bic.w	r2, r0, r7
  4007fa:	b2d2      	uxtb	r2, r2
		break;
  4007fc:	e7f0      	b.n	4007e0 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  4007fe:	ea88 0200 	eor.w	r2, r8, r0
  400802:	b2d2      	uxtb	r2, r2
		break;
  400804:	e7ec      	b.n	4007e0 <gfx_mono_ssd1306_draw_pixel+0x34>
  400806:	4770      	bx	lr
  400808:	00400501 	.word	0x00400501
  40080c:	0040070d 	.word	0x0040070d

00400810 <gfx_mono_ssd1306_get_byte>:
{
  400810:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  400812:	4b01      	ldr	r3, [pc, #4]	; (400818 <gfx_mono_ssd1306_get_byte+0x8>)
  400814:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  400816:	bd08      	pop	{r3, pc}
  400818:	00400501 	.word	0x00400501

0040081c <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  40081c:	b538      	push	{r3, r4, r5, lr}
  40081e:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400820:	2208      	movs	r2, #8
  400822:	4b09      	ldr	r3, [pc, #36]	; (400848 <ssd1306_write_command+0x2c>)
  400824:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400826:	4c09      	ldr	r4, [pc, #36]	; (40084c <ssd1306_write_command+0x30>)
  400828:	2101      	movs	r1, #1
  40082a:	4620      	mov	r0, r4
  40082c:	4b08      	ldr	r3, [pc, #32]	; (400850 <ssd1306_write_command+0x34>)
  40082e:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400830:	2301      	movs	r3, #1
  400832:	461a      	mov	r2, r3
  400834:	4629      	mov	r1, r5
  400836:	4620      	mov	r0, r4
  400838:	4c06      	ldr	r4, [pc, #24]	; (400854 <ssd1306_write_command+0x38>)
  40083a:	47a0      	blx	r4
	delay_us(10);
  40083c:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400840:	4b05      	ldr	r3, [pc, #20]	; (400858 <ssd1306_write_command+0x3c>)
  400842:	4798      	blx	r3
  400844:	bd38      	pop	{r3, r4, r5, pc}
  400846:	bf00      	nop
  400848:	400e1000 	.word	0x400e1000
  40084c:	40008000 	.word	0x40008000
  400850:	0040028d 	.word	0x0040028d
  400854:	004002a3 	.word	0x004002a3
  400858:	20400001 	.word	0x20400001

0040085c <ssd1306_init>:
{
  40085c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400860:	4d66      	ldr	r5, [pc, #408]	; (4009fc <ssd1306_init+0x1a0>)
  400862:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  400866:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400868:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  40086c:	4b64      	ldr	r3, [pc, #400]	; (400a00 <ssd1306_init+0x1a4>)
  40086e:	2708      	movs	r7, #8
  400870:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400872:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400876:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400878:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  40087c:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  40087e:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400880:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400884:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  400886:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40088a:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  40088c:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  40088e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400892:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  400894:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400896:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  40089a:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  40089c:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  40089e:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4008a2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4008a4:	f022 0208 	bic.w	r2, r2, #8
  4008a8:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4008aa:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4008ac:	f022 0208 	bic.w	r2, r2, #8
  4008b0:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  4008b2:	601f      	str	r7, [r3, #0]
  4008b4:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4008b6:	631f      	str	r7, [r3, #48]	; 0x30
  4008b8:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4008ba:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400a38 <ssd1306_init+0x1dc>
  4008be:	2300      	movs	r3, #0
  4008c0:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4008c4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008c8:	4640      	mov	r0, r8
  4008ca:	4c4e      	ldr	r4, [pc, #312]	; (400a04 <ssd1306_init+0x1a8>)
  4008cc:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4008ce:	2300      	movs	r3, #0
  4008d0:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4008d4:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008d8:	4640      	mov	r0, r8
  4008da:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4008dc:	2300      	movs	r3, #0
  4008de:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4008e2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008e6:	4640      	mov	r0, r8
  4008e8:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4008ea:	2300      	movs	r3, #0
  4008ec:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4008f0:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4008f4:	4640      	mov	r0, r8
  4008f6:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4008f8:	2300      	movs	r3, #0
  4008fa:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4008fe:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400902:	4640      	mov	r0, r8
  400904:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400906:	2300      	movs	r3, #0
  400908:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  40090c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400910:	4640      	mov	r0, r8
  400912:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400914:	4c3c      	ldr	r4, [pc, #240]	; (400a08 <ssd1306_init+0x1ac>)
  400916:	f04f 0902 	mov.w	r9, #2
  40091a:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  40091e:	f04f 0880 	mov.w	r8, #128	; 0x80
  400922:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400926:	6863      	ldr	r3, [r4, #4]
  400928:	f043 0301 	orr.w	r3, r3, #1
  40092c:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  40092e:	463a      	mov	r2, r7
  400930:	2101      	movs	r1, #1
  400932:	4620      	mov	r0, r4
  400934:	4b35      	ldr	r3, [pc, #212]	; (400a0c <ssd1306_init+0x1b0>)
  400936:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  400938:	2200      	movs	r2, #0
  40093a:	2101      	movs	r1, #1
  40093c:	4620      	mov	r0, r4
  40093e:	4b34      	ldr	r3, [pc, #208]	; (400a10 <ssd1306_init+0x1b4>)
  400940:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400942:	2200      	movs	r2, #0
  400944:	2101      	movs	r1, #1
  400946:	4620      	mov	r0, r4
  400948:	4b32      	ldr	r3, [pc, #200]	; (400a14 <ssd1306_init+0x1b8>)
  40094a:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  40094c:	6863      	ldr	r3, [r4, #4]
  40094e:	f023 0302 	bic.w	r3, r3, #2
  400952:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400954:	2200      	movs	r2, #0
  400956:	2101      	movs	r1, #1
  400958:	4620      	mov	r0, r4
  40095a:	4b2f      	ldr	r3, [pc, #188]	; (400a18 <ssd1306_init+0x1bc>)
  40095c:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  40095e:	6863      	ldr	r3, [r4, #4]
  400960:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400964:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400966:	6863      	ldr	r3, [r4, #4]
  400968:	f043 0310 	orr.w	r3, r3, #16
  40096c:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  40096e:	492b      	ldr	r1, [pc, #172]	; (400a1c <ssd1306_init+0x1c0>)
  400970:	482b      	ldr	r0, [pc, #172]	; (400a20 <ssd1306_init+0x1c4>)
  400972:	4b2c      	ldr	r3, [pc, #176]	; (400a24 <ssd1306_init+0x1c8>)
  400974:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  400976:	b2c2      	uxtb	r2, r0
  400978:	2101      	movs	r1, #1
  40097a:	4620      	mov	r0, r4
  40097c:	4b2a      	ldr	r3, [pc, #168]	; (400a28 <ssd1306_init+0x1cc>)
  40097e:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400980:	4620      	mov	r0, r4
  400982:	4b2a      	ldr	r3, [pc, #168]	; (400a2c <ssd1306_init+0x1d0>)
  400984:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400986:	2301      	movs	r3, #1
  400988:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40098a:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  40098c:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400990:	4c27      	ldr	r4, [pc, #156]	; (400a30 <ssd1306_init+0x1d4>)
  400992:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400994:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400996:	f640 30b8 	movw	r0, #3000	; 0xbb8
  40099a:	47a0      	blx	r4
  40099c:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  40099e:	20a8      	movs	r0, #168	; 0xa8
  4009a0:	4c24      	ldr	r4, [pc, #144]	; (400a34 <ssd1306_init+0x1d8>)
  4009a2:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  4009a4:	201f      	movs	r0, #31
  4009a6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  4009a8:	20d3      	movs	r0, #211	; 0xd3
  4009aa:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  4009ac:	2000      	movs	r0, #0
  4009ae:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  4009b0:	2040      	movs	r0, #64	; 0x40
  4009b2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  4009b4:	20a1      	movs	r0, #161	; 0xa1
  4009b6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  4009b8:	20c8      	movs	r0, #200	; 0xc8
  4009ba:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  4009bc:	20da      	movs	r0, #218	; 0xda
  4009be:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  4009c0:	4648      	mov	r0, r9
  4009c2:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  4009c4:	2081      	movs	r0, #129	; 0x81
  4009c6:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  4009c8:	208f      	movs	r0, #143	; 0x8f
  4009ca:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  4009cc:	20a4      	movs	r0, #164	; 0xa4
  4009ce:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  4009d0:	20a6      	movs	r0, #166	; 0xa6
  4009d2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  4009d4:	20d5      	movs	r0, #213	; 0xd5
  4009d6:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  4009d8:	4640      	mov	r0, r8
  4009da:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  4009dc:	208d      	movs	r0, #141	; 0x8d
  4009de:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  4009e0:	2014      	movs	r0, #20
  4009e2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  4009e4:	20db      	movs	r0, #219	; 0xdb
  4009e6:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  4009e8:	2040      	movs	r0, #64	; 0x40
  4009ea:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  4009ec:	20d9      	movs	r0, #217	; 0xd9
  4009ee:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  4009f0:	20f1      	movs	r0, #241	; 0xf1
  4009f2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  4009f4:	20af      	movs	r0, #175	; 0xaf
  4009f6:	47a0      	blx	r4
  4009f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4009fc:	400e1200 	.word	0x400e1200
  400a00:	400e1000 	.word	0x400e1000
  400a04:	00400d25 	.word	0x00400d25
  400a08:	40008000 	.word	0x40008000
  400a0c:	00400313 	.word	0x00400313
  400a10:	004002d7 	.word	0x004002d7
  400a14:	004002f5 	.word	0x004002f5
  400a18:	00400359 	.word	0x00400359
  400a1c:	08f0d180 	.word	0x08f0d180
  400a20:	001e8480 	.word	0x001e8480
  400a24:	0040036d 	.word	0x0040036d
  400a28:	00400383 	.word	0x00400383
  400a2c:	00400261 	.word	0x00400261
  400a30:	20400001 	.word	0x20400001
  400a34:	0040081d 	.word	0x0040081d
  400a38:	400e1400 	.word	0x400e1400

00400a3c <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400a3c:	b538      	push	{r3, r4, r5, lr}
  400a3e:	4605      	mov	r5, r0
  400a40:	2208      	movs	r2, #8
  400a42:	4b09      	ldr	r3, [pc, #36]	; (400a68 <ssd1306_write_data+0x2c>)
  400a44:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400a46:	4c09      	ldr	r4, [pc, #36]	; (400a6c <ssd1306_write_data+0x30>)
  400a48:	2101      	movs	r1, #1
  400a4a:	4620      	mov	r0, r4
  400a4c:	4b08      	ldr	r3, [pc, #32]	; (400a70 <ssd1306_write_data+0x34>)
  400a4e:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400a50:	2301      	movs	r3, #1
  400a52:	461a      	mov	r2, r3
  400a54:	4629      	mov	r1, r5
  400a56:	4620      	mov	r0, r4
  400a58:	4c06      	ldr	r4, [pc, #24]	; (400a74 <ssd1306_write_data+0x38>)
  400a5a:	47a0      	blx	r4
	delay_us(10);
  400a5c:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400a60:	4b05      	ldr	r3, [pc, #20]	; (400a78 <ssd1306_write_data+0x3c>)
  400a62:	4798      	blx	r3
  400a64:	bd38      	pop	{r3, r4, r5, pc}
  400a66:	bf00      	nop
  400a68:	400e1000 	.word	0x400e1000
  400a6c:	40008000 	.word	0x40008000
  400a70:	0040028d 	.word	0x0040028d
  400a74:	004002a3 	.word	0x004002a3
  400a78:	20400001 	.word	0x20400001

00400a7c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400a7c:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400a7e:	4810      	ldr	r0, [pc, #64]	; (400ac0 <sysclk_init+0x44>)
  400a80:	4b10      	ldr	r3, [pc, #64]	; (400ac4 <sysclk_init+0x48>)
  400a82:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400a84:	213e      	movs	r1, #62	; 0x3e
  400a86:	2000      	movs	r0, #0
  400a88:	4b0f      	ldr	r3, [pc, #60]	; (400ac8 <sysclk_init+0x4c>)
  400a8a:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400a8c:	4c0f      	ldr	r4, [pc, #60]	; (400acc <sysclk_init+0x50>)
  400a8e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400a90:	2800      	cmp	r0, #0
  400a92:	d0fc      	beq.n	400a8e <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400a94:	4b0e      	ldr	r3, [pc, #56]	; (400ad0 <sysclk_init+0x54>)
  400a96:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400a98:	4a0e      	ldr	r2, [pc, #56]	; (400ad4 <sysclk_init+0x58>)
  400a9a:	4b0f      	ldr	r3, [pc, #60]	; (400ad8 <sysclk_init+0x5c>)
  400a9c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400a9e:	4c0f      	ldr	r4, [pc, #60]	; (400adc <sysclk_init+0x60>)
  400aa0:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400aa2:	2800      	cmp	r0, #0
  400aa4:	d0fc      	beq.n	400aa0 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400aa6:	2002      	movs	r0, #2
  400aa8:	4b0d      	ldr	r3, [pc, #52]	; (400ae0 <sysclk_init+0x64>)
  400aaa:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400aac:	2000      	movs	r0, #0
  400aae:	4b0d      	ldr	r3, [pc, #52]	; (400ae4 <sysclk_init+0x68>)
  400ab0:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400ab2:	4b0d      	ldr	r3, [pc, #52]	; (400ae8 <sysclk_init+0x6c>)
  400ab4:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400ab6:	4802      	ldr	r0, [pc, #8]	; (400ac0 <sysclk_init+0x44>)
  400ab8:	4b02      	ldr	r3, [pc, #8]	; (400ac4 <sysclk_init+0x48>)
  400aba:	4798      	blx	r3
  400abc:	bd10      	pop	{r4, pc}
  400abe:	bf00      	nop
  400ac0:	11e1a300 	.word	0x11e1a300
  400ac4:	00401265 	.word	0x00401265
  400ac8:	00400fb5 	.word	0x00400fb5
  400acc:	00401009 	.word	0x00401009
  400ad0:	00401019 	.word	0x00401019
  400ad4:	20183f01 	.word	0x20183f01
  400ad8:	400e0600 	.word	0x400e0600
  400adc:	00401029 	.word	0x00401029
  400ae0:	00400f19 	.word	0x00400f19
  400ae4:	00400f51 	.word	0x00400f51
  400ae8:	00401159 	.word	0x00401159

00400aec <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400aec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400aee:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400af2:	4b48      	ldr	r3, [pc, #288]	; (400c14 <board_init+0x128>)
  400af4:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400af6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400afa:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400afe:	4b46      	ldr	r3, [pc, #280]	; (400c18 <board_init+0x12c>)
  400b00:	2200      	movs	r2, #0
  400b02:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400b06:	695a      	ldr	r2, [r3, #20]
  400b08:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400b0c:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400b0e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b12:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400b16:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400b1a:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400b1e:	f007 0007 	and.w	r0, r7, #7
  400b22:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400b24:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400b28:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400b2c:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400b30:	f3bf 8f4f 	dsb	sy
  400b34:	f04f 34ff 	mov.w	r4, #4294967295
  400b38:	fa04 fc00 	lsl.w	ip, r4, r0
  400b3c:	fa06 f000 	lsl.w	r0, r6, r0
  400b40:	fa04 f40e 	lsl.w	r4, r4, lr
  400b44:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400b48:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400b4a:	463a      	mov	r2, r7
  400b4c:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400b4e:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400b52:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400b56:	3a01      	subs	r2, #1
  400b58:	4423      	add	r3, r4
  400b5a:	f1b2 3fff 	cmp.w	r2, #4294967295
  400b5e:	d1f6      	bne.n	400b4e <board_init+0x62>
        } while(sets--);
  400b60:	3e01      	subs	r6, #1
  400b62:	4460      	add	r0, ip
  400b64:	f1b6 3fff 	cmp.w	r6, #4294967295
  400b68:	d1ef      	bne.n	400b4a <board_init+0x5e>
  400b6a:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400b6e:	4b2a      	ldr	r3, [pc, #168]	; (400c18 <board_init+0x12c>)
  400b70:	695a      	ldr	r2, [r3, #20]
  400b72:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400b76:	615a      	str	r2, [r3, #20]
  400b78:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b7c:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b80:	4a26      	ldr	r2, [pc, #152]	; (400c1c <board_init+0x130>)
  400b82:	4927      	ldr	r1, [pc, #156]	; (400c20 <board_init+0x134>)
  400b84:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400b86:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400b8a:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400b8c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b90:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400b94:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400b98:	f022 0201 	bic.w	r2, r2, #1
  400b9c:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400ba0:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400ba4:	f022 0201 	bic.w	r2, r2, #1
  400ba8:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400bac:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400bb0:	f3bf 8f6f 	isb	sy
  400bb4:	200a      	movs	r0, #10
  400bb6:	4c1b      	ldr	r4, [pc, #108]	; (400c24 <board_init+0x138>)
  400bb8:	47a0      	blx	r4
  400bba:	200b      	movs	r0, #11
  400bbc:	47a0      	blx	r4
  400bbe:	200c      	movs	r0, #12
  400bc0:	47a0      	blx	r4
  400bc2:	2010      	movs	r0, #16
  400bc4:	47a0      	blx	r4
  400bc6:	2011      	movs	r0, #17
  400bc8:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400bca:	4b17      	ldr	r3, [pc, #92]	; (400c28 <board_init+0x13c>)
  400bcc:	f44f 7280 	mov.w	r2, #256	; 0x100
  400bd0:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400bd2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400bd6:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400bd8:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400bdc:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400be0:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400be2:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400be6:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400be8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400bec:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400bee:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400bf0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400bf4:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400bf6:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400bfa:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400bfc:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400bfe:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400c02:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400c04:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400c08:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400c0c:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400c10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400c12:	bf00      	nop
  400c14:	400e1850 	.word	0x400e1850
  400c18:	e000ed00 	.word	0xe000ed00
  400c1c:	400e0c00 	.word	0x400e0c00
  400c20:	5a00080c 	.word	0x5a00080c
  400c24:	00401039 	.word	0x00401039
  400c28:	400e1200 	.word	0x400e1200

00400c2c <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400c2c:	6301      	str	r1, [r0, #48]	; 0x30
  400c2e:	4770      	bx	lr

00400c30 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400c30:	6341      	str	r1, [r0, #52]	; 0x34
  400c32:	4770      	bx	lr

00400c34 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400c34:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400c36:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400c3a:	d03a      	beq.n	400cb2 <pio_set_peripheral+0x7e>
  400c3c:	d813      	bhi.n	400c66 <pio_set_peripheral+0x32>
  400c3e:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400c42:	d025      	beq.n	400c90 <pio_set_peripheral+0x5c>
  400c44:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400c48:	d10a      	bne.n	400c60 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c4a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c4c:	4313      	orrs	r3, r2
  400c4e:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400c50:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400c52:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400c54:	400b      	ands	r3, r1
  400c56:	ea23 0302 	bic.w	r3, r3, r2
  400c5a:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400c5c:	6042      	str	r2, [r0, #4]
  400c5e:	4770      	bx	lr
	switch (ul_type) {
  400c60:	2900      	cmp	r1, #0
  400c62:	d1fb      	bne.n	400c5c <pio_set_peripheral+0x28>
  400c64:	4770      	bx	lr
  400c66:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400c6a:	d021      	beq.n	400cb0 <pio_set_peripheral+0x7c>
  400c6c:	d809      	bhi.n	400c82 <pio_set_peripheral+0x4e>
  400c6e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400c72:	d1f3      	bne.n	400c5c <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c74:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400c76:	4313      	orrs	r3, r2
  400c78:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400c7a:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400c7c:	4313      	orrs	r3, r2
  400c7e:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400c80:	e7ec      	b.n	400c5c <pio_set_peripheral+0x28>
	switch (ul_type) {
  400c82:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400c86:	d013      	beq.n	400cb0 <pio_set_peripheral+0x7c>
  400c88:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400c8c:	d010      	beq.n	400cb0 <pio_set_peripheral+0x7c>
  400c8e:	e7e5      	b.n	400c5c <pio_set_peripheral+0x28>
{
  400c90:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400c92:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400c94:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400c96:	43d3      	mvns	r3, r2
  400c98:	4021      	ands	r1, r4
  400c9a:	461c      	mov	r4, r3
  400c9c:	4019      	ands	r1, r3
  400c9e:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400ca0:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400ca2:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400ca4:	400b      	ands	r3, r1
  400ca6:	4023      	ands	r3, r4
  400ca8:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400caa:	6042      	str	r2, [r0, #4]
}
  400cac:	f85d 4b04 	ldr.w	r4, [sp], #4
  400cb0:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400cb2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400cb4:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400cb6:	400b      	ands	r3, r1
  400cb8:	ea23 0302 	bic.w	r3, r3, r2
  400cbc:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400cbe:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400cc0:	4313      	orrs	r3, r2
  400cc2:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400cc4:	e7ca      	b.n	400c5c <pio_set_peripheral+0x28>

00400cc6 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400cc6:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400cc8:	f012 0f01 	tst.w	r2, #1
  400ccc:	d10d      	bne.n	400cea <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400cce:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400cd0:	f012 0f0a 	tst.w	r2, #10
  400cd4:	d00b      	beq.n	400cee <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400cd6:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400cd8:	f012 0f02 	tst.w	r2, #2
  400cdc:	d109      	bne.n	400cf2 <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400cde:	f012 0f08 	tst.w	r2, #8
  400ce2:	d008      	beq.n	400cf6 <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400ce4:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400ce8:	e005      	b.n	400cf6 <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400cea:	6641      	str	r1, [r0, #100]	; 0x64
  400cec:	e7f0      	b.n	400cd0 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400cee:	6241      	str	r1, [r0, #36]	; 0x24
  400cf0:	e7f2      	b.n	400cd8 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400cf2:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400cf6:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400cf8:	6001      	str	r1, [r0, #0]
  400cfa:	4770      	bx	lr

00400cfc <pio_set_output>:
{
  400cfc:	b410      	push	{r4}
  400cfe:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400d00:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d02:	b94c      	cbnz	r4, 400d18 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400d04:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400d06:	b14b      	cbz	r3, 400d1c <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400d08:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400d0a:	b94a      	cbnz	r2, 400d20 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400d0c:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400d0e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400d10:	6001      	str	r1, [r0, #0]
}
  400d12:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d16:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400d18:	6641      	str	r1, [r0, #100]	; 0x64
  400d1a:	e7f4      	b.n	400d06 <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400d1c:	6541      	str	r1, [r0, #84]	; 0x54
  400d1e:	e7f4      	b.n	400d0a <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400d20:	6301      	str	r1, [r0, #48]	; 0x30
  400d22:	e7f4      	b.n	400d0e <pio_set_output+0x12>

00400d24 <pio_configure>:
{
  400d24:	b570      	push	{r4, r5, r6, lr}
  400d26:	b082      	sub	sp, #8
  400d28:	4605      	mov	r5, r0
  400d2a:	4616      	mov	r6, r2
  400d2c:	461c      	mov	r4, r3
	switch (ul_type) {
  400d2e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400d32:	d014      	beq.n	400d5e <pio_configure+0x3a>
  400d34:	d90a      	bls.n	400d4c <pio_configure+0x28>
  400d36:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d3a:	d024      	beq.n	400d86 <pio_configure+0x62>
  400d3c:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d40:	d021      	beq.n	400d86 <pio_configure+0x62>
  400d42:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400d46:	d017      	beq.n	400d78 <pio_configure+0x54>
		return 0;
  400d48:	2000      	movs	r0, #0
  400d4a:	e01a      	b.n	400d82 <pio_configure+0x5e>
	switch (ul_type) {
  400d4c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400d50:	d005      	beq.n	400d5e <pio_configure+0x3a>
  400d52:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400d56:	d002      	beq.n	400d5e <pio_configure+0x3a>
  400d58:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400d5c:	d1f4      	bne.n	400d48 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400d5e:	4632      	mov	r2, r6
  400d60:	4628      	mov	r0, r5
  400d62:	4b11      	ldr	r3, [pc, #68]	; (400da8 <pio_configure+0x84>)
  400d64:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400d66:	f014 0f01 	tst.w	r4, #1
  400d6a:	d102      	bne.n	400d72 <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400d6c:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400d6e:	2001      	movs	r0, #1
  400d70:	e007      	b.n	400d82 <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400d72:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400d74:	2001      	movs	r0, #1
  400d76:	e004      	b.n	400d82 <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400d78:	461a      	mov	r2, r3
  400d7a:	4631      	mov	r1, r6
  400d7c:	4b0b      	ldr	r3, [pc, #44]	; (400dac <pio_configure+0x88>)
  400d7e:	4798      	blx	r3
	return 1;
  400d80:	2001      	movs	r0, #1
}
  400d82:	b002      	add	sp, #8
  400d84:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400d86:	f004 0301 	and.w	r3, r4, #1
  400d8a:	9300      	str	r3, [sp, #0]
  400d8c:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400d90:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d94:	bf14      	ite	ne
  400d96:	2200      	movne	r2, #0
  400d98:	2201      	moveq	r2, #1
  400d9a:	4631      	mov	r1, r6
  400d9c:	4628      	mov	r0, r5
  400d9e:	4c04      	ldr	r4, [pc, #16]	; (400db0 <pio_configure+0x8c>)
  400da0:	47a0      	blx	r4
	return 1;
  400da2:	2001      	movs	r0, #1
		break;
  400da4:	e7ed      	b.n	400d82 <pio_configure+0x5e>
  400da6:	bf00      	nop
  400da8:	00400c35 	.word	0x00400c35
  400dac:	00400cc7 	.word	0x00400cc7
  400db0:	00400cfd 	.word	0x00400cfd

00400db4 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400db4:	f012 0f10 	tst.w	r2, #16
  400db8:	d012      	beq.n	400de0 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400dba:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400dbe:	f012 0f20 	tst.w	r2, #32
  400dc2:	d007      	beq.n	400dd4 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400dc4:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400dc8:	f012 0f40 	tst.w	r2, #64	; 0x40
  400dcc:	d005      	beq.n	400dda <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400dce:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400dd2:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400dd4:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400dd8:	e7f6      	b.n	400dc8 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400dda:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400dde:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400de0:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400de4:	4770      	bx	lr

00400de6 <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400de6:	6401      	str	r1, [r0, #64]	; 0x40
  400de8:	4770      	bx	lr

00400dea <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400dea:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400dec:	4770      	bx	lr

00400dee <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400dee:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400df0:	4770      	bx	lr
	...

00400df4 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400df4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400df8:	4604      	mov	r4, r0
  400dfa:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400dfc:	4b0e      	ldr	r3, [pc, #56]	; (400e38 <pio_handler_process+0x44>)
  400dfe:	4798      	blx	r3
  400e00:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400e02:	4620      	mov	r0, r4
  400e04:	4b0d      	ldr	r3, [pc, #52]	; (400e3c <pio_handler_process+0x48>)
  400e06:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400e08:	4005      	ands	r5, r0
  400e0a:	d013      	beq.n	400e34 <pio_handler_process+0x40>
  400e0c:	4c0c      	ldr	r4, [pc, #48]	; (400e40 <pio_handler_process+0x4c>)
  400e0e:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400e12:	e003      	b.n	400e1c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400e14:	42b4      	cmp	r4, r6
  400e16:	d00d      	beq.n	400e34 <pio_handler_process+0x40>
  400e18:	3410      	adds	r4, #16
		while (status != 0) {
  400e1a:	b15d      	cbz	r5, 400e34 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400e1c:	6820      	ldr	r0, [r4, #0]
  400e1e:	4540      	cmp	r0, r8
  400e20:	d1f8      	bne.n	400e14 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400e22:	6861      	ldr	r1, [r4, #4]
  400e24:	4229      	tst	r1, r5
  400e26:	d0f5      	beq.n	400e14 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400e28:	68e3      	ldr	r3, [r4, #12]
  400e2a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400e2c:	6863      	ldr	r3, [r4, #4]
  400e2e:	ea25 0503 	bic.w	r5, r5, r3
  400e32:	e7ef      	b.n	400e14 <pio_handler_process+0x20>
  400e34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400e38:	00400deb 	.word	0x00400deb
  400e3c:	00400def 	.word	0x00400def
  400e40:	20400bf8 	.word	0x20400bf8

00400e44 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400e44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400e46:	4c18      	ldr	r4, [pc, #96]	; (400ea8 <pio_handler_set+0x64>)
  400e48:	6826      	ldr	r6, [r4, #0]
  400e4a:	2e06      	cmp	r6, #6
  400e4c:	d82a      	bhi.n	400ea4 <pio_handler_set+0x60>
  400e4e:	f04f 0c00 	mov.w	ip, #0
  400e52:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e54:	4f15      	ldr	r7, [pc, #84]	; (400eac <pio_handler_set+0x68>)
  400e56:	e004      	b.n	400e62 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400e58:	3401      	adds	r4, #1
  400e5a:	b2e4      	uxtb	r4, r4
  400e5c:	46a4      	mov	ip, r4
  400e5e:	42a6      	cmp	r6, r4
  400e60:	d309      	bcc.n	400e76 <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400e62:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400e64:	0125      	lsls	r5, r4, #4
  400e66:	597d      	ldr	r5, [r7, r5]
  400e68:	428d      	cmp	r5, r1
  400e6a:	d1f5      	bne.n	400e58 <pio_handler_set+0x14>
  400e6c:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400e70:	686d      	ldr	r5, [r5, #4]
  400e72:	4295      	cmp	r5, r2
  400e74:	d1f0      	bne.n	400e58 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400e76:	4d0d      	ldr	r5, [pc, #52]	; (400eac <pio_handler_set+0x68>)
  400e78:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400e7c:	eb05 040e 	add.w	r4, r5, lr
  400e80:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400e84:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400e86:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400e88:	9906      	ldr	r1, [sp, #24]
  400e8a:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400e8c:	3601      	adds	r6, #1
  400e8e:	4566      	cmp	r6, ip
  400e90:	d005      	beq.n	400e9e <pio_handler_set+0x5a>
  400e92:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400e94:	461a      	mov	r2, r3
  400e96:	4b06      	ldr	r3, [pc, #24]	; (400eb0 <pio_handler_set+0x6c>)
  400e98:	4798      	blx	r3

	return 0;
  400e9a:	2000      	movs	r0, #0
  400e9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400e9e:	4902      	ldr	r1, [pc, #8]	; (400ea8 <pio_handler_set+0x64>)
  400ea0:	600e      	str	r6, [r1, #0]
  400ea2:	e7f6      	b.n	400e92 <pio_handler_set+0x4e>
		return 1;
  400ea4:	2001      	movs	r0, #1
}
  400ea6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400ea8:	20400c68 	.word	0x20400c68
  400eac:	20400bf8 	.word	0x20400bf8
  400eb0:	00400db5 	.word	0x00400db5

00400eb4 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400eb4:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400eb6:	210a      	movs	r1, #10
  400eb8:	4801      	ldr	r0, [pc, #4]	; (400ec0 <PIOA_Handler+0xc>)
  400eba:	4b02      	ldr	r3, [pc, #8]	; (400ec4 <PIOA_Handler+0x10>)
  400ebc:	4798      	blx	r3
  400ebe:	bd08      	pop	{r3, pc}
  400ec0:	400e0e00 	.word	0x400e0e00
  400ec4:	00400df5 	.word	0x00400df5

00400ec8 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400ec8:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400eca:	210b      	movs	r1, #11
  400ecc:	4801      	ldr	r0, [pc, #4]	; (400ed4 <PIOB_Handler+0xc>)
  400ece:	4b02      	ldr	r3, [pc, #8]	; (400ed8 <PIOB_Handler+0x10>)
  400ed0:	4798      	blx	r3
  400ed2:	bd08      	pop	{r3, pc}
  400ed4:	400e1000 	.word	0x400e1000
  400ed8:	00400df5 	.word	0x00400df5

00400edc <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400edc:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400ede:	210c      	movs	r1, #12
  400ee0:	4801      	ldr	r0, [pc, #4]	; (400ee8 <PIOC_Handler+0xc>)
  400ee2:	4b02      	ldr	r3, [pc, #8]	; (400eec <PIOC_Handler+0x10>)
  400ee4:	4798      	blx	r3
  400ee6:	bd08      	pop	{r3, pc}
  400ee8:	400e1200 	.word	0x400e1200
  400eec:	00400df5 	.word	0x00400df5

00400ef0 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400ef0:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400ef2:	2110      	movs	r1, #16
  400ef4:	4801      	ldr	r0, [pc, #4]	; (400efc <PIOD_Handler+0xc>)
  400ef6:	4b02      	ldr	r3, [pc, #8]	; (400f00 <PIOD_Handler+0x10>)
  400ef8:	4798      	blx	r3
  400efa:	bd08      	pop	{r3, pc}
  400efc:	400e1400 	.word	0x400e1400
  400f00:	00400df5 	.word	0x00400df5

00400f04 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400f04:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400f06:	2111      	movs	r1, #17
  400f08:	4801      	ldr	r0, [pc, #4]	; (400f10 <PIOE_Handler+0xc>)
  400f0a:	4b02      	ldr	r3, [pc, #8]	; (400f14 <PIOE_Handler+0x10>)
  400f0c:	4798      	blx	r3
  400f0e:	bd08      	pop	{r3, pc}
  400f10:	400e1600 	.word	0x400e1600
  400f14:	00400df5 	.word	0x00400df5

00400f18 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400f18:	2803      	cmp	r0, #3
  400f1a:	d011      	beq.n	400f40 <pmc_mck_set_division+0x28>
  400f1c:	2804      	cmp	r0, #4
  400f1e:	d012      	beq.n	400f46 <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400f20:	2802      	cmp	r0, #2
  400f22:	bf0c      	ite	eq
  400f24:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400f28:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400f2a:	4a08      	ldr	r2, [pc, #32]	; (400f4c <pmc_mck_set_division+0x34>)
  400f2c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f2e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400f32:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400f34:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f36:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f38:	f013 0f08 	tst.w	r3, #8
  400f3c:	d0fb      	beq.n	400f36 <pmc_mck_set_division+0x1e>
}
  400f3e:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400f40:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400f44:	e7f1      	b.n	400f2a <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400f46:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400f4a:	e7ee      	b.n	400f2a <pmc_mck_set_division+0x12>
  400f4c:	400e0600 	.word	0x400e0600

00400f50 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400f50:	4a17      	ldr	r2, [pc, #92]	; (400fb0 <pmc_switch_mck_to_pllack+0x60>)
  400f52:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f54:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400f58:	4318      	orrs	r0, r3
  400f5a:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f5c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f5e:	f013 0f08 	tst.w	r3, #8
  400f62:	d10a      	bne.n	400f7a <pmc_switch_mck_to_pllack+0x2a>
  400f64:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400f68:	4911      	ldr	r1, [pc, #68]	; (400fb0 <pmc_switch_mck_to_pllack+0x60>)
  400f6a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400f6c:	f012 0f08 	tst.w	r2, #8
  400f70:	d103      	bne.n	400f7a <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400f72:	3b01      	subs	r3, #1
  400f74:	d1f9      	bne.n	400f6a <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400f76:	2001      	movs	r0, #1
  400f78:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400f7a:	4a0d      	ldr	r2, [pc, #52]	; (400fb0 <pmc_switch_mck_to_pllack+0x60>)
  400f7c:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f7e:	f023 0303 	bic.w	r3, r3, #3
  400f82:	f043 0302 	orr.w	r3, r3, #2
  400f86:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400f88:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f8a:	f013 0f08 	tst.w	r3, #8
  400f8e:	d10a      	bne.n	400fa6 <pmc_switch_mck_to_pllack+0x56>
  400f90:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400f94:	4906      	ldr	r1, [pc, #24]	; (400fb0 <pmc_switch_mck_to_pllack+0x60>)
  400f96:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400f98:	f012 0f08 	tst.w	r2, #8
  400f9c:	d105      	bne.n	400faa <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400f9e:	3b01      	subs	r3, #1
  400fa0:	d1f9      	bne.n	400f96 <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400fa2:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400fa4:	4770      	bx	lr
	return 0;
  400fa6:	2000      	movs	r0, #0
  400fa8:	4770      	bx	lr
  400faa:	2000      	movs	r0, #0
  400fac:	4770      	bx	lr
  400fae:	bf00      	nop
  400fb0:	400e0600 	.word	0x400e0600

00400fb4 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400fb4:	b9a0      	cbnz	r0, 400fe0 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400fb6:	480e      	ldr	r0, [pc, #56]	; (400ff0 <pmc_switch_mainck_to_xtal+0x3c>)
  400fb8:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400fba:	0209      	lsls	r1, r1, #8
  400fbc:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400fbe:	4a0d      	ldr	r2, [pc, #52]	; (400ff4 <pmc_switch_mainck_to_xtal+0x40>)
  400fc0:	401a      	ands	r2, r3
  400fc2:	4b0d      	ldr	r3, [pc, #52]	; (400ff8 <pmc_switch_mainck_to_xtal+0x44>)
  400fc4:	4313      	orrs	r3, r2
  400fc6:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400fc8:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400fca:	4602      	mov	r2, r0
  400fcc:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fce:	f013 0f01 	tst.w	r3, #1
  400fd2:	d0fb      	beq.n	400fcc <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400fd4:	4a06      	ldr	r2, [pc, #24]	; (400ff0 <pmc_switch_mainck_to_xtal+0x3c>)
  400fd6:	6a11      	ldr	r1, [r2, #32]
  400fd8:	4b08      	ldr	r3, [pc, #32]	; (400ffc <pmc_switch_mainck_to_xtal+0x48>)
  400fda:	430b      	orrs	r3, r1
  400fdc:	6213      	str	r3, [r2, #32]
  400fde:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400fe0:	4903      	ldr	r1, [pc, #12]	; (400ff0 <pmc_switch_mainck_to_xtal+0x3c>)
  400fe2:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400fe4:	4a06      	ldr	r2, [pc, #24]	; (401000 <pmc_switch_mainck_to_xtal+0x4c>)
  400fe6:	401a      	ands	r2, r3
  400fe8:	4b06      	ldr	r3, [pc, #24]	; (401004 <pmc_switch_mainck_to_xtal+0x50>)
  400fea:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400fec:	620b      	str	r3, [r1, #32]
  400fee:	4770      	bx	lr
  400ff0:	400e0600 	.word	0x400e0600
  400ff4:	ffc8fffc 	.word	0xffc8fffc
  400ff8:	00370001 	.word	0x00370001
  400ffc:	01370000 	.word	0x01370000
  401000:	fec8fffc 	.word	0xfec8fffc
  401004:	01370002 	.word	0x01370002

00401008 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  401008:	4b02      	ldr	r3, [pc, #8]	; (401014 <pmc_osc_is_ready_mainck+0xc>)
  40100a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40100c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  401010:	4770      	bx	lr
  401012:	bf00      	nop
  401014:	400e0600 	.word	0x400e0600

00401018 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  401018:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  40101c:	4b01      	ldr	r3, [pc, #4]	; (401024 <pmc_disable_pllack+0xc>)
  40101e:	629a      	str	r2, [r3, #40]	; 0x28
  401020:	4770      	bx	lr
  401022:	bf00      	nop
  401024:	400e0600 	.word	0x400e0600

00401028 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  401028:	4b02      	ldr	r3, [pc, #8]	; (401034 <pmc_is_locked_pllack+0xc>)
  40102a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  40102c:	f000 0002 	and.w	r0, r0, #2
  401030:	4770      	bx	lr
  401032:	bf00      	nop
  401034:	400e0600 	.word	0x400e0600

00401038 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  401038:	283f      	cmp	r0, #63	; 0x3f
  40103a:	d81e      	bhi.n	40107a <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  40103c:	281f      	cmp	r0, #31
  40103e:	d80c      	bhi.n	40105a <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  401040:	4b11      	ldr	r3, [pc, #68]	; (401088 <pmc_enable_periph_clk+0x50>)
  401042:	699a      	ldr	r2, [r3, #24]
  401044:	2301      	movs	r3, #1
  401046:	4083      	lsls	r3, r0
  401048:	4393      	bics	r3, r2
  40104a:	d018      	beq.n	40107e <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  40104c:	2301      	movs	r3, #1
  40104e:	fa03 f000 	lsl.w	r0, r3, r0
  401052:	4b0d      	ldr	r3, [pc, #52]	; (401088 <pmc_enable_periph_clk+0x50>)
  401054:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  401056:	2000      	movs	r0, #0
  401058:	4770      	bx	lr
		ul_id -= 32;
  40105a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  40105c:	4b0a      	ldr	r3, [pc, #40]	; (401088 <pmc_enable_periph_clk+0x50>)
  40105e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  401062:	2301      	movs	r3, #1
  401064:	4083      	lsls	r3, r0
  401066:	4393      	bics	r3, r2
  401068:	d00b      	beq.n	401082 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  40106a:	2301      	movs	r3, #1
  40106c:	fa03 f000 	lsl.w	r0, r3, r0
  401070:	4b05      	ldr	r3, [pc, #20]	; (401088 <pmc_enable_periph_clk+0x50>)
  401072:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  401076:	2000      	movs	r0, #0
  401078:	4770      	bx	lr
		return 1;
  40107a:	2001      	movs	r0, #1
  40107c:	4770      	bx	lr
	return 0;
  40107e:	2000      	movs	r0, #0
  401080:	4770      	bx	lr
  401082:	2000      	movs	r0, #0
}
  401084:	4770      	bx	lr
  401086:	bf00      	nop
  401088:	400e0600 	.word	0x400e0600

0040108c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  40108c:	e7fe      	b.n	40108c <Dummy_Handler>
	...

00401090 <Reset_Handler>:
{
  401090:	b500      	push	{lr}
  401092:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401094:	4b25      	ldr	r3, [pc, #148]	; (40112c <Reset_Handler+0x9c>)
  401096:	4a26      	ldr	r2, [pc, #152]	; (401130 <Reset_Handler+0xa0>)
  401098:	429a      	cmp	r2, r3
  40109a:	d010      	beq.n	4010be <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  40109c:	4b25      	ldr	r3, [pc, #148]	; (401134 <Reset_Handler+0xa4>)
  40109e:	4a23      	ldr	r2, [pc, #140]	; (40112c <Reset_Handler+0x9c>)
  4010a0:	429a      	cmp	r2, r3
  4010a2:	d20c      	bcs.n	4010be <Reset_Handler+0x2e>
  4010a4:	3b01      	subs	r3, #1
  4010a6:	1a9b      	subs	r3, r3, r2
  4010a8:	f023 0303 	bic.w	r3, r3, #3
  4010ac:	3304      	adds	r3, #4
  4010ae:	4413      	add	r3, r2
  4010b0:	491f      	ldr	r1, [pc, #124]	; (401130 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4010b2:	f851 0b04 	ldr.w	r0, [r1], #4
  4010b6:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4010ba:	429a      	cmp	r2, r3
  4010bc:	d1f9      	bne.n	4010b2 <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4010be:	4b1e      	ldr	r3, [pc, #120]	; (401138 <Reset_Handler+0xa8>)
  4010c0:	4a1e      	ldr	r2, [pc, #120]	; (40113c <Reset_Handler+0xac>)
  4010c2:	429a      	cmp	r2, r3
  4010c4:	d20a      	bcs.n	4010dc <Reset_Handler+0x4c>
  4010c6:	3b01      	subs	r3, #1
  4010c8:	1a9b      	subs	r3, r3, r2
  4010ca:	f023 0303 	bic.w	r3, r3, #3
  4010ce:	3304      	adds	r3, #4
  4010d0:	4413      	add	r3, r2
                *pDest++ = 0;
  4010d2:	2100      	movs	r1, #0
  4010d4:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4010d8:	4293      	cmp	r3, r2
  4010da:	d1fb      	bne.n	4010d4 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4010dc:	4a18      	ldr	r2, [pc, #96]	; (401140 <Reset_Handler+0xb0>)
  4010de:	4b19      	ldr	r3, [pc, #100]	; (401144 <Reset_Handler+0xb4>)
  4010e0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4010e4:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4010e6:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4010ea:	fab3 f383 	clz	r3, r3
  4010ee:	095b      	lsrs	r3, r3, #5
  4010f0:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4010f2:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4010f4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4010f8:	2200      	movs	r2, #0
  4010fa:	4b13      	ldr	r3, [pc, #76]	; (401148 <Reset_Handler+0xb8>)
  4010fc:	701a      	strb	r2, [r3, #0]
	return flags;
  4010fe:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401100:	4a12      	ldr	r2, [pc, #72]	; (40114c <Reset_Handler+0xbc>)
  401102:	6813      	ldr	r3, [r2, #0]
  401104:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401108:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  40110a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40110e:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  401112:	b129      	cbz	r1, 401120 <Reset_Handler+0x90>
		cpu_irq_enable();
  401114:	2201      	movs	r2, #1
  401116:	4b0c      	ldr	r3, [pc, #48]	; (401148 <Reset_Handler+0xb8>)
  401118:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40111a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40111e:	b662      	cpsie	i
        __libc_init_array();
  401120:	4b0b      	ldr	r3, [pc, #44]	; (401150 <Reset_Handler+0xc0>)
  401122:	4798      	blx	r3
        main();
  401124:	4b0b      	ldr	r3, [pc, #44]	; (401154 <Reset_Handler+0xc4>)
  401126:	4798      	blx	r3
  401128:	e7fe      	b.n	401128 <Reset_Handler+0x98>
  40112a:	bf00      	nop
  40112c:	20400000 	.word	0x20400000
  401130:	004074bc 	.word	0x004074bc
  401134:	204009d0 	.word	0x204009d0
  401138:	20400d00 	.word	0x20400d00
  40113c:	204009d0 	.word	0x204009d0
  401140:	e000ed00 	.word	0xe000ed00
  401144:	00400000 	.word	0x00400000
  401148:	20400018 	.word	0x20400018
  40114c:	e000ed88 	.word	0xe000ed88
  401150:	00401fa5 	.word	0x00401fa5
  401154:	004015e9 	.word	0x004015e9

00401158 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401158:	4b3b      	ldr	r3, [pc, #236]	; (401248 <SystemCoreClockUpdate+0xf0>)
  40115a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40115c:	f003 0303 	and.w	r3, r3, #3
  401160:	2b01      	cmp	r3, #1
  401162:	d01d      	beq.n	4011a0 <SystemCoreClockUpdate+0x48>
  401164:	b183      	cbz	r3, 401188 <SystemCoreClockUpdate+0x30>
  401166:	2b02      	cmp	r3, #2
  401168:	d036      	beq.n	4011d8 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  40116a:	4b37      	ldr	r3, [pc, #220]	; (401248 <SystemCoreClockUpdate+0xf0>)
  40116c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40116e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401172:	2b70      	cmp	r3, #112	; 0x70
  401174:	d05f      	beq.n	401236 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401176:	4b34      	ldr	r3, [pc, #208]	; (401248 <SystemCoreClockUpdate+0xf0>)
  401178:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40117a:	4934      	ldr	r1, [pc, #208]	; (40124c <SystemCoreClockUpdate+0xf4>)
  40117c:	f3c2 1202 	ubfx	r2, r2, #4, #3
  401180:	680b      	ldr	r3, [r1, #0]
  401182:	40d3      	lsrs	r3, r2
  401184:	600b      	str	r3, [r1, #0]
  401186:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401188:	4b31      	ldr	r3, [pc, #196]	; (401250 <SystemCoreClockUpdate+0xf8>)
  40118a:	695b      	ldr	r3, [r3, #20]
  40118c:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401190:	bf14      	ite	ne
  401192:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401196:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40119a:	4b2c      	ldr	r3, [pc, #176]	; (40124c <SystemCoreClockUpdate+0xf4>)
  40119c:	601a      	str	r2, [r3, #0]
  40119e:	e7e4      	b.n	40116a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4011a0:	4b29      	ldr	r3, [pc, #164]	; (401248 <SystemCoreClockUpdate+0xf0>)
  4011a2:	6a1b      	ldr	r3, [r3, #32]
  4011a4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4011a8:	d003      	beq.n	4011b2 <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4011aa:	4a2a      	ldr	r2, [pc, #168]	; (401254 <SystemCoreClockUpdate+0xfc>)
  4011ac:	4b27      	ldr	r3, [pc, #156]	; (40124c <SystemCoreClockUpdate+0xf4>)
  4011ae:	601a      	str	r2, [r3, #0]
  4011b0:	e7db      	b.n	40116a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4011b2:	4a29      	ldr	r2, [pc, #164]	; (401258 <SystemCoreClockUpdate+0x100>)
  4011b4:	4b25      	ldr	r3, [pc, #148]	; (40124c <SystemCoreClockUpdate+0xf4>)
  4011b6:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4011b8:	4b23      	ldr	r3, [pc, #140]	; (401248 <SystemCoreClockUpdate+0xf0>)
  4011ba:	6a1b      	ldr	r3, [r3, #32]
  4011bc:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4011c0:	2b10      	cmp	r3, #16
  4011c2:	d005      	beq.n	4011d0 <SystemCoreClockUpdate+0x78>
  4011c4:	2b20      	cmp	r3, #32
  4011c6:	d1d0      	bne.n	40116a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4011c8:	4a22      	ldr	r2, [pc, #136]	; (401254 <SystemCoreClockUpdate+0xfc>)
  4011ca:	4b20      	ldr	r3, [pc, #128]	; (40124c <SystemCoreClockUpdate+0xf4>)
  4011cc:	601a      	str	r2, [r3, #0]
          break;
  4011ce:	e7cc      	b.n	40116a <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4011d0:	4a22      	ldr	r2, [pc, #136]	; (40125c <SystemCoreClockUpdate+0x104>)
  4011d2:	4b1e      	ldr	r3, [pc, #120]	; (40124c <SystemCoreClockUpdate+0xf4>)
  4011d4:	601a      	str	r2, [r3, #0]
          break;
  4011d6:	e7c8      	b.n	40116a <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4011d8:	4b1b      	ldr	r3, [pc, #108]	; (401248 <SystemCoreClockUpdate+0xf0>)
  4011da:	6a1b      	ldr	r3, [r3, #32]
  4011dc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4011e0:	d016      	beq.n	401210 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4011e2:	4a1c      	ldr	r2, [pc, #112]	; (401254 <SystemCoreClockUpdate+0xfc>)
  4011e4:	4b19      	ldr	r3, [pc, #100]	; (40124c <SystemCoreClockUpdate+0xf4>)
  4011e6:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4011e8:	4b17      	ldr	r3, [pc, #92]	; (401248 <SystemCoreClockUpdate+0xf0>)
  4011ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4011ec:	f003 0303 	and.w	r3, r3, #3
  4011f0:	2b02      	cmp	r3, #2
  4011f2:	d1ba      	bne.n	40116a <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4011f4:	4a14      	ldr	r2, [pc, #80]	; (401248 <SystemCoreClockUpdate+0xf0>)
  4011f6:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4011f8:	6a92      	ldr	r2, [r2, #40]	; 0x28
  4011fa:	4814      	ldr	r0, [pc, #80]	; (40124c <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4011fc:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401200:	6803      	ldr	r3, [r0, #0]
  401202:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401206:	b2d2      	uxtb	r2, r2
  401208:	fbb3 f3f2 	udiv	r3, r3, r2
  40120c:	6003      	str	r3, [r0, #0]
  40120e:	e7ac      	b.n	40116a <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401210:	4a11      	ldr	r2, [pc, #68]	; (401258 <SystemCoreClockUpdate+0x100>)
  401212:	4b0e      	ldr	r3, [pc, #56]	; (40124c <SystemCoreClockUpdate+0xf4>)
  401214:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401216:	4b0c      	ldr	r3, [pc, #48]	; (401248 <SystemCoreClockUpdate+0xf0>)
  401218:	6a1b      	ldr	r3, [r3, #32]
  40121a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40121e:	2b10      	cmp	r3, #16
  401220:	d005      	beq.n	40122e <SystemCoreClockUpdate+0xd6>
  401222:	2b20      	cmp	r3, #32
  401224:	d1e0      	bne.n	4011e8 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401226:	4a0b      	ldr	r2, [pc, #44]	; (401254 <SystemCoreClockUpdate+0xfc>)
  401228:	4b08      	ldr	r3, [pc, #32]	; (40124c <SystemCoreClockUpdate+0xf4>)
  40122a:	601a      	str	r2, [r3, #0]
          break;
  40122c:	e7dc      	b.n	4011e8 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  40122e:	4a0b      	ldr	r2, [pc, #44]	; (40125c <SystemCoreClockUpdate+0x104>)
  401230:	4b06      	ldr	r3, [pc, #24]	; (40124c <SystemCoreClockUpdate+0xf4>)
  401232:	601a      	str	r2, [r3, #0]
          break;
  401234:	e7d8      	b.n	4011e8 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401236:	4a05      	ldr	r2, [pc, #20]	; (40124c <SystemCoreClockUpdate+0xf4>)
  401238:	6813      	ldr	r3, [r2, #0]
  40123a:	4909      	ldr	r1, [pc, #36]	; (401260 <SystemCoreClockUpdate+0x108>)
  40123c:	fba1 1303 	umull	r1, r3, r1, r3
  401240:	085b      	lsrs	r3, r3, #1
  401242:	6013      	str	r3, [r2, #0]
  401244:	4770      	bx	lr
  401246:	bf00      	nop
  401248:	400e0600 	.word	0x400e0600
  40124c:	2040001c 	.word	0x2040001c
  401250:	400e1810 	.word	0x400e1810
  401254:	00b71b00 	.word	0x00b71b00
  401258:	003d0900 	.word	0x003d0900
  40125c:	007a1200 	.word	0x007a1200
  401260:	aaaaaaab 	.word	0xaaaaaaab

00401264 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401264:	4b16      	ldr	r3, [pc, #88]	; (4012c0 <system_init_flash+0x5c>)
  401266:	4298      	cmp	r0, r3
  401268:	d913      	bls.n	401292 <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  40126a:	4b16      	ldr	r3, [pc, #88]	; (4012c4 <system_init_flash+0x60>)
  40126c:	4298      	cmp	r0, r3
  40126e:	d915      	bls.n	40129c <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  401270:	4b15      	ldr	r3, [pc, #84]	; (4012c8 <system_init_flash+0x64>)
  401272:	4298      	cmp	r0, r3
  401274:	d916      	bls.n	4012a4 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401276:	4b15      	ldr	r3, [pc, #84]	; (4012cc <system_init_flash+0x68>)
  401278:	4298      	cmp	r0, r3
  40127a:	d917      	bls.n	4012ac <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  40127c:	4b14      	ldr	r3, [pc, #80]	; (4012d0 <system_init_flash+0x6c>)
  40127e:	4298      	cmp	r0, r3
  401280:	d918      	bls.n	4012b4 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  401282:	4b14      	ldr	r3, [pc, #80]	; (4012d4 <system_init_flash+0x70>)
  401284:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401286:	bf94      	ite	ls
  401288:	4a13      	ldrls	r2, [pc, #76]	; (4012d8 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  40128a:	4a14      	ldrhi	r2, [pc, #80]	; (4012dc <system_init_flash+0x78>)
  40128c:	4b14      	ldr	r3, [pc, #80]	; (4012e0 <system_init_flash+0x7c>)
  40128e:	601a      	str	r2, [r3, #0]
  401290:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  401292:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401296:	4b12      	ldr	r3, [pc, #72]	; (4012e0 <system_init_flash+0x7c>)
  401298:	601a      	str	r2, [r3, #0]
  40129a:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  40129c:	4a11      	ldr	r2, [pc, #68]	; (4012e4 <system_init_flash+0x80>)
  40129e:	4b10      	ldr	r3, [pc, #64]	; (4012e0 <system_init_flash+0x7c>)
  4012a0:	601a      	str	r2, [r3, #0]
  4012a2:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4012a4:	4a10      	ldr	r2, [pc, #64]	; (4012e8 <system_init_flash+0x84>)
  4012a6:	4b0e      	ldr	r3, [pc, #56]	; (4012e0 <system_init_flash+0x7c>)
  4012a8:	601a      	str	r2, [r3, #0]
  4012aa:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4012ac:	4a0f      	ldr	r2, [pc, #60]	; (4012ec <system_init_flash+0x88>)
  4012ae:	4b0c      	ldr	r3, [pc, #48]	; (4012e0 <system_init_flash+0x7c>)
  4012b0:	601a      	str	r2, [r3, #0]
  4012b2:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4012b4:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4012b8:	4b09      	ldr	r3, [pc, #36]	; (4012e0 <system_init_flash+0x7c>)
  4012ba:	601a      	str	r2, [r3, #0]
  4012bc:	4770      	bx	lr
  4012be:	bf00      	nop
  4012c0:	015ef3bf 	.word	0x015ef3bf
  4012c4:	02bde77f 	.word	0x02bde77f
  4012c8:	041cdb3f 	.word	0x041cdb3f
  4012cc:	057bceff 	.word	0x057bceff
  4012d0:	06dac2bf 	.word	0x06dac2bf
  4012d4:	0839b67f 	.word	0x0839b67f
  4012d8:	04000500 	.word	0x04000500
  4012dc:	04000600 	.word	0x04000600
  4012e0:	400e0c00 	.word	0x400e0c00
  4012e4:	04000100 	.word	0x04000100
  4012e8:	04000200 	.word	0x04000200
  4012ec:	04000300 	.word	0x04000300

004012f0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4012f0:	4b0a      	ldr	r3, [pc, #40]	; (40131c <_sbrk+0x2c>)
  4012f2:	681b      	ldr	r3, [r3, #0]
  4012f4:	b153      	cbz	r3, 40130c <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4012f6:	4b09      	ldr	r3, [pc, #36]	; (40131c <_sbrk+0x2c>)
  4012f8:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4012fa:	181a      	adds	r2, r3, r0
  4012fc:	4908      	ldr	r1, [pc, #32]	; (401320 <_sbrk+0x30>)
  4012fe:	4291      	cmp	r1, r2
  401300:	db08      	blt.n	401314 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  401302:	4610      	mov	r0, r2
  401304:	4a05      	ldr	r2, [pc, #20]	; (40131c <_sbrk+0x2c>)
  401306:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401308:	4618      	mov	r0, r3
  40130a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  40130c:	4a05      	ldr	r2, [pc, #20]	; (401324 <_sbrk+0x34>)
  40130e:	4b03      	ldr	r3, [pc, #12]	; (40131c <_sbrk+0x2c>)
  401310:	601a      	str	r2, [r3, #0]
  401312:	e7f0      	b.n	4012f6 <_sbrk+0x6>
		return (caddr_t) -1;	
  401314:	f04f 30ff 	mov.w	r0, #4294967295
}
  401318:	4770      	bx	lr
  40131a:	bf00      	nop
  40131c:	20400c6c 	.word	0x20400c6c
  401320:	2045fffc 	.word	0x2045fffc
  401324:	20402f00 	.word	0x20402f00

00401328 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  401328:	f04f 30ff 	mov.w	r0, #4294967295
  40132c:	4770      	bx	lr

0040132e <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  40132e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  401332:	604b      	str	r3, [r1, #4]

	return 0;
}
  401334:	2000      	movs	r0, #0
  401336:	4770      	bx	lr

00401338 <_lseek>:
}

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  401338:	2000      	movs	r0, #0
  40133a:	4770      	bx	lr

0040133c <but_callback>:
  setbuf(stdout, NULL);
}

void but_callback(void)
{
	but_flag = 1;
  40133c:	2201      	movs	r2, #1
  40133e:	4b01      	ldr	r3, [pc, #4]	; (401344 <but_callback+0x8>)
  401340:	701a      	strb	r2, [r3, #0]
  401342:	4770      	bx	lr
  401344:	20400cd4 	.word	0x20400cd4

00401348 <callback_echo>:
}

void callback_echo(void)
{
	echo_flag = !echo_flag;
  401348:	4a03      	ldr	r2, [pc, #12]	; (401358 <callback_echo+0x10>)
  40134a:	7813      	ldrb	r3, [r2, #0]
  40134c:	fab3 f383 	clz	r3, r3
  401350:	095b      	lsrs	r3, r3, #5
  401352:	7013      	strb	r3, [r2, #0]
  401354:	4770      	bx	lr
  401356:	bf00      	nop
  401358:	20400ccd 	.word	0x20400ccd

0040135c <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  40135c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40135e:	b083      	sub	sp, #12
  401360:	4605      	mov	r5, r0
  401362:	460c      	mov	r4, r1
	uint32_t val = 0;
  401364:	2300      	movs	r3, #0
  401366:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  401368:	4b2a      	ldr	r3, [pc, #168]	; (401414 <usart_serial_getchar+0xb8>)
  40136a:	4298      	cmp	r0, r3
  40136c:	d013      	beq.n	401396 <usart_serial_getchar+0x3a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  40136e:	4b2a      	ldr	r3, [pc, #168]	; (401418 <usart_serial_getchar+0xbc>)
  401370:	4298      	cmp	r0, r3
  401372:	d018      	beq.n	4013a6 <usart_serial_getchar+0x4a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART2
	if (UART2 == (Uart*)p_usart) {
  401374:	4b29      	ldr	r3, [pc, #164]	; (40141c <usart_serial_getchar+0xc0>)
  401376:	4298      	cmp	r0, r3
  401378:	d01d      	beq.n	4013b6 <usart_serial_getchar+0x5a>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART3
	if (UART3 == (Uart*)p_usart) {
  40137a:	4b29      	ldr	r3, [pc, #164]	; (401420 <usart_serial_getchar+0xc4>)
  40137c:	429d      	cmp	r5, r3
  40137e:	d022      	beq.n	4013c6 <usart_serial_getchar+0x6a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  401380:	4b28      	ldr	r3, [pc, #160]	; (401424 <usart_serial_getchar+0xc8>)
  401382:	429d      	cmp	r5, r3
  401384:	d027      	beq.n	4013d6 <usart_serial_getchar+0x7a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  401386:	4b28      	ldr	r3, [pc, #160]	; (401428 <usart_serial_getchar+0xcc>)
  401388:	429d      	cmp	r5, r3
  40138a:	d02e      	beq.n	4013ea <usart_serial_getchar+0x8e>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
  40138c:	4b27      	ldr	r3, [pc, #156]	; (40142c <usart_serial_getchar+0xd0>)
  40138e:	429d      	cmp	r5, r3
  401390:	d035      	beq.n	4013fe <usart_serial_getchar+0xa2>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  401392:	b003      	add	sp, #12
  401394:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (uart_read((Uart*)p_usart, data));
  401396:	461f      	mov	r7, r3
  401398:	4e25      	ldr	r6, [pc, #148]	; (401430 <usart_serial_getchar+0xd4>)
  40139a:	4621      	mov	r1, r4
  40139c:	4638      	mov	r0, r7
  40139e:	47b0      	blx	r6
  4013a0:	2800      	cmp	r0, #0
  4013a2:	d1fa      	bne.n	40139a <usart_serial_getchar+0x3e>
  4013a4:	e7e9      	b.n	40137a <usart_serial_getchar+0x1e>
		while (uart_read((Uart*)p_usart, data));
  4013a6:	461f      	mov	r7, r3
  4013a8:	4e21      	ldr	r6, [pc, #132]	; (401430 <usart_serial_getchar+0xd4>)
  4013aa:	4621      	mov	r1, r4
  4013ac:	4638      	mov	r0, r7
  4013ae:	47b0      	blx	r6
  4013b0:	2800      	cmp	r0, #0
  4013b2:	d1fa      	bne.n	4013aa <usart_serial_getchar+0x4e>
  4013b4:	e7e4      	b.n	401380 <usart_serial_getchar+0x24>
		while (uart_read((Uart*)p_usart, data));
  4013b6:	461f      	mov	r7, r3
  4013b8:	4e1d      	ldr	r6, [pc, #116]	; (401430 <usart_serial_getchar+0xd4>)
  4013ba:	4621      	mov	r1, r4
  4013bc:	4638      	mov	r0, r7
  4013be:	47b0      	blx	r6
  4013c0:	2800      	cmp	r0, #0
  4013c2:	d1fa      	bne.n	4013ba <usart_serial_getchar+0x5e>
  4013c4:	e7df      	b.n	401386 <usart_serial_getchar+0x2a>
		while (uart_read((Uart*)p_usart, data));
  4013c6:	461f      	mov	r7, r3
  4013c8:	4e19      	ldr	r6, [pc, #100]	; (401430 <usart_serial_getchar+0xd4>)
  4013ca:	4621      	mov	r1, r4
  4013cc:	4638      	mov	r0, r7
  4013ce:	47b0      	blx	r6
  4013d0:	2800      	cmp	r0, #0
  4013d2:	d1fa      	bne.n	4013ca <usart_serial_getchar+0x6e>
  4013d4:	e7da      	b.n	40138c <usart_serial_getchar+0x30>
		while (usart_read(p_usart, &val));
  4013d6:	461e      	mov	r6, r3
  4013d8:	4d16      	ldr	r5, [pc, #88]	; (401434 <usart_serial_getchar+0xd8>)
  4013da:	a901      	add	r1, sp, #4
  4013dc:	4630      	mov	r0, r6
  4013de:	47a8      	blx	r5
  4013e0:	2800      	cmp	r0, #0
  4013e2:	d1fa      	bne.n	4013da <usart_serial_getchar+0x7e>
		*data = (uint8_t)(val & 0xFF);
  4013e4:	9b01      	ldr	r3, [sp, #4]
  4013e6:	7023      	strb	r3, [r4, #0]
  4013e8:	e7d3      	b.n	401392 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  4013ea:	461e      	mov	r6, r3
  4013ec:	4d11      	ldr	r5, [pc, #68]	; (401434 <usart_serial_getchar+0xd8>)
  4013ee:	a901      	add	r1, sp, #4
  4013f0:	4630      	mov	r0, r6
  4013f2:	47a8      	blx	r5
  4013f4:	2800      	cmp	r0, #0
  4013f6:	d1fa      	bne.n	4013ee <usart_serial_getchar+0x92>
		*data = (uint8_t)(val & 0xFF);
  4013f8:	9b01      	ldr	r3, [sp, #4]
  4013fa:	7023      	strb	r3, [r4, #0]
  4013fc:	e7c9      	b.n	401392 <usart_serial_getchar+0x36>
		while (usart_read(p_usart, &val));
  4013fe:	461e      	mov	r6, r3
  401400:	4d0c      	ldr	r5, [pc, #48]	; (401434 <usart_serial_getchar+0xd8>)
  401402:	a901      	add	r1, sp, #4
  401404:	4630      	mov	r0, r6
  401406:	47a8      	blx	r5
  401408:	2800      	cmp	r0, #0
  40140a:	d1fa      	bne.n	401402 <usart_serial_getchar+0xa6>
		*data = (uint8_t)(val & 0xFF);
  40140c:	9b01      	ldr	r3, [sp, #4]
  40140e:	7023      	strb	r3, [r4, #0]
}
  401410:	e7bf      	b.n	401392 <usart_serial_getchar+0x36>
  401412:	bf00      	nop
  401414:	400e0800 	.word	0x400e0800
  401418:	400e0a00 	.word	0x400e0a00
  40141c:	400e1a00 	.word	0x400e1a00
  401420:	400e1c00 	.word	0x400e1c00
  401424:	40024000 	.word	0x40024000
  401428:	40028000 	.word	0x40028000
  40142c:	4002c000 	.word	0x4002c000
  401430:	004003bd 	.word	0x004003bd
  401434:	004004cb 	.word	0x004004cb

00401438 <usart_serial_putchar>:
{
  401438:	b570      	push	{r4, r5, r6, lr}
  40143a:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  40143c:	4b2a      	ldr	r3, [pc, #168]	; (4014e8 <usart_serial_putchar+0xb0>)
  40143e:	4298      	cmp	r0, r3
  401440:	d013      	beq.n	40146a <usart_serial_putchar+0x32>
	if (UART1 == (Uart*)p_usart) {
  401442:	4b2a      	ldr	r3, [pc, #168]	; (4014ec <usart_serial_putchar+0xb4>)
  401444:	4298      	cmp	r0, r3
  401446:	d019      	beq.n	40147c <usart_serial_putchar+0x44>
	if (UART2 == (Uart*)p_usart) {
  401448:	4b29      	ldr	r3, [pc, #164]	; (4014f0 <usart_serial_putchar+0xb8>)
  40144a:	4298      	cmp	r0, r3
  40144c:	d01f      	beq.n	40148e <usart_serial_putchar+0x56>
	if (UART3 == (Uart*)p_usart) {
  40144e:	4b29      	ldr	r3, [pc, #164]	; (4014f4 <usart_serial_putchar+0xbc>)
  401450:	4298      	cmp	r0, r3
  401452:	d025      	beq.n	4014a0 <usart_serial_putchar+0x68>
	if (USART0 == p_usart) {
  401454:	4b28      	ldr	r3, [pc, #160]	; (4014f8 <usart_serial_putchar+0xc0>)
  401456:	4298      	cmp	r0, r3
  401458:	d02b      	beq.n	4014b2 <usart_serial_putchar+0x7a>
	if (USART1 == p_usart) {
  40145a:	4b28      	ldr	r3, [pc, #160]	; (4014fc <usart_serial_putchar+0xc4>)
  40145c:	4298      	cmp	r0, r3
  40145e:	d031      	beq.n	4014c4 <usart_serial_putchar+0x8c>
	if (USART2 == p_usart) {
  401460:	4b27      	ldr	r3, [pc, #156]	; (401500 <usart_serial_putchar+0xc8>)
  401462:	4298      	cmp	r0, r3
  401464:	d037      	beq.n	4014d6 <usart_serial_putchar+0x9e>
	return 0;
  401466:	2000      	movs	r0, #0
}
  401468:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40146a:	461e      	mov	r6, r3
  40146c:	4d25      	ldr	r5, [pc, #148]	; (401504 <usart_serial_putchar+0xcc>)
  40146e:	4621      	mov	r1, r4
  401470:	4630      	mov	r0, r6
  401472:	47a8      	blx	r5
  401474:	2800      	cmp	r0, #0
  401476:	d1fa      	bne.n	40146e <usart_serial_putchar+0x36>
		return 1;
  401478:	2001      	movs	r0, #1
  40147a:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40147c:	461e      	mov	r6, r3
  40147e:	4d21      	ldr	r5, [pc, #132]	; (401504 <usart_serial_putchar+0xcc>)
  401480:	4621      	mov	r1, r4
  401482:	4630      	mov	r0, r6
  401484:	47a8      	blx	r5
  401486:	2800      	cmp	r0, #0
  401488:	d1fa      	bne.n	401480 <usart_serial_putchar+0x48>
		return 1;
  40148a:	2001      	movs	r0, #1
  40148c:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  40148e:	461e      	mov	r6, r3
  401490:	4d1c      	ldr	r5, [pc, #112]	; (401504 <usart_serial_putchar+0xcc>)
  401492:	4621      	mov	r1, r4
  401494:	4630      	mov	r0, r6
  401496:	47a8      	blx	r5
  401498:	2800      	cmp	r0, #0
  40149a:	d1fa      	bne.n	401492 <usart_serial_putchar+0x5a>
		return 1;
  40149c:	2001      	movs	r0, #1
  40149e:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  4014a0:	461e      	mov	r6, r3
  4014a2:	4d18      	ldr	r5, [pc, #96]	; (401504 <usart_serial_putchar+0xcc>)
  4014a4:	4621      	mov	r1, r4
  4014a6:	4630      	mov	r0, r6
  4014a8:	47a8      	blx	r5
  4014aa:	2800      	cmp	r0, #0
  4014ac:	d1fa      	bne.n	4014a4 <usart_serial_putchar+0x6c>
		return 1;
  4014ae:	2001      	movs	r0, #1
  4014b0:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  4014b2:	461e      	mov	r6, r3
  4014b4:	4d14      	ldr	r5, [pc, #80]	; (401508 <usart_serial_putchar+0xd0>)
  4014b6:	4621      	mov	r1, r4
  4014b8:	4630      	mov	r0, r6
  4014ba:	47a8      	blx	r5
  4014bc:	2800      	cmp	r0, #0
  4014be:	d1fa      	bne.n	4014b6 <usart_serial_putchar+0x7e>
		return 1;
  4014c0:	2001      	movs	r0, #1
  4014c2:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  4014c4:	461e      	mov	r6, r3
  4014c6:	4d10      	ldr	r5, [pc, #64]	; (401508 <usart_serial_putchar+0xd0>)
  4014c8:	4621      	mov	r1, r4
  4014ca:	4630      	mov	r0, r6
  4014cc:	47a8      	blx	r5
  4014ce:	2800      	cmp	r0, #0
  4014d0:	d1fa      	bne.n	4014c8 <usart_serial_putchar+0x90>
		return 1;
  4014d2:	2001      	movs	r0, #1
  4014d4:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
  4014d6:	461e      	mov	r6, r3
  4014d8:	4d0b      	ldr	r5, [pc, #44]	; (401508 <usart_serial_putchar+0xd0>)
  4014da:	4621      	mov	r1, r4
  4014dc:	4630      	mov	r0, r6
  4014de:	47a8      	blx	r5
  4014e0:	2800      	cmp	r0, #0
  4014e2:	d1fa      	bne.n	4014da <usart_serial_putchar+0xa2>
		return 1;
  4014e4:	2001      	movs	r0, #1
  4014e6:	bd70      	pop	{r4, r5, r6, pc}
  4014e8:	400e0800 	.word	0x400e0800
  4014ec:	400e0a00 	.word	0x400e0a00
  4014f0:	400e1a00 	.word	0x400e1a00
  4014f4:	400e1c00 	.word	0x400e1c00
  4014f8:	40024000 	.word	0x40024000
  4014fc:	40028000 	.word	0x40028000
  401500:	4002c000 	.word	0x4002c000
  401504:	004003ab 	.word	0x004003ab
  401508:	004004b5 	.word	0x004004b5

0040150c <io_init>:
}

int io_init(void) {	
  40150c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401510:	b083      	sub	sp, #12
	// Iniciando botoes
	// -- BUT 1 --
	pmc_enable_periph_clk(BUT_1_ID);
  401512:	2010      	movs	r0, #16
  401514:	4f29      	ldr	r7, [pc, #164]	; (4015bc <io_init+0xb0>)
  401516:	47b8      	blx	r7
	pio_configure(BUT_1, PIO_INPUT, BUT_1_IDX_MASK, PIO_PULLUP);
  401518:	4c29      	ldr	r4, [pc, #164]	; (4015c0 <io_init+0xb4>)
  40151a:	2301      	movs	r3, #1
  40151c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401520:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401524:	4620      	mov	r0, r4
  401526:	4e27      	ldr	r6, [pc, #156]	; (4015c4 <io_init+0xb8>)
  401528:	47b0      	blx	r6
	pio_handler_set(BUT_1, BUT_1_ID, BUT_1_IDX_MASK, PIO_IT_FALL_EDGE, but_callback);
  40152a:	4b27      	ldr	r3, [pc, #156]	; (4015c8 <io_init+0xbc>)
  40152c:	9300      	str	r3, [sp, #0]
  40152e:	2350      	movs	r3, #80	; 0x50
  401530:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401534:	2110      	movs	r1, #16
  401536:	4620      	mov	r0, r4
  401538:	f8df b09c 	ldr.w	fp, [pc, #156]	; 4015d8 <io_init+0xcc>
  40153c:	47d8      	blx	fp
	
	pio_enable_interrupt(BUT_1, BUT_1_IDX_MASK);
  40153e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401542:	4620      	mov	r0, r4
  401544:	f8df a094 	ldr.w	sl, [pc, #148]	; 4015dc <io_init+0xd0>
  401548:	47d0      	blx	sl
	pio_get_interrupt_status(BUT_1);
  40154a:	4620      	mov	r0, r4
  40154c:	f8df 9090 	ldr.w	r9, [pc, #144]	; 4015e0 <io_init+0xd4>
  401550:	47c8      	blx	r9
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401552:	4d1e      	ldr	r5, [pc, #120]	; (4015cc <io_init+0xc0>)
  401554:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  401558:	602b      	str	r3, [r5, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40155a:	f04f 0880 	mov.w	r8, #128	; 0x80
  40155e:	f885 8310 	strb.w	r8, [r5, #784]	; 0x310
	NVIC_SetPriority(BUT_1_ID, 4);
	// -- FIM --
	
	// Iniciando LED's
	// -- LED 1 --
	pmc_enable_periph_clk(LED_1_ID);
  401562:	200a      	movs	r0, #10
  401564:	47b8      	blx	r7
	pio_configure(LED_1, PIO_OUTPUT_1, LED_1_IDX_MASK, PIO_DEFAULT);
  401566:	2300      	movs	r3, #0
  401568:	2201      	movs	r2, #1
  40156a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40156e:	4818      	ldr	r0, [pc, #96]	; (4015d0 <io_init+0xc4>)
  401570:	47b0      	blx	r6

	// Configurar TRIG como output
	pmc_enable_periph_clk(TRIG_ID);
  401572:	2010      	movs	r0, #16
  401574:	47b8      	blx	r7
	pio_configure(TRIG, PIO_OUTPUT_0, TRIG_IDX_MASK, PIO_DEFAULT);
  401576:	2300      	movs	r3, #0
  401578:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  40157c:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
  401580:	4620      	mov	r0, r4
  401582:	47b0      	blx	r6

	// Configurar ECHO como inputs
	pmc_enable_periph_clk(ECHO_ID);
  401584:	200a      	movs	r0, #10
  401586:	47b8      	blx	r7
	pio_configure(ECHO, PIO_INPUT, ECHO_IDX_MASK, PIO_DEFAULT);
  401588:	2300      	movs	r3, #0
  40158a:	2240      	movs	r2, #64	; 0x40
  40158c:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  401590:	480f      	ldr	r0, [pc, #60]	; (4015d0 <io_init+0xc4>)
  401592:	47b0      	blx	r6
	pio_handler_set(ECHO, ECHO_ID, ECHO_IDX_MASK, PIO_IT_EDGE, callback_echo);
  401594:	4b0f      	ldr	r3, [pc, #60]	; (4015d4 <io_init+0xc8>)
  401596:	9300      	str	r3, [sp, #0]
  401598:	2340      	movs	r3, #64	; 0x40
  40159a:	461a      	mov	r2, r3
  40159c:	210a      	movs	r1, #10
  40159e:	480c      	ldr	r0, [pc, #48]	; (4015d0 <io_init+0xc4>)
  4015a0:	47d8      	blx	fp

	pio_enable_interrupt(ECHO, ECHO_IDX_MASK);
  4015a2:	2140      	movs	r1, #64	; 0x40
  4015a4:	480a      	ldr	r0, [pc, #40]	; (4015d0 <io_init+0xc4>)
  4015a6:	47d0      	blx	sl
	pio_get_interrupt_status(ECHO);
  4015a8:	4809      	ldr	r0, [pc, #36]	; (4015d0 <io_init+0xc4>)
  4015aa:	47c8      	blx	r9
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4015ac:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4015b0:	602b      	str	r3, [r5, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4015b2:	f885 830a 	strb.w	r8, [r5, #778]	; 0x30a

	NVIC_EnableIRQ(ECHO_ID);
	NVIC_SetPriority(ECHO_ID, 4);

	
}
  4015b6:	b003      	add	sp, #12
  4015b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4015bc:	00401039 	.word	0x00401039
  4015c0:	400e1400 	.word	0x400e1400
  4015c4:	00400d25 	.word	0x00400d25
  4015c8:	0040133d 	.word	0x0040133d
  4015cc:	e000e100 	.word	0xe000e100
  4015d0:	400e0e00 	.word	0x400e0e00
  4015d4:	00401349 	.word	0x00401349
  4015d8:	00400e45 	.word	0x00400e45
  4015dc:	00400de7 	.word	0x00400de7
  4015e0:	00400deb 	.word	0x00400deb
  4015e4:	00000000 	.word	0x00000000

004015e8 <main>:
/**
 *  \brief FreeRTOS Real Time Kernel example entry point.
 *
 *  \return Unused (ANSI-C compatibility).
 */
int main (void) {
  4015e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4015ec:	b089      	sub	sp, #36	; 0x24
	board_init();
  4015ee:	4b4c      	ldr	r3, [pc, #304]	; (401720 <main+0x138>)
  4015f0:	4798      	blx	r3
	sysclk_init();
  4015f2:	4b4c      	ldr	r3, [pc, #304]	; (401724 <main+0x13c>)
  4015f4:	4798      	blx	r3
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  4015f6:	4d4c      	ldr	r5, [pc, #304]	; (401728 <main+0x140>)
  4015f8:	4b4c      	ldr	r3, [pc, #304]	; (40172c <main+0x144>)
  4015fa:	601d      	str	r5, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  4015fc:	4a4c      	ldr	r2, [pc, #304]	; (401730 <main+0x148>)
  4015fe:	4b4d      	ldr	r3, [pc, #308]	; (401734 <main+0x14c>)
  401600:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  401602:	4a4d      	ldr	r2, [pc, #308]	; (401738 <main+0x150>)
  401604:	4b4d      	ldr	r3, [pc, #308]	; (40173c <main+0x154>)
  401606:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
  401608:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  40160c:	9302      	str	r3, [sp, #8]
	usart_settings.char_length = opt->charlength;
  40160e:	23c0      	movs	r3, #192	; 0xc0
  401610:	9303      	str	r3, [sp, #12]
	usart_settings.parity_type = opt->paritytype;
  401612:	f44f 6300 	mov.w	r3, #2048	; 0x800
  401616:	9304      	str	r3, [sp, #16]
	usart_settings.stop_bits= opt->stopbits;
  401618:	2400      	movs	r4, #0
  40161a:	9405      	str	r4, [sp, #20]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
  40161c:	9406      	str	r4, [sp, #24]
  40161e:	200e      	movs	r0, #14
  401620:	4b47      	ldr	r3, [pc, #284]	; (401740 <main+0x158>)
  401622:	4798      	blx	r3
		usart_init_rs232(p_usart, &usart_settings,
  401624:	4a47      	ldr	r2, [pc, #284]	; (401744 <main+0x15c>)
  401626:	a902      	add	r1, sp, #8
  401628:	4628      	mov	r0, r5
  40162a:	4b47      	ldr	r3, [pc, #284]	; (401748 <main+0x160>)
  40162c:	4798      	blx	r3
		usart_enable_tx(p_usart);
  40162e:	4628      	mov	r0, r5
  401630:	4b46      	ldr	r3, [pc, #280]	; (40174c <main+0x164>)
  401632:	4798      	blx	r3
		usart_enable_rx(p_usart);
  401634:	4628      	mov	r0, r5
  401636:	4b46      	ldr	r3, [pc, #280]	; (401750 <main+0x168>)
  401638:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  40163a:	4e46      	ldr	r6, [pc, #280]	; (401754 <main+0x16c>)
  40163c:	6833      	ldr	r3, [r6, #0]
  40163e:	4621      	mov	r1, r4
  401640:	6898      	ldr	r0, [r3, #8]
  401642:	4d45      	ldr	r5, [pc, #276]	; (401758 <main+0x170>)
  401644:	47a8      	blx	r5
	setbuf(stdin, NULL);
  401646:	6833      	ldr	r3, [r6, #0]
  401648:	4621      	mov	r1, r4
  40164a:	6858      	ldr	r0, [r3, #4]
  40164c:	47a8      	blx	r5
  setbuf(stdout, NULL);
  40164e:	6833      	ldr	r3, [r6, #0]
  401650:	4621      	mov	r1, r4
  401652:	6898      	ldr	r0, [r3, #8]
  401654:	47a8      	blx	r5
	delay_init();
  	configure_console();

    // Init OLED
	gfx_mono_ssd1306_init();
  401656:	4b41      	ldr	r3, [pc, #260]	; (40175c <main+0x174>)
  401658:	4798      	blx	r3
	
	// Inicializando
	io_init();
  40165a:	4b41      	ldr	r3, [pc, #260]	; (401760 <main+0x178>)
  40165c:	4798      	blx	r3

  /* Insert application code here, after the board has been initialized. */
	while(1) {
		
		// Gerando pulso de 10us no pino
		pio_set(TRIG, TRIG_IDX_MASK);
  40165e:	f8df a154 	ldr.w	sl, [pc, #340]	; 4017b4 <main+0x1cc>
		delay_us(10);
  401662:	4f40      	ldr	r7, [pc, #256]	; (401764 <main+0x17c>)
		pio_clear(TRIG, TRIG_IDX_MASK);

		// Esperando o pino ECHO subir
		while (echo_flag == 0);
  401664:	4c40      	ldr	r4, [pc, #256]	; (401768 <main+0x180>)
		while (echo_flag == 1);

		// Faz contagem e calcula distancia quando echo_flag desce
		contagem = rtt_read_timer_value(RTT);
		delta_t = contagem * 10e5 / freq;
		int distancia = (delta_t * 340 / 2 / 10000);
  401666:	f8df b150 	ldr.w	fp, [pc, #336]	; 4017b8 <main+0x1d0>
		pio_set(TRIG, TRIG_IDX_MASK);
  40166a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40166e:	4650      	mov	r0, sl
  401670:	4b3e      	ldr	r3, [pc, #248]	; (40176c <main+0x184>)
  401672:	4798      	blx	r3
		delay_us(10);
  401674:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  401678:	47b8      	blx	r7
		pio_clear(TRIG, TRIG_IDX_MASK);
  40167a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40167e:	4650      	mov	r0, sl
  401680:	4b3b      	ldr	r3, [pc, #236]	; (401770 <main+0x188>)
  401682:	4798      	blx	r3
		while (echo_flag == 0);
  401684:	7823      	ldrb	r3, [r4, #0]
  401686:	2b00      	cmp	r3, #0
  401688:	d0fc      	beq.n	401684 <main+0x9c>
		rtt_init(RTT, 1);
  40168a:	2101      	movs	r1, #1
  40168c:	4839      	ldr	r0, [pc, #228]	; (401774 <main+0x18c>)
  40168e:	4b3a      	ldr	r3, [pc, #232]	; (401778 <main+0x190>)
  401690:	4798      	blx	r3
		while (echo_flag == 1);
  401692:	7823      	ldrb	r3, [r4, #0]
  401694:	b2db      	uxtb	r3, r3
  401696:	2b01      	cmp	r3, #1
  401698:	d0fb      	beq.n	401692 <main+0xaa>
		contagem = rtt_read_timer_value(RTT);
  40169a:	4836      	ldr	r0, [pc, #216]	; (401774 <main+0x18c>)
  40169c:	4b37      	ldr	r3, [pc, #220]	; (40177c <main+0x194>)
  40169e:	4798      	blx	r3
  4016a0:	4b37      	ldr	r3, [pc, #220]	; (401780 <main+0x198>)
  4016a2:	6018      	str	r0, [r3, #0]
		delta_t = contagem * 10e5 / freq;
  4016a4:	4d37      	ldr	r5, [pc, #220]	; (401784 <main+0x19c>)
  4016a6:	47a8      	blx	r5
  4016a8:	a31b      	add	r3, pc, #108	; (adr r3, 401718 <main+0x130>)
  4016aa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4016ae:	4e36      	ldr	r6, [pc, #216]	; (401788 <main+0x1a0>)
  4016b0:	47b0      	blx	r6
  4016b2:	4680      	mov	r8, r0
  4016b4:	4689      	mov	r9, r1
  4016b6:	4b35      	ldr	r3, [pc, #212]	; (40178c <main+0x1a4>)
  4016b8:	6818      	ldr	r0, [r3, #0]
  4016ba:	47a8      	blx	r5
  4016bc:	4602      	mov	r2, r0
  4016be:	460b      	mov	r3, r1
  4016c0:	4640      	mov	r0, r8
  4016c2:	4649      	mov	r1, r9
  4016c4:	4d32      	ldr	r5, [pc, #200]	; (401790 <main+0x1a8>)
  4016c6:	47a8      	blx	r5
  4016c8:	4b32      	ldr	r3, [pc, #200]	; (401794 <main+0x1ac>)
  4016ca:	4798      	blx	r3
  4016cc:	4606      	mov	r6, r0
  4016ce:	4b32      	ldr	r3, [pc, #200]	; (401798 <main+0x1b0>)
  4016d0:	6018      	str	r0, [r3, #0]

		// Limpando o OLED e exibindo o valor
		// -> limpar o oled protege contra bugs de escrita e visualização
		gfx_mono_draw_filled_rect(0, 0, 128, 32, GFX_PIXEL_CLR);
  4016d2:	2500      	movs	r5, #0
  4016d4:	9500      	str	r5, [sp, #0]
  4016d6:	2320      	movs	r3, #32
  4016d8:	2280      	movs	r2, #128	; 0x80
  4016da:	4629      	mov	r1, r5
  4016dc:	4628      	mov	r0, r5
  4016de:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 4017bc <main+0x1d4>
  4016e2:	47c0      	blx	r8
		int distancia = (delta_t * 340 / 2 / 10000);
  4016e4:	f44f 70aa 	mov.w	r0, #340	; 0x154
  4016e8:	fb00 f006 	mul.w	r0, r0, r6
  4016ec:	fb8b 3200 	smull	r3, r2, fp, r0
  4016f0:	17c0      	asrs	r0, r0, #31
		sprintf(texto, "%d cm", distancia);
  4016f2:	4e2a      	ldr	r6, [pc, #168]	; (40179c <main+0x1b4>)
  4016f4:	ebc0 3262 	rsb	r2, r0, r2, asr #13
  4016f8:	4929      	ldr	r1, [pc, #164]	; (4017a0 <main+0x1b8>)
  4016fa:	4630      	mov	r0, r6
  4016fc:	4b29      	ldr	r3, [pc, #164]	; (4017a4 <main+0x1bc>)
  4016fe:	4798      	blx	r3
		gfx_mono_draw_string(texto, 0, 0, &sysfont);
  401700:	4b29      	ldr	r3, [pc, #164]	; (4017a8 <main+0x1c0>)
  401702:	462a      	mov	r2, r5
  401704:	4629      	mov	r1, r5
  401706:	4630      	mov	r0, r6
  401708:	4d28      	ldr	r5, [pc, #160]	; (4017ac <main+0x1c4>)
  40170a:	47a8      	blx	r5
		delay_ms(100);
  40170c:	4828      	ldr	r0, [pc, #160]	; (4017b0 <main+0x1c8>)
  40170e:	47b8      	blx	r7
	while(1) {
  401710:	e7ab      	b.n	40166a <main+0x82>
  401712:	bf00      	nop
  401714:	f3af 8000 	nop.w
  401718:	00000000 	.word	0x00000000
  40171c:	412e8480 	.word	0x412e8480
  401720:	00400aed 	.word	0x00400aed
  401724:	00400a7d 	.word	0x00400a7d
  401728:	40028000 	.word	0x40028000
  40172c:	20400cac 	.word	0x20400cac
  401730:	00401439 	.word	0x00401439
  401734:	20400ca8 	.word	0x20400ca8
  401738:	0040135d 	.word	0x0040135d
  40173c:	20400ca4 	.word	0x20400ca4
  401740:	00401039 	.word	0x00401039
  401744:	08f0d180 	.word	0x08f0d180
  401748:	00400455 	.word	0x00400455
  40174c:	004004a9 	.word	0x004004a9
  401750:	004004af 	.word	0x004004af
  401754:	20400024 	.word	0x20400024
  401758:	00402091 	.word	0x00402091
  40175c:	0040075d 	.word	0x0040075d
  401760:	0040150d 	.word	0x0040150d
  401764:	20400001 	.word	0x20400001
  401768:	20400ccd 	.word	0x20400ccd
  40176c:	00400c2d 	.word	0x00400c2d
  401770:	00400c31 	.word	0x00400c31
  401774:	400e1830 	.word	0x400e1830
  401778:	00400239 	.word	0x00400239
  40177c:	0040024d 	.word	0x0040024d
  401780:	20400cb0 	.word	0x20400cb0
  401784:	00401a65 	.word	0x00401a65
  401788:	00401b31 	.word	0x00401b31
  40178c:	20400020 	.word	0x20400020
  401790:	00401d85 	.word	0x00401d85
  401794:	00401f55 	.word	0x00401f55
  401798:	20400cd0 	.word	0x20400cd0
  40179c:	20400cb4 	.word	0x20400cb4
  4017a0:	00407200 	.word	0x00407200
  4017a4:	00402231 	.word	0x00402231
  4017a8:	2040000c 	.word	0x2040000c
  4017ac:	004006c5 	.word	0x004006c5
  4017b0:	004d2b25 	.word	0x004d2b25
  4017b4:	400e1400 	.word	0x400e1400
  4017b8:	68db8bad 	.word	0x68db8bad
  4017bc:	004005e1 	.word	0x004005e1

004017c0 <__aeabi_drsub>:
  4017c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4017c4:	e002      	b.n	4017cc <__adddf3>
  4017c6:	bf00      	nop

004017c8 <__aeabi_dsub>:
  4017c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004017cc <__adddf3>:
  4017cc:	b530      	push	{r4, r5, lr}
  4017ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4017d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4017d6:	ea94 0f05 	teq	r4, r5
  4017da:	bf08      	it	eq
  4017dc:	ea90 0f02 	teqeq	r0, r2
  4017e0:	bf1f      	itttt	ne
  4017e2:	ea54 0c00 	orrsne.w	ip, r4, r0
  4017e6:	ea55 0c02 	orrsne.w	ip, r5, r2
  4017ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4017ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4017f2:	f000 80e2 	beq.w	4019ba <__adddf3+0x1ee>
  4017f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4017fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4017fe:	bfb8      	it	lt
  401800:	426d      	neglt	r5, r5
  401802:	dd0c      	ble.n	40181e <__adddf3+0x52>
  401804:	442c      	add	r4, r5
  401806:	ea80 0202 	eor.w	r2, r0, r2
  40180a:	ea81 0303 	eor.w	r3, r1, r3
  40180e:	ea82 0000 	eor.w	r0, r2, r0
  401812:	ea83 0101 	eor.w	r1, r3, r1
  401816:	ea80 0202 	eor.w	r2, r0, r2
  40181a:	ea81 0303 	eor.w	r3, r1, r3
  40181e:	2d36      	cmp	r5, #54	; 0x36
  401820:	bf88      	it	hi
  401822:	bd30      	pophi	{r4, r5, pc}
  401824:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401828:	ea4f 3101 	mov.w	r1, r1, lsl #12
  40182c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401830:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401834:	d002      	beq.n	40183c <__adddf3+0x70>
  401836:	4240      	negs	r0, r0
  401838:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40183c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401840:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401844:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  401848:	d002      	beq.n	401850 <__adddf3+0x84>
  40184a:	4252      	negs	r2, r2
  40184c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401850:	ea94 0f05 	teq	r4, r5
  401854:	f000 80a7 	beq.w	4019a6 <__adddf3+0x1da>
  401858:	f1a4 0401 	sub.w	r4, r4, #1
  40185c:	f1d5 0e20 	rsbs	lr, r5, #32
  401860:	db0d      	blt.n	40187e <__adddf3+0xb2>
  401862:	fa02 fc0e 	lsl.w	ip, r2, lr
  401866:	fa22 f205 	lsr.w	r2, r2, r5
  40186a:	1880      	adds	r0, r0, r2
  40186c:	f141 0100 	adc.w	r1, r1, #0
  401870:	fa03 f20e 	lsl.w	r2, r3, lr
  401874:	1880      	adds	r0, r0, r2
  401876:	fa43 f305 	asr.w	r3, r3, r5
  40187a:	4159      	adcs	r1, r3
  40187c:	e00e      	b.n	40189c <__adddf3+0xd0>
  40187e:	f1a5 0520 	sub.w	r5, r5, #32
  401882:	f10e 0e20 	add.w	lr, lr, #32
  401886:	2a01      	cmp	r2, #1
  401888:	fa03 fc0e 	lsl.w	ip, r3, lr
  40188c:	bf28      	it	cs
  40188e:	f04c 0c02 	orrcs.w	ip, ip, #2
  401892:	fa43 f305 	asr.w	r3, r3, r5
  401896:	18c0      	adds	r0, r0, r3
  401898:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  40189c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4018a0:	d507      	bpl.n	4018b2 <__adddf3+0xe6>
  4018a2:	f04f 0e00 	mov.w	lr, #0
  4018a6:	f1dc 0c00 	rsbs	ip, ip, #0
  4018aa:	eb7e 0000 	sbcs.w	r0, lr, r0
  4018ae:	eb6e 0101 	sbc.w	r1, lr, r1
  4018b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4018b6:	d31b      	bcc.n	4018f0 <__adddf3+0x124>
  4018b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4018bc:	d30c      	bcc.n	4018d8 <__adddf3+0x10c>
  4018be:	0849      	lsrs	r1, r1, #1
  4018c0:	ea5f 0030 	movs.w	r0, r0, rrx
  4018c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4018c8:	f104 0401 	add.w	r4, r4, #1
  4018cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4018d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4018d4:	f080 809a 	bcs.w	401a0c <__adddf3+0x240>
  4018d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4018dc:	bf08      	it	eq
  4018de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4018e2:	f150 0000 	adcs.w	r0, r0, #0
  4018e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4018ea:	ea41 0105 	orr.w	r1, r1, r5
  4018ee:	bd30      	pop	{r4, r5, pc}
  4018f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4018f4:	4140      	adcs	r0, r0
  4018f6:	eb41 0101 	adc.w	r1, r1, r1
  4018fa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4018fe:	f1a4 0401 	sub.w	r4, r4, #1
  401902:	d1e9      	bne.n	4018d8 <__adddf3+0x10c>
  401904:	f091 0f00 	teq	r1, #0
  401908:	bf04      	itt	eq
  40190a:	4601      	moveq	r1, r0
  40190c:	2000      	moveq	r0, #0
  40190e:	fab1 f381 	clz	r3, r1
  401912:	bf08      	it	eq
  401914:	3320      	addeq	r3, #32
  401916:	f1a3 030b 	sub.w	r3, r3, #11
  40191a:	f1b3 0220 	subs.w	r2, r3, #32
  40191e:	da0c      	bge.n	40193a <__adddf3+0x16e>
  401920:	320c      	adds	r2, #12
  401922:	dd08      	ble.n	401936 <__adddf3+0x16a>
  401924:	f102 0c14 	add.w	ip, r2, #20
  401928:	f1c2 020c 	rsb	r2, r2, #12
  40192c:	fa01 f00c 	lsl.w	r0, r1, ip
  401930:	fa21 f102 	lsr.w	r1, r1, r2
  401934:	e00c      	b.n	401950 <__adddf3+0x184>
  401936:	f102 0214 	add.w	r2, r2, #20
  40193a:	bfd8      	it	le
  40193c:	f1c2 0c20 	rsble	ip, r2, #32
  401940:	fa01 f102 	lsl.w	r1, r1, r2
  401944:	fa20 fc0c 	lsr.w	ip, r0, ip
  401948:	bfdc      	itt	le
  40194a:	ea41 010c 	orrle.w	r1, r1, ip
  40194e:	4090      	lslle	r0, r2
  401950:	1ae4      	subs	r4, r4, r3
  401952:	bfa2      	ittt	ge
  401954:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  401958:	4329      	orrge	r1, r5
  40195a:	bd30      	popge	{r4, r5, pc}
  40195c:	ea6f 0404 	mvn.w	r4, r4
  401960:	3c1f      	subs	r4, #31
  401962:	da1c      	bge.n	40199e <__adddf3+0x1d2>
  401964:	340c      	adds	r4, #12
  401966:	dc0e      	bgt.n	401986 <__adddf3+0x1ba>
  401968:	f104 0414 	add.w	r4, r4, #20
  40196c:	f1c4 0220 	rsb	r2, r4, #32
  401970:	fa20 f004 	lsr.w	r0, r0, r4
  401974:	fa01 f302 	lsl.w	r3, r1, r2
  401978:	ea40 0003 	orr.w	r0, r0, r3
  40197c:	fa21 f304 	lsr.w	r3, r1, r4
  401980:	ea45 0103 	orr.w	r1, r5, r3
  401984:	bd30      	pop	{r4, r5, pc}
  401986:	f1c4 040c 	rsb	r4, r4, #12
  40198a:	f1c4 0220 	rsb	r2, r4, #32
  40198e:	fa20 f002 	lsr.w	r0, r0, r2
  401992:	fa01 f304 	lsl.w	r3, r1, r4
  401996:	ea40 0003 	orr.w	r0, r0, r3
  40199a:	4629      	mov	r1, r5
  40199c:	bd30      	pop	{r4, r5, pc}
  40199e:	fa21 f004 	lsr.w	r0, r1, r4
  4019a2:	4629      	mov	r1, r5
  4019a4:	bd30      	pop	{r4, r5, pc}
  4019a6:	f094 0f00 	teq	r4, #0
  4019aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4019ae:	bf06      	itte	eq
  4019b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4019b4:	3401      	addeq	r4, #1
  4019b6:	3d01      	subne	r5, #1
  4019b8:	e74e      	b.n	401858 <__adddf3+0x8c>
  4019ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4019be:	bf18      	it	ne
  4019c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4019c4:	d029      	beq.n	401a1a <__adddf3+0x24e>
  4019c6:	ea94 0f05 	teq	r4, r5
  4019ca:	bf08      	it	eq
  4019cc:	ea90 0f02 	teqeq	r0, r2
  4019d0:	d005      	beq.n	4019de <__adddf3+0x212>
  4019d2:	ea54 0c00 	orrs.w	ip, r4, r0
  4019d6:	bf04      	itt	eq
  4019d8:	4619      	moveq	r1, r3
  4019da:	4610      	moveq	r0, r2
  4019dc:	bd30      	pop	{r4, r5, pc}
  4019de:	ea91 0f03 	teq	r1, r3
  4019e2:	bf1e      	ittt	ne
  4019e4:	2100      	movne	r1, #0
  4019e6:	2000      	movne	r0, #0
  4019e8:	bd30      	popne	{r4, r5, pc}
  4019ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4019ee:	d105      	bne.n	4019fc <__adddf3+0x230>
  4019f0:	0040      	lsls	r0, r0, #1
  4019f2:	4149      	adcs	r1, r1
  4019f4:	bf28      	it	cs
  4019f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4019fa:	bd30      	pop	{r4, r5, pc}
  4019fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401a00:	bf3c      	itt	cc
  401a02:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  401a06:	bd30      	popcc	{r4, r5, pc}
  401a08:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401a0c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401a10:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401a14:	f04f 0000 	mov.w	r0, #0
  401a18:	bd30      	pop	{r4, r5, pc}
  401a1a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401a1e:	bf1a      	itte	ne
  401a20:	4619      	movne	r1, r3
  401a22:	4610      	movne	r0, r2
  401a24:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  401a28:	bf1c      	itt	ne
  401a2a:	460b      	movne	r3, r1
  401a2c:	4602      	movne	r2, r0
  401a2e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401a32:	bf06      	itte	eq
  401a34:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  401a38:	ea91 0f03 	teqeq	r1, r3
  401a3c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401a40:	bd30      	pop	{r4, r5, pc}
  401a42:	bf00      	nop

00401a44 <__aeabi_ui2d>:
  401a44:	f090 0f00 	teq	r0, #0
  401a48:	bf04      	itt	eq
  401a4a:	2100      	moveq	r1, #0
  401a4c:	4770      	bxeq	lr
  401a4e:	b530      	push	{r4, r5, lr}
  401a50:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401a54:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401a58:	f04f 0500 	mov.w	r5, #0
  401a5c:	f04f 0100 	mov.w	r1, #0
  401a60:	e750      	b.n	401904 <__adddf3+0x138>
  401a62:	bf00      	nop

00401a64 <__aeabi_i2d>:
  401a64:	f090 0f00 	teq	r0, #0
  401a68:	bf04      	itt	eq
  401a6a:	2100      	moveq	r1, #0
  401a6c:	4770      	bxeq	lr
  401a6e:	b530      	push	{r4, r5, lr}
  401a70:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401a74:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401a78:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  401a7c:	bf48      	it	mi
  401a7e:	4240      	negmi	r0, r0
  401a80:	f04f 0100 	mov.w	r1, #0
  401a84:	e73e      	b.n	401904 <__adddf3+0x138>
  401a86:	bf00      	nop

00401a88 <__aeabi_f2d>:
  401a88:	0042      	lsls	r2, r0, #1
  401a8a:	ea4f 01e2 	mov.w	r1, r2, asr #3
  401a8e:	ea4f 0131 	mov.w	r1, r1, rrx
  401a92:	ea4f 7002 	mov.w	r0, r2, lsl #28
  401a96:	bf1f      	itttt	ne
  401a98:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  401a9c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401aa0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  401aa4:	4770      	bxne	lr
  401aa6:	f092 0f00 	teq	r2, #0
  401aaa:	bf14      	ite	ne
  401aac:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  401ab0:	4770      	bxeq	lr
  401ab2:	b530      	push	{r4, r5, lr}
  401ab4:	f44f 7460 	mov.w	r4, #896	; 0x380
  401ab8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401abc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401ac0:	e720      	b.n	401904 <__adddf3+0x138>
  401ac2:	bf00      	nop

00401ac4 <__aeabi_ul2d>:
  401ac4:	ea50 0201 	orrs.w	r2, r0, r1
  401ac8:	bf08      	it	eq
  401aca:	4770      	bxeq	lr
  401acc:	b530      	push	{r4, r5, lr}
  401ace:	f04f 0500 	mov.w	r5, #0
  401ad2:	e00a      	b.n	401aea <__aeabi_l2d+0x16>

00401ad4 <__aeabi_l2d>:
  401ad4:	ea50 0201 	orrs.w	r2, r0, r1
  401ad8:	bf08      	it	eq
  401ada:	4770      	bxeq	lr
  401adc:	b530      	push	{r4, r5, lr}
  401ade:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401ae2:	d502      	bpl.n	401aea <__aeabi_l2d+0x16>
  401ae4:	4240      	negs	r0, r0
  401ae6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401aea:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401aee:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401af2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  401af6:	f43f aedc 	beq.w	4018b2 <__adddf3+0xe6>
  401afa:	f04f 0203 	mov.w	r2, #3
  401afe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401b02:	bf18      	it	ne
  401b04:	3203      	addne	r2, #3
  401b06:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401b0a:	bf18      	it	ne
  401b0c:	3203      	addne	r2, #3
  401b0e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401b12:	f1c2 0320 	rsb	r3, r2, #32
  401b16:	fa00 fc03 	lsl.w	ip, r0, r3
  401b1a:	fa20 f002 	lsr.w	r0, r0, r2
  401b1e:	fa01 fe03 	lsl.w	lr, r1, r3
  401b22:	ea40 000e 	orr.w	r0, r0, lr
  401b26:	fa21 f102 	lsr.w	r1, r1, r2
  401b2a:	4414      	add	r4, r2
  401b2c:	e6c1      	b.n	4018b2 <__adddf3+0xe6>
  401b2e:	bf00      	nop

00401b30 <__aeabi_dmul>:
  401b30:	b570      	push	{r4, r5, r6, lr}
  401b32:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401b36:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401b3a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401b3e:	bf1d      	ittte	ne
  401b40:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401b44:	ea94 0f0c 	teqne	r4, ip
  401b48:	ea95 0f0c 	teqne	r5, ip
  401b4c:	f000 f8de 	bleq	401d0c <__aeabi_dmul+0x1dc>
  401b50:	442c      	add	r4, r5
  401b52:	ea81 0603 	eor.w	r6, r1, r3
  401b56:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  401b5a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  401b5e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  401b62:	bf18      	it	ne
  401b64:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  401b68:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401b6c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  401b70:	d038      	beq.n	401be4 <__aeabi_dmul+0xb4>
  401b72:	fba0 ce02 	umull	ip, lr, r0, r2
  401b76:	f04f 0500 	mov.w	r5, #0
  401b7a:	fbe1 e502 	umlal	lr, r5, r1, r2
  401b7e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  401b82:	fbe0 e503 	umlal	lr, r5, r0, r3
  401b86:	f04f 0600 	mov.w	r6, #0
  401b8a:	fbe1 5603 	umlal	r5, r6, r1, r3
  401b8e:	f09c 0f00 	teq	ip, #0
  401b92:	bf18      	it	ne
  401b94:	f04e 0e01 	orrne.w	lr, lr, #1
  401b98:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  401b9c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  401ba0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  401ba4:	d204      	bcs.n	401bb0 <__aeabi_dmul+0x80>
  401ba6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  401baa:	416d      	adcs	r5, r5
  401bac:	eb46 0606 	adc.w	r6, r6, r6
  401bb0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  401bb4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  401bb8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  401bbc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  401bc0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  401bc4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401bc8:	bf88      	it	hi
  401bca:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401bce:	d81e      	bhi.n	401c0e <__aeabi_dmul+0xde>
  401bd0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  401bd4:	bf08      	it	eq
  401bd6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  401bda:	f150 0000 	adcs.w	r0, r0, #0
  401bde:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401be2:	bd70      	pop	{r4, r5, r6, pc}
  401be4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  401be8:	ea46 0101 	orr.w	r1, r6, r1
  401bec:	ea40 0002 	orr.w	r0, r0, r2
  401bf0:	ea81 0103 	eor.w	r1, r1, r3
  401bf4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  401bf8:	bfc2      	ittt	gt
  401bfa:	ebd4 050c 	rsbsgt	r5, r4, ip
  401bfe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401c02:	bd70      	popgt	{r4, r5, r6, pc}
  401c04:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401c08:	f04f 0e00 	mov.w	lr, #0
  401c0c:	3c01      	subs	r4, #1
  401c0e:	f300 80ab 	bgt.w	401d68 <__aeabi_dmul+0x238>
  401c12:	f114 0f36 	cmn.w	r4, #54	; 0x36
  401c16:	bfde      	ittt	le
  401c18:	2000      	movle	r0, #0
  401c1a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  401c1e:	bd70      	pople	{r4, r5, r6, pc}
  401c20:	f1c4 0400 	rsb	r4, r4, #0
  401c24:	3c20      	subs	r4, #32
  401c26:	da35      	bge.n	401c94 <__aeabi_dmul+0x164>
  401c28:	340c      	adds	r4, #12
  401c2a:	dc1b      	bgt.n	401c64 <__aeabi_dmul+0x134>
  401c2c:	f104 0414 	add.w	r4, r4, #20
  401c30:	f1c4 0520 	rsb	r5, r4, #32
  401c34:	fa00 f305 	lsl.w	r3, r0, r5
  401c38:	fa20 f004 	lsr.w	r0, r0, r4
  401c3c:	fa01 f205 	lsl.w	r2, r1, r5
  401c40:	ea40 0002 	orr.w	r0, r0, r2
  401c44:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  401c48:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  401c4c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401c50:	fa21 f604 	lsr.w	r6, r1, r4
  401c54:	eb42 0106 	adc.w	r1, r2, r6
  401c58:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401c5c:	bf08      	it	eq
  401c5e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401c62:	bd70      	pop	{r4, r5, r6, pc}
  401c64:	f1c4 040c 	rsb	r4, r4, #12
  401c68:	f1c4 0520 	rsb	r5, r4, #32
  401c6c:	fa00 f304 	lsl.w	r3, r0, r4
  401c70:	fa20 f005 	lsr.w	r0, r0, r5
  401c74:	fa01 f204 	lsl.w	r2, r1, r4
  401c78:	ea40 0002 	orr.w	r0, r0, r2
  401c7c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401c80:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  401c84:	f141 0100 	adc.w	r1, r1, #0
  401c88:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401c8c:	bf08      	it	eq
  401c8e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401c92:	bd70      	pop	{r4, r5, r6, pc}
  401c94:	f1c4 0520 	rsb	r5, r4, #32
  401c98:	fa00 f205 	lsl.w	r2, r0, r5
  401c9c:	ea4e 0e02 	orr.w	lr, lr, r2
  401ca0:	fa20 f304 	lsr.w	r3, r0, r4
  401ca4:	fa01 f205 	lsl.w	r2, r1, r5
  401ca8:	ea43 0302 	orr.w	r3, r3, r2
  401cac:	fa21 f004 	lsr.w	r0, r1, r4
  401cb0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401cb4:	fa21 f204 	lsr.w	r2, r1, r4
  401cb8:	ea20 0002 	bic.w	r0, r0, r2
  401cbc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  401cc0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  401cc4:	bf08      	it	eq
  401cc6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  401cca:	bd70      	pop	{r4, r5, r6, pc}
  401ccc:	f094 0f00 	teq	r4, #0
  401cd0:	d10f      	bne.n	401cf2 <__aeabi_dmul+0x1c2>
  401cd2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  401cd6:	0040      	lsls	r0, r0, #1
  401cd8:	eb41 0101 	adc.w	r1, r1, r1
  401cdc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401ce0:	bf08      	it	eq
  401ce2:	3c01      	subeq	r4, #1
  401ce4:	d0f7      	beq.n	401cd6 <__aeabi_dmul+0x1a6>
  401ce6:	ea41 0106 	orr.w	r1, r1, r6
  401cea:	f095 0f00 	teq	r5, #0
  401cee:	bf18      	it	ne
  401cf0:	4770      	bxne	lr
  401cf2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  401cf6:	0052      	lsls	r2, r2, #1
  401cf8:	eb43 0303 	adc.w	r3, r3, r3
  401cfc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  401d00:	bf08      	it	eq
  401d02:	3d01      	subeq	r5, #1
  401d04:	d0f7      	beq.n	401cf6 <__aeabi_dmul+0x1c6>
  401d06:	ea43 0306 	orr.w	r3, r3, r6
  401d0a:	4770      	bx	lr
  401d0c:	ea94 0f0c 	teq	r4, ip
  401d10:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401d14:	bf18      	it	ne
  401d16:	ea95 0f0c 	teqne	r5, ip
  401d1a:	d00c      	beq.n	401d36 <__aeabi_dmul+0x206>
  401d1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401d20:	bf18      	it	ne
  401d22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401d26:	d1d1      	bne.n	401ccc <__aeabi_dmul+0x19c>
  401d28:	ea81 0103 	eor.w	r1, r1, r3
  401d2c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401d30:	f04f 0000 	mov.w	r0, #0
  401d34:	bd70      	pop	{r4, r5, r6, pc}
  401d36:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401d3a:	bf06      	itte	eq
  401d3c:	4610      	moveq	r0, r2
  401d3e:	4619      	moveq	r1, r3
  401d40:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401d44:	d019      	beq.n	401d7a <__aeabi_dmul+0x24a>
  401d46:	ea94 0f0c 	teq	r4, ip
  401d4a:	d102      	bne.n	401d52 <__aeabi_dmul+0x222>
  401d4c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  401d50:	d113      	bne.n	401d7a <__aeabi_dmul+0x24a>
  401d52:	ea95 0f0c 	teq	r5, ip
  401d56:	d105      	bne.n	401d64 <__aeabi_dmul+0x234>
  401d58:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  401d5c:	bf1c      	itt	ne
  401d5e:	4610      	movne	r0, r2
  401d60:	4619      	movne	r1, r3
  401d62:	d10a      	bne.n	401d7a <__aeabi_dmul+0x24a>
  401d64:	ea81 0103 	eor.w	r1, r1, r3
  401d68:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  401d6c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401d70:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401d74:	f04f 0000 	mov.w	r0, #0
  401d78:	bd70      	pop	{r4, r5, r6, pc}
  401d7a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  401d7e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  401d82:	bd70      	pop	{r4, r5, r6, pc}

00401d84 <__aeabi_ddiv>:
  401d84:	b570      	push	{r4, r5, r6, lr}
  401d86:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401d8a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  401d8e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  401d92:	bf1d      	ittte	ne
  401d94:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  401d98:	ea94 0f0c 	teqne	r4, ip
  401d9c:	ea95 0f0c 	teqne	r5, ip
  401da0:	f000 f8a7 	bleq	401ef2 <__aeabi_ddiv+0x16e>
  401da4:	eba4 0405 	sub.w	r4, r4, r5
  401da8:	ea81 0e03 	eor.w	lr, r1, r3
  401dac:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401db0:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401db4:	f000 8088 	beq.w	401ec8 <__aeabi_ddiv+0x144>
  401db8:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401dbc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  401dc0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  401dc4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  401dc8:	ea4f 2202 	mov.w	r2, r2, lsl #8
  401dcc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  401dd0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  401dd4:	ea4f 2600 	mov.w	r6, r0, lsl #8
  401dd8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  401ddc:	429d      	cmp	r5, r3
  401dde:	bf08      	it	eq
  401de0:	4296      	cmpeq	r6, r2
  401de2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  401de6:	f504 7440 	add.w	r4, r4, #768	; 0x300
  401dea:	d202      	bcs.n	401df2 <__aeabi_ddiv+0x6e>
  401dec:	085b      	lsrs	r3, r3, #1
  401dee:	ea4f 0232 	mov.w	r2, r2, rrx
  401df2:	1ab6      	subs	r6, r6, r2
  401df4:	eb65 0503 	sbc.w	r5, r5, r3
  401df8:	085b      	lsrs	r3, r3, #1
  401dfa:	ea4f 0232 	mov.w	r2, r2, rrx
  401dfe:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  401e02:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  401e06:	ebb6 0e02 	subs.w	lr, r6, r2
  401e0a:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e0e:	bf22      	ittt	cs
  401e10:	1ab6      	subcs	r6, r6, r2
  401e12:	4675      	movcs	r5, lr
  401e14:	ea40 000c 	orrcs.w	r0, r0, ip
  401e18:	085b      	lsrs	r3, r3, #1
  401e1a:	ea4f 0232 	mov.w	r2, r2, rrx
  401e1e:	ebb6 0e02 	subs.w	lr, r6, r2
  401e22:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e26:	bf22      	ittt	cs
  401e28:	1ab6      	subcs	r6, r6, r2
  401e2a:	4675      	movcs	r5, lr
  401e2c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401e30:	085b      	lsrs	r3, r3, #1
  401e32:	ea4f 0232 	mov.w	r2, r2, rrx
  401e36:	ebb6 0e02 	subs.w	lr, r6, r2
  401e3a:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e3e:	bf22      	ittt	cs
  401e40:	1ab6      	subcs	r6, r6, r2
  401e42:	4675      	movcs	r5, lr
  401e44:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401e48:	085b      	lsrs	r3, r3, #1
  401e4a:	ea4f 0232 	mov.w	r2, r2, rrx
  401e4e:	ebb6 0e02 	subs.w	lr, r6, r2
  401e52:	eb75 0e03 	sbcs.w	lr, r5, r3
  401e56:	bf22      	ittt	cs
  401e58:	1ab6      	subcs	r6, r6, r2
  401e5a:	4675      	movcs	r5, lr
  401e5c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401e60:	ea55 0e06 	orrs.w	lr, r5, r6
  401e64:	d018      	beq.n	401e98 <__aeabi_ddiv+0x114>
  401e66:	ea4f 1505 	mov.w	r5, r5, lsl #4
  401e6a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  401e6e:	ea4f 1606 	mov.w	r6, r6, lsl #4
  401e72:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  401e76:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  401e7a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  401e7e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  401e82:	d1c0      	bne.n	401e06 <__aeabi_ddiv+0x82>
  401e84:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401e88:	d10b      	bne.n	401ea2 <__aeabi_ddiv+0x11e>
  401e8a:	ea41 0100 	orr.w	r1, r1, r0
  401e8e:	f04f 0000 	mov.w	r0, #0
  401e92:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  401e96:	e7b6      	b.n	401e06 <__aeabi_ddiv+0x82>
  401e98:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401e9c:	bf04      	itt	eq
  401e9e:	4301      	orreq	r1, r0
  401ea0:	2000      	moveq	r0, #0
  401ea2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  401ea6:	bf88      	it	hi
  401ea8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  401eac:	f63f aeaf 	bhi.w	401c0e <__aeabi_dmul+0xde>
  401eb0:	ebb5 0c03 	subs.w	ip, r5, r3
  401eb4:	bf04      	itt	eq
  401eb6:	ebb6 0c02 	subseq.w	ip, r6, r2
  401eba:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401ebe:	f150 0000 	adcs.w	r0, r0, #0
  401ec2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  401ec6:	bd70      	pop	{r4, r5, r6, pc}
  401ec8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  401ecc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  401ed0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  401ed4:	bfc2      	ittt	gt
  401ed6:	ebd4 050c 	rsbsgt	r5, r4, ip
  401eda:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  401ede:	bd70      	popgt	{r4, r5, r6, pc}
  401ee0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  401ee4:	f04f 0e00 	mov.w	lr, #0
  401ee8:	3c01      	subs	r4, #1
  401eea:	e690      	b.n	401c0e <__aeabi_dmul+0xde>
  401eec:	ea45 0e06 	orr.w	lr, r5, r6
  401ef0:	e68d      	b.n	401c0e <__aeabi_dmul+0xde>
  401ef2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  401ef6:	ea94 0f0c 	teq	r4, ip
  401efa:	bf08      	it	eq
  401efc:	ea95 0f0c 	teqeq	r5, ip
  401f00:	f43f af3b 	beq.w	401d7a <__aeabi_dmul+0x24a>
  401f04:	ea94 0f0c 	teq	r4, ip
  401f08:	d10a      	bne.n	401f20 <__aeabi_ddiv+0x19c>
  401f0a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401f0e:	f47f af34 	bne.w	401d7a <__aeabi_dmul+0x24a>
  401f12:	ea95 0f0c 	teq	r5, ip
  401f16:	f47f af25 	bne.w	401d64 <__aeabi_dmul+0x234>
  401f1a:	4610      	mov	r0, r2
  401f1c:	4619      	mov	r1, r3
  401f1e:	e72c      	b.n	401d7a <__aeabi_dmul+0x24a>
  401f20:	ea95 0f0c 	teq	r5, ip
  401f24:	d106      	bne.n	401f34 <__aeabi_ddiv+0x1b0>
  401f26:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  401f2a:	f43f aefd 	beq.w	401d28 <__aeabi_dmul+0x1f8>
  401f2e:	4610      	mov	r0, r2
  401f30:	4619      	mov	r1, r3
  401f32:	e722      	b.n	401d7a <__aeabi_dmul+0x24a>
  401f34:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  401f38:	bf18      	it	ne
  401f3a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  401f3e:	f47f aec5 	bne.w	401ccc <__aeabi_dmul+0x19c>
  401f42:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  401f46:	f47f af0d 	bne.w	401d64 <__aeabi_dmul+0x234>
  401f4a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  401f4e:	f47f aeeb 	bne.w	401d28 <__aeabi_dmul+0x1f8>
  401f52:	e712      	b.n	401d7a <__aeabi_dmul+0x24a>

00401f54 <__aeabi_d2iz>:
  401f54:	ea4f 0241 	mov.w	r2, r1, lsl #1
  401f58:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  401f5c:	d215      	bcs.n	401f8a <__aeabi_d2iz+0x36>
  401f5e:	d511      	bpl.n	401f84 <__aeabi_d2iz+0x30>
  401f60:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  401f64:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  401f68:	d912      	bls.n	401f90 <__aeabi_d2iz+0x3c>
  401f6a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  401f6e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  401f72:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  401f76:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  401f7a:	fa23 f002 	lsr.w	r0, r3, r2
  401f7e:	bf18      	it	ne
  401f80:	4240      	negne	r0, r0
  401f82:	4770      	bx	lr
  401f84:	f04f 0000 	mov.w	r0, #0
  401f88:	4770      	bx	lr
  401f8a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  401f8e:	d105      	bne.n	401f9c <__aeabi_d2iz+0x48>
  401f90:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  401f94:	bf08      	it	eq
  401f96:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  401f9a:	4770      	bx	lr
  401f9c:	f04f 0000 	mov.w	r0, #0
  401fa0:	4770      	bx	lr
  401fa2:	bf00      	nop

00401fa4 <__libc_init_array>:
  401fa4:	b570      	push	{r4, r5, r6, lr}
  401fa6:	4e0f      	ldr	r6, [pc, #60]	; (401fe4 <__libc_init_array+0x40>)
  401fa8:	4d0f      	ldr	r5, [pc, #60]	; (401fe8 <__libc_init_array+0x44>)
  401faa:	1b76      	subs	r6, r6, r5
  401fac:	10b6      	asrs	r6, r6, #2
  401fae:	bf18      	it	ne
  401fb0:	2400      	movne	r4, #0
  401fb2:	d005      	beq.n	401fc0 <__libc_init_array+0x1c>
  401fb4:	3401      	adds	r4, #1
  401fb6:	f855 3b04 	ldr.w	r3, [r5], #4
  401fba:	4798      	blx	r3
  401fbc:	42a6      	cmp	r6, r4
  401fbe:	d1f9      	bne.n	401fb4 <__libc_init_array+0x10>
  401fc0:	4e0a      	ldr	r6, [pc, #40]	; (401fec <__libc_init_array+0x48>)
  401fc2:	4d0b      	ldr	r5, [pc, #44]	; (401ff0 <__libc_init_array+0x4c>)
  401fc4:	1b76      	subs	r6, r6, r5
  401fc6:	f005 fa63 	bl	407490 <_init>
  401fca:	10b6      	asrs	r6, r6, #2
  401fcc:	bf18      	it	ne
  401fce:	2400      	movne	r4, #0
  401fd0:	d006      	beq.n	401fe0 <__libc_init_array+0x3c>
  401fd2:	3401      	adds	r4, #1
  401fd4:	f855 3b04 	ldr.w	r3, [r5], #4
  401fd8:	4798      	blx	r3
  401fda:	42a6      	cmp	r6, r4
  401fdc:	d1f9      	bne.n	401fd2 <__libc_init_array+0x2e>
  401fde:	bd70      	pop	{r4, r5, r6, pc}
  401fe0:	bd70      	pop	{r4, r5, r6, pc}
  401fe2:	bf00      	nop
  401fe4:	0040749c 	.word	0x0040749c
  401fe8:	0040749c 	.word	0x0040749c
  401fec:	004074a4 	.word	0x004074a4
  401ff0:	0040749c 	.word	0x0040749c

00401ff4 <memset>:
  401ff4:	b470      	push	{r4, r5, r6}
  401ff6:	0786      	lsls	r6, r0, #30
  401ff8:	d046      	beq.n	402088 <memset+0x94>
  401ffa:	1e54      	subs	r4, r2, #1
  401ffc:	2a00      	cmp	r2, #0
  401ffe:	d041      	beq.n	402084 <memset+0x90>
  402000:	b2ca      	uxtb	r2, r1
  402002:	4603      	mov	r3, r0
  402004:	e002      	b.n	40200c <memset+0x18>
  402006:	f114 34ff 	adds.w	r4, r4, #4294967295
  40200a:	d33b      	bcc.n	402084 <memset+0x90>
  40200c:	f803 2b01 	strb.w	r2, [r3], #1
  402010:	079d      	lsls	r5, r3, #30
  402012:	d1f8      	bne.n	402006 <memset+0x12>
  402014:	2c03      	cmp	r4, #3
  402016:	d92e      	bls.n	402076 <memset+0x82>
  402018:	b2cd      	uxtb	r5, r1
  40201a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  40201e:	2c0f      	cmp	r4, #15
  402020:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  402024:	d919      	bls.n	40205a <memset+0x66>
  402026:	f103 0210 	add.w	r2, r3, #16
  40202a:	4626      	mov	r6, r4
  40202c:	3e10      	subs	r6, #16
  40202e:	2e0f      	cmp	r6, #15
  402030:	f842 5c10 	str.w	r5, [r2, #-16]
  402034:	f842 5c0c 	str.w	r5, [r2, #-12]
  402038:	f842 5c08 	str.w	r5, [r2, #-8]
  40203c:	f842 5c04 	str.w	r5, [r2, #-4]
  402040:	f102 0210 	add.w	r2, r2, #16
  402044:	d8f2      	bhi.n	40202c <memset+0x38>
  402046:	f1a4 0210 	sub.w	r2, r4, #16
  40204a:	f022 020f 	bic.w	r2, r2, #15
  40204e:	f004 040f 	and.w	r4, r4, #15
  402052:	3210      	adds	r2, #16
  402054:	2c03      	cmp	r4, #3
  402056:	4413      	add	r3, r2
  402058:	d90d      	bls.n	402076 <memset+0x82>
  40205a:	461e      	mov	r6, r3
  40205c:	4622      	mov	r2, r4
  40205e:	3a04      	subs	r2, #4
  402060:	2a03      	cmp	r2, #3
  402062:	f846 5b04 	str.w	r5, [r6], #4
  402066:	d8fa      	bhi.n	40205e <memset+0x6a>
  402068:	1f22      	subs	r2, r4, #4
  40206a:	f022 0203 	bic.w	r2, r2, #3
  40206e:	3204      	adds	r2, #4
  402070:	4413      	add	r3, r2
  402072:	f004 0403 	and.w	r4, r4, #3
  402076:	b12c      	cbz	r4, 402084 <memset+0x90>
  402078:	b2c9      	uxtb	r1, r1
  40207a:	441c      	add	r4, r3
  40207c:	f803 1b01 	strb.w	r1, [r3], #1
  402080:	429c      	cmp	r4, r3
  402082:	d1fb      	bne.n	40207c <memset+0x88>
  402084:	bc70      	pop	{r4, r5, r6}
  402086:	4770      	bx	lr
  402088:	4614      	mov	r4, r2
  40208a:	4603      	mov	r3, r0
  40208c:	e7c2      	b.n	402014 <memset+0x20>
  40208e:	bf00      	nop

00402090 <setbuf>:
  402090:	2900      	cmp	r1, #0
  402092:	bf0c      	ite	eq
  402094:	2202      	moveq	r2, #2
  402096:	2200      	movne	r2, #0
  402098:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40209c:	f000 b800 	b.w	4020a0 <setvbuf>

004020a0 <setvbuf>:
  4020a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4020a4:	4c61      	ldr	r4, [pc, #388]	; (40222c <setvbuf+0x18c>)
  4020a6:	6825      	ldr	r5, [r4, #0]
  4020a8:	b083      	sub	sp, #12
  4020aa:	4604      	mov	r4, r0
  4020ac:	460f      	mov	r7, r1
  4020ae:	4690      	mov	r8, r2
  4020b0:	461e      	mov	r6, r3
  4020b2:	b115      	cbz	r5, 4020ba <setvbuf+0x1a>
  4020b4:	6bab      	ldr	r3, [r5, #56]	; 0x38
  4020b6:	2b00      	cmp	r3, #0
  4020b8:	d064      	beq.n	402184 <setvbuf+0xe4>
  4020ba:	f1b8 0f02 	cmp.w	r8, #2
  4020be:	d006      	beq.n	4020ce <setvbuf+0x2e>
  4020c0:	f1b8 0f01 	cmp.w	r8, #1
  4020c4:	f200 809f 	bhi.w	402206 <setvbuf+0x166>
  4020c8:	2e00      	cmp	r6, #0
  4020ca:	f2c0 809c 	blt.w	402206 <setvbuf+0x166>
  4020ce:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4020d0:	07d8      	lsls	r0, r3, #31
  4020d2:	d534      	bpl.n	40213e <setvbuf+0x9e>
  4020d4:	4621      	mov	r1, r4
  4020d6:	4628      	mov	r0, r5
  4020d8:	f002 fb6c 	bl	4047b4 <_fflush_r>
  4020dc:	6b21      	ldr	r1, [r4, #48]	; 0x30
  4020de:	b141      	cbz	r1, 4020f2 <setvbuf+0x52>
  4020e0:	f104 0340 	add.w	r3, r4, #64	; 0x40
  4020e4:	4299      	cmp	r1, r3
  4020e6:	d002      	beq.n	4020ee <setvbuf+0x4e>
  4020e8:	4628      	mov	r0, r5
  4020ea:	f002 fc5d 	bl	4049a8 <_free_r>
  4020ee:	2300      	movs	r3, #0
  4020f0:	6323      	str	r3, [r4, #48]	; 0x30
  4020f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4020f6:	2200      	movs	r2, #0
  4020f8:	61a2      	str	r2, [r4, #24]
  4020fa:	6062      	str	r2, [r4, #4]
  4020fc:	061a      	lsls	r2, r3, #24
  4020fe:	d43a      	bmi.n	402176 <setvbuf+0xd6>
  402100:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  402104:	f023 0303 	bic.w	r3, r3, #3
  402108:	f1b8 0f02 	cmp.w	r8, #2
  40210c:	81a3      	strh	r3, [r4, #12]
  40210e:	d01d      	beq.n	40214c <setvbuf+0xac>
  402110:	ab01      	add	r3, sp, #4
  402112:	466a      	mov	r2, sp
  402114:	4621      	mov	r1, r4
  402116:	4628      	mov	r0, r5
  402118:	f002 fd6c 	bl	404bf4 <__swhatbuf_r>
  40211c:	89a3      	ldrh	r3, [r4, #12]
  40211e:	4318      	orrs	r0, r3
  402120:	81a0      	strh	r0, [r4, #12]
  402122:	2e00      	cmp	r6, #0
  402124:	d132      	bne.n	40218c <setvbuf+0xec>
  402126:	9e00      	ldr	r6, [sp, #0]
  402128:	4630      	mov	r0, r6
  40212a:	f002 fd91 	bl	404c50 <malloc>
  40212e:	4607      	mov	r7, r0
  402130:	2800      	cmp	r0, #0
  402132:	d06b      	beq.n	40220c <setvbuf+0x16c>
  402134:	89a3      	ldrh	r3, [r4, #12]
  402136:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40213a:	81a3      	strh	r3, [r4, #12]
  40213c:	e028      	b.n	402190 <setvbuf+0xf0>
  40213e:	89a3      	ldrh	r3, [r4, #12]
  402140:	0599      	lsls	r1, r3, #22
  402142:	d4c7      	bmi.n	4020d4 <setvbuf+0x34>
  402144:	6da0      	ldr	r0, [r4, #88]	; 0x58
  402146:	f002 fd51 	bl	404bec <__retarget_lock_acquire_recursive>
  40214a:	e7c3      	b.n	4020d4 <setvbuf+0x34>
  40214c:	2500      	movs	r5, #0
  40214e:	6e61      	ldr	r1, [r4, #100]	; 0x64
  402150:	2600      	movs	r6, #0
  402152:	f104 0243 	add.w	r2, r4, #67	; 0x43
  402156:	f043 0302 	orr.w	r3, r3, #2
  40215a:	2001      	movs	r0, #1
  40215c:	60a6      	str	r6, [r4, #8]
  40215e:	07ce      	lsls	r6, r1, #31
  402160:	81a3      	strh	r3, [r4, #12]
  402162:	6022      	str	r2, [r4, #0]
  402164:	6122      	str	r2, [r4, #16]
  402166:	6160      	str	r0, [r4, #20]
  402168:	d401      	bmi.n	40216e <setvbuf+0xce>
  40216a:	0598      	lsls	r0, r3, #22
  40216c:	d53e      	bpl.n	4021ec <setvbuf+0x14c>
  40216e:	4628      	mov	r0, r5
  402170:	b003      	add	sp, #12
  402172:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  402176:	6921      	ldr	r1, [r4, #16]
  402178:	4628      	mov	r0, r5
  40217a:	f002 fc15 	bl	4049a8 <_free_r>
  40217e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402182:	e7bd      	b.n	402100 <setvbuf+0x60>
  402184:	4628      	mov	r0, r5
  402186:	f002 fb6d 	bl	404864 <__sinit>
  40218a:	e796      	b.n	4020ba <setvbuf+0x1a>
  40218c:	2f00      	cmp	r7, #0
  40218e:	d0cb      	beq.n	402128 <setvbuf+0x88>
  402190:	6bab      	ldr	r3, [r5, #56]	; 0x38
  402192:	2b00      	cmp	r3, #0
  402194:	d033      	beq.n	4021fe <setvbuf+0x15e>
  402196:	9b00      	ldr	r3, [sp, #0]
  402198:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  40219c:	6027      	str	r7, [r4, #0]
  40219e:	429e      	cmp	r6, r3
  4021a0:	bf1c      	itt	ne
  4021a2:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
  4021a6:	81a2      	strhne	r2, [r4, #12]
  4021a8:	f1b8 0f01 	cmp.w	r8, #1
  4021ac:	bf04      	itt	eq
  4021ae:	f042 0201 	orreq.w	r2, r2, #1
  4021b2:	81a2      	strheq	r2, [r4, #12]
  4021b4:	b292      	uxth	r2, r2
  4021b6:	f012 0308 	ands.w	r3, r2, #8
  4021ba:	6127      	str	r7, [r4, #16]
  4021bc:	6166      	str	r6, [r4, #20]
  4021be:	d00e      	beq.n	4021de <setvbuf+0x13e>
  4021c0:	07d1      	lsls	r1, r2, #31
  4021c2:	d51a      	bpl.n	4021fa <setvbuf+0x15a>
  4021c4:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4021c6:	4276      	negs	r6, r6
  4021c8:	2300      	movs	r3, #0
  4021ca:	f015 0501 	ands.w	r5, r5, #1
  4021ce:	61a6      	str	r6, [r4, #24]
  4021d0:	60a3      	str	r3, [r4, #8]
  4021d2:	d009      	beq.n	4021e8 <setvbuf+0x148>
  4021d4:	2500      	movs	r5, #0
  4021d6:	4628      	mov	r0, r5
  4021d8:	b003      	add	sp, #12
  4021da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4021de:	60a3      	str	r3, [r4, #8]
  4021e0:	6e65      	ldr	r5, [r4, #100]	; 0x64
  4021e2:	f015 0501 	ands.w	r5, r5, #1
  4021e6:	d1f5      	bne.n	4021d4 <setvbuf+0x134>
  4021e8:	0593      	lsls	r3, r2, #22
  4021ea:	d4c0      	bmi.n	40216e <setvbuf+0xce>
  4021ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4021ee:	f002 fcff 	bl	404bf0 <__retarget_lock_release_recursive>
  4021f2:	4628      	mov	r0, r5
  4021f4:	b003      	add	sp, #12
  4021f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4021fa:	60a6      	str	r6, [r4, #8]
  4021fc:	e7f0      	b.n	4021e0 <setvbuf+0x140>
  4021fe:	4628      	mov	r0, r5
  402200:	f002 fb30 	bl	404864 <__sinit>
  402204:	e7c7      	b.n	402196 <setvbuf+0xf6>
  402206:	f04f 35ff 	mov.w	r5, #4294967295
  40220a:	e7b0      	b.n	40216e <setvbuf+0xce>
  40220c:	f8dd 9000 	ldr.w	r9, [sp]
  402210:	45b1      	cmp	r9, r6
  402212:	d004      	beq.n	40221e <setvbuf+0x17e>
  402214:	4648      	mov	r0, r9
  402216:	f002 fd1b 	bl	404c50 <malloc>
  40221a:	4607      	mov	r7, r0
  40221c:	b920      	cbnz	r0, 402228 <setvbuf+0x188>
  40221e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  402222:	f04f 35ff 	mov.w	r5, #4294967295
  402226:	e792      	b.n	40214e <setvbuf+0xae>
  402228:	464e      	mov	r6, r9
  40222a:	e783      	b.n	402134 <setvbuf+0x94>
  40222c:	20400024 	.word	0x20400024

00402230 <sprintf>:
  402230:	b40e      	push	{r1, r2, r3}
  402232:	b5f0      	push	{r4, r5, r6, r7, lr}
  402234:	b09c      	sub	sp, #112	; 0x70
  402236:	ab21      	add	r3, sp, #132	; 0x84
  402238:	490f      	ldr	r1, [pc, #60]	; (402278 <sprintf+0x48>)
  40223a:	f853 2b04 	ldr.w	r2, [r3], #4
  40223e:	9301      	str	r3, [sp, #4]
  402240:	4605      	mov	r5, r0
  402242:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  402246:	6808      	ldr	r0, [r1, #0]
  402248:	9502      	str	r5, [sp, #8]
  40224a:	f44f 7702 	mov.w	r7, #520	; 0x208
  40224e:	f64f 76ff 	movw	r6, #65535	; 0xffff
  402252:	a902      	add	r1, sp, #8
  402254:	9506      	str	r5, [sp, #24]
  402256:	f8ad 7014 	strh.w	r7, [sp, #20]
  40225a:	9404      	str	r4, [sp, #16]
  40225c:	9407      	str	r4, [sp, #28]
  40225e:	f8ad 6016 	strh.w	r6, [sp, #22]
  402262:	f000 f80b 	bl	40227c <_svfprintf_r>
  402266:	9b02      	ldr	r3, [sp, #8]
  402268:	2200      	movs	r2, #0
  40226a:	701a      	strb	r2, [r3, #0]
  40226c:	b01c      	add	sp, #112	; 0x70
  40226e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  402272:	b003      	add	sp, #12
  402274:	4770      	bx	lr
  402276:	bf00      	nop
  402278:	20400024 	.word	0x20400024

0040227c <_svfprintf_r>:
  40227c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402280:	b0c3      	sub	sp, #268	; 0x10c
  402282:	460c      	mov	r4, r1
  402284:	910b      	str	r1, [sp, #44]	; 0x2c
  402286:	4692      	mov	sl, r2
  402288:	930f      	str	r3, [sp, #60]	; 0x3c
  40228a:	900c      	str	r0, [sp, #48]	; 0x30
  40228c:	f002 fc9c 	bl	404bc8 <_localeconv_r>
  402290:	6803      	ldr	r3, [r0, #0]
  402292:	931a      	str	r3, [sp, #104]	; 0x68
  402294:	4618      	mov	r0, r3
  402296:	f003 fbf3 	bl	405a80 <strlen>
  40229a:	89a3      	ldrh	r3, [r4, #12]
  40229c:	9019      	str	r0, [sp, #100]	; 0x64
  40229e:	0619      	lsls	r1, r3, #24
  4022a0:	d503      	bpl.n	4022aa <_svfprintf_r+0x2e>
  4022a2:	6923      	ldr	r3, [r4, #16]
  4022a4:	2b00      	cmp	r3, #0
  4022a6:	f001 8003 	beq.w	4032b0 <_svfprintf_r+0x1034>
  4022aa:	2300      	movs	r3, #0
  4022ac:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  4022b0:	9313      	str	r3, [sp, #76]	; 0x4c
  4022b2:	9315      	str	r3, [sp, #84]	; 0x54
  4022b4:	9314      	str	r3, [sp, #80]	; 0x50
  4022b6:	9327      	str	r3, [sp, #156]	; 0x9c
  4022b8:	9326      	str	r3, [sp, #152]	; 0x98
  4022ba:	9318      	str	r3, [sp, #96]	; 0x60
  4022bc:	931b      	str	r3, [sp, #108]	; 0x6c
  4022be:	9309      	str	r3, [sp, #36]	; 0x24
  4022c0:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  4022c4:	46c8      	mov	r8, r9
  4022c6:	9316      	str	r3, [sp, #88]	; 0x58
  4022c8:	9317      	str	r3, [sp, #92]	; 0x5c
  4022ca:	f89a 3000 	ldrb.w	r3, [sl]
  4022ce:	4654      	mov	r4, sl
  4022d0:	b1e3      	cbz	r3, 40230c <_svfprintf_r+0x90>
  4022d2:	2b25      	cmp	r3, #37	; 0x25
  4022d4:	d102      	bne.n	4022dc <_svfprintf_r+0x60>
  4022d6:	e019      	b.n	40230c <_svfprintf_r+0x90>
  4022d8:	2b25      	cmp	r3, #37	; 0x25
  4022da:	d003      	beq.n	4022e4 <_svfprintf_r+0x68>
  4022dc:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4022e0:	2b00      	cmp	r3, #0
  4022e2:	d1f9      	bne.n	4022d8 <_svfprintf_r+0x5c>
  4022e4:	eba4 050a 	sub.w	r5, r4, sl
  4022e8:	b185      	cbz	r5, 40230c <_svfprintf_r+0x90>
  4022ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4022ec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4022ee:	f8c8 a000 	str.w	sl, [r8]
  4022f2:	3301      	adds	r3, #1
  4022f4:	442a      	add	r2, r5
  4022f6:	2b07      	cmp	r3, #7
  4022f8:	f8c8 5004 	str.w	r5, [r8, #4]
  4022fc:	9227      	str	r2, [sp, #156]	; 0x9c
  4022fe:	9326      	str	r3, [sp, #152]	; 0x98
  402300:	dc7f      	bgt.n	402402 <_svfprintf_r+0x186>
  402302:	f108 0808 	add.w	r8, r8, #8
  402306:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402308:	442b      	add	r3, r5
  40230a:	9309      	str	r3, [sp, #36]	; 0x24
  40230c:	7823      	ldrb	r3, [r4, #0]
  40230e:	2b00      	cmp	r3, #0
  402310:	d07f      	beq.n	402412 <_svfprintf_r+0x196>
  402312:	2300      	movs	r3, #0
  402314:	461a      	mov	r2, r3
  402316:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40231a:	4619      	mov	r1, r3
  40231c:	930d      	str	r3, [sp, #52]	; 0x34
  40231e:	469b      	mov	fp, r3
  402320:	f04f 30ff 	mov.w	r0, #4294967295
  402324:	7863      	ldrb	r3, [r4, #1]
  402326:	900a      	str	r0, [sp, #40]	; 0x28
  402328:	f104 0a01 	add.w	sl, r4, #1
  40232c:	f10a 0a01 	add.w	sl, sl, #1
  402330:	f1a3 0020 	sub.w	r0, r3, #32
  402334:	2858      	cmp	r0, #88	; 0x58
  402336:	f200 83c1 	bhi.w	402abc <_svfprintf_r+0x840>
  40233a:	e8df f010 	tbh	[pc, r0, lsl #1]
  40233e:	0238      	.short	0x0238
  402340:	03bf03bf 	.word	0x03bf03bf
  402344:	03bf0240 	.word	0x03bf0240
  402348:	03bf03bf 	.word	0x03bf03bf
  40234c:	03bf03bf 	.word	0x03bf03bf
  402350:	024503bf 	.word	0x024503bf
  402354:	03bf0203 	.word	0x03bf0203
  402358:	026b005d 	.word	0x026b005d
  40235c:	028603bf 	.word	0x028603bf
  402360:	039d039d 	.word	0x039d039d
  402364:	039d039d 	.word	0x039d039d
  402368:	039d039d 	.word	0x039d039d
  40236c:	039d039d 	.word	0x039d039d
  402370:	03bf039d 	.word	0x03bf039d
  402374:	03bf03bf 	.word	0x03bf03bf
  402378:	03bf03bf 	.word	0x03bf03bf
  40237c:	03bf03bf 	.word	0x03bf03bf
  402380:	03bf03bf 	.word	0x03bf03bf
  402384:	033703bf 	.word	0x033703bf
  402388:	03bf0357 	.word	0x03bf0357
  40238c:	03bf0357 	.word	0x03bf0357
  402390:	03bf03bf 	.word	0x03bf03bf
  402394:	039803bf 	.word	0x039803bf
  402398:	03bf03bf 	.word	0x03bf03bf
  40239c:	03bf03ad 	.word	0x03bf03ad
  4023a0:	03bf03bf 	.word	0x03bf03bf
  4023a4:	03bf03bf 	.word	0x03bf03bf
  4023a8:	03bf0259 	.word	0x03bf0259
  4023ac:	031e03bf 	.word	0x031e03bf
  4023b0:	03bf03bf 	.word	0x03bf03bf
  4023b4:	03bf03bf 	.word	0x03bf03bf
  4023b8:	03bf03bf 	.word	0x03bf03bf
  4023bc:	03bf03bf 	.word	0x03bf03bf
  4023c0:	03bf03bf 	.word	0x03bf03bf
  4023c4:	02db02c6 	.word	0x02db02c6
  4023c8:	03570357 	.word	0x03570357
  4023cc:	028b0357 	.word	0x028b0357
  4023d0:	03bf02db 	.word	0x03bf02db
  4023d4:	029003bf 	.word	0x029003bf
  4023d8:	029d03bf 	.word	0x029d03bf
  4023dc:	02b401cc 	.word	0x02b401cc
  4023e0:	03bf0208 	.word	0x03bf0208
  4023e4:	03bf01e1 	.word	0x03bf01e1
  4023e8:	03bf007e 	.word	0x03bf007e
  4023ec:	020d03bf 	.word	0x020d03bf
  4023f0:	980d      	ldr	r0, [sp, #52]	; 0x34
  4023f2:	930f      	str	r3, [sp, #60]	; 0x3c
  4023f4:	4240      	negs	r0, r0
  4023f6:	900d      	str	r0, [sp, #52]	; 0x34
  4023f8:	f04b 0b04 	orr.w	fp, fp, #4
  4023fc:	f89a 3000 	ldrb.w	r3, [sl]
  402400:	e794      	b.n	40232c <_svfprintf_r+0xb0>
  402402:	aa25      	add	r2, sp, #148	; 0x94
  402404:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402406:	980c      	ldr	r0, [sp, #48]	; 0x30
  402408:	f003 fba8 	bl	405b5c <__ssprint_r>
  40240c:	b940      	cbnz	r0, 402420 <_svfprintf_r+0x1a4>
  40240e:	46c8      	mov	r8, r9
  402410:	e779      	b.n	402306 <_svfprintf_r+0x8a>
  402412:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  402414:	b123      	cbz	r3, 402420 <_svfprintf_r+0x1a4>
  402416:	980c      	ldr	r0, [sp, #48]	; 0x30
  402418:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40241a:	aa25      	add	r2, sp, #148	; 0x94
  40241c:	f003 fb9e 	bl	405b5c <__ssprint_r>
  402420:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  402422:	899b      	ldrh	r3, [r3, #12]
  402424:	f013 0f40 	tst.w	r3, #64	; 0x40
  402428:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40242a:	bf18      	it	ne
  40242c:	f04f 33ff 	movne.w	r3, #4294967295
  402430:	9309      	str	r3, [sp, #36]	; 0x24
  402432:	9809      	ldr	r0, [sp, #36]	; 0x24
  402434:	b043      	add	sp, #268	; 0x10c
  402436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40243a:	f01b 0f20 	tst.w	fp, #32
  40243e:	9311      	str	r3, [sp, #68]	; 0x44
  402440:	f040 81dd 	bne.w	4027fe <_svfprintf_r+0x582>
  402444:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402446:	f01b 0f10 	tst.w	fp, #16
  40244a:	4613      	mov	r3, r2
  40244c:	f040 856e 	bne.w	402f2c <_svfprintf_r+0xcb0>
  402450:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402454:	f000 856a 	beq.w	402f2c <_svfprintf_r+0xcb0>
  402458:	8814      	ldrh	r4, [r2, #0]
  40245a:	3204      	adds	r2, #4
  40245c:	2500      	movs	r5, #0
  40245e:	2301      	movs	r3, #1
  402460:	920f      	str	r2, [sp, #60]	; 0x3c
  402462:	2700      	movs	r7, #0
  402464:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402468:	990a      	ldr	r1, [sp, #40]	; 0x28
  40246a:	1c4a      	adds	r2, r1, #1
  40246c:	f000 8265 	beq.w	40293a <_svfprintf_r+0x6be>
  402470:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  402474:	9207      	str	r2, [sp, #28]
  402476:	ea54 0205 	orrs.w	r2, r4, r5
  40247a:	f040 8264 	bne.w	402946 <_svfprintf_r+0x6ca>
  40247e:	2900      	cmp	r1, #0
  402480:	f040 843c 	bne.w	402cfc <_svfprintf_r+0xa80>
  402484:	2b00      	cmp	r3, #0
  402486:	f040 84d7 	bne.w	402e38 <_svfprintf_r+0xbbc>
  40248a:	f01b 0301 	ands.w	r3, fp, #1
  40248e:	930e      	str	r3, [sp, #56]	; 0x38
  402490:	f000 8604 	beq.w	40309c <_svfprintf_r+0xe20>
  402494:	ae42      	add	r6, sp, #264	; 0x108
  402496:	2330      	movs	r3, #48	; 0x30
  402498:	f806 3d41 	strb.w	r3, [r6, #-65]!
  40249c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40249e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4024a0:	4293      	cmp	r3, r2
  4024a2:	bfb8      	it	lt
  4024a4:	4613      	movlt	r3, r2
  4024a6:	9308      	str	r3, [sp, #32]
  4024a8:	2300      	movs	r3, #0
  4024aa:	9312      	str	r3, [sp, #72]	; 0x48
  4024ac:	b117      	cbz	r7, 4024b4 <_svfprintf_r+0x238>
  4024ae:	9b08      	ldr	r3, [sp, #32]
  4024b0:	3301      	adds	r3, #1
  4024b2:	9308      	str	r3, [sp, #32]
  4024b4:	9b07      	ldr	r3, [sp, #28]
  4024b6:	f013 0302 	ands.w	r3, r3, #2
  4024ba:	9310      	str	r3, [sp, #64]	; 0x40
  4024bc:	d002      	beq.n	4024c4 <_svfprintf_r+0x248>
  4024be:	9b08      	ldr	r3, [sp, #32]
  4024c0:	3302      	adds	r3, #2
  4024c2:	9308      	str	r3, [sp, #32]
  4024c4:	9b07      	ldr	r3, [sp, #28]
  4024c6:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  4024ca:	f040 830e 	bne.w	402aea <_svfprintf_r+0x86e>
  4024ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4024d0:	9a08      	ldr	r2, [sp, #32]
  4024d2:	eba3 0b02 	sub.w	fp, r3, r2
  4024d6:	f1bb 0f00 	cmp.w	fp, #0
  4024da:	f340 8306 	ble.w	402aea <_svfprintf_r+0x86e>
  4024de:	f1bb 0f10 	cmp.w	fp, #16
  4024e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4024e4:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4024e6:	dd29      	ble.n	40253c <_svfprintf_r+0x2c0>
  4024e8:	4643      	mov	r3, r8
  4024ea:	4621      	mov	r1, r4
  4024ec:	46a8      	mov	r8, r5
  4024ee:	2710      	movs	r7, #16
  4024f0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4024f2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4024f4:	e006      	b.n	402504 <_svfprintf_r+0x288>
  4024f6:	f1ab 0b10 	sub.w	fp, fp, #16
  4024fa:	f1bb 0f10 	cmp.w	fp, #16
  4024fe:	f103 0308 	add.w	r3, r3, #8
  402502:	dd18      	ble.n	402536 <_svfprintf_r+0x2ba>
  402504:	3201      	adds	r2, #1
  402506:	48b7      	ldr	r0, [pc, #732]	; (4027e4 <_svfprintf_r+0x568>)
  402508:	9226      	str	r2, [sp, #152]	; 0x98
  40250a:	3110      	adds	r1, #16
  40250c:	2a07      	cmp	r2, #7
  40250e:	9127      	str	r1, [sp, #156]	; 0x9c
  402510:	e883 0081 	stmia.w	r3, {r0, r7}
  402514:	ddef      	ble.n	4024f6 <_svfprintf_r+0x27a>
  402516:	aa25      	add	r2, sp, #148	; 0x94
  402518:	4629      	mov	r1, r5
  40251a:	4620      	mov	r0, r4
  40251c:	f003 fb1e 	bl	405b5c <__ssprint_r>
  402520:	2800      	cmp	r0, #0
  402522:	f47f af7d 	bne.w	402420 <_svfprintf_r+0x1a4>
  402526:	f1ab 0b10 	sub.w	fp, fp, #16
  40252a:	f1bb 0f10 	cmp.w	fp, #16
  40252e:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402530:	9a26      	ldr	r2, [sp, #152]	; 0x98
  402532:	464b      	mov	r3, r9
  402534:	dce6      	bgt.n	402504 <_svfprintf_r+0x288>
  402536:	4645      	mov	r5, r8
  402538:	460c      	mov	r4, r1
  40253a:	4698      	mov	r8, r3
  40253c:	3201      	adds	r2, #1
  40253e:	4ba9      	ldr	r3, [pc, #676]	; (4027e4 <_svfprintf_r+0x568>)
  402540:	9226      	str	r2, [sp, #152]	; 0x98
  402542:	445c      	add	r4, fp
  402544:	2a07      	cmp	r2, #7
  402546:	9427      	str	r4, [sp, #156]	; 0x9c
  402548:	e888 0808 	stmia.w	r8, {r3, fp}
  40254c:	f300 8498 	bgt.w	402e80 <_svfprintf_r+0xc04>
  402550:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402554:	f108 0808 	add.w	r8, r8, #8
  402558:	b177      	cbz	r7, 402578 <_svfprintf_r+0x2fc>
  40255a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40255c:	3301      	adds	r3, #1
  40255e:	3401      	adds	r4, #1
  402560:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  402564:	2201      	movs	r2, #1
  402566:	2b07      	cmp	r3, #7
  402568:	9427      	str	r4, [sp, #156]	; 0x9c
  40256a:	9326      	str	r3, [sp, #152]	; 0x98
  40256c:	e888 0006 	stmia.w	r8, {r1, r2}
  402570:	f300 83db 	bgt.w	402d2a <_svfprintf_r+0xaae>
  402574:	f108 0808 	add.w	r8, r8, #8
  402578:	9b10      	ldr	r3, [sp, #64]	; 0x40
  40257a:	b16b      	cbz	r3, 402598 <_svfprintf_r+0x31c>
  40257c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40257e:	3301      	adds	r3, #1
  402580:	3402      	adds	r4, #2
  402582:	a91e      	add	r1, sp, #120	; 0x78
  402584:	2202      	movs	r2, #2
  402586:	2b07      	cmp	r3, #7
  402588:	9427      	str	r4, [sp, #156]	; 0x9c
  40258a:	9326      	str	r3, [sp, #152]	; 0x98
  40258c:	e888 0006 	stmia.w	r8, {r1, r2}
  402590:	f300 83d6 	bgt.w	402d40 <_svfprintf_r+0xac4>
  402594:	f108 0808 	add.w	r8, r8, #8
  402598:	2d80      	cmp	r5, #128	; 0x80
  40259a:	f000 8315 	beq.w	402bc8 <_svfprintf_r+0x94c>
  40259e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4025a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4025a2:	1a9f      	subs	r7, r3, r2
  4025a4:	2f00      	cmp	r7, #0
  4025a6:	dd36      	ble.n	402616 <_svfprintf_r+0x39a>
  4025a8:	2f10      	cmp	r7, #16
  4025aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025ac:	4d8e      	ldr	r5, [pc, #568]	; (4027e8 <_svfprintf_r+0x56c>)
  4025ae:	dd27      	ble.n	402600 <_svfprintf_r+0x384>
  4025b0:	4642      	mov	r2, r8
  4025b2:	4621      	mov	r1, r4
  4025b4:	46b0      	mov	r8, r6
  4025b6:	f04f 0b10 	mov.w	fp, #16
  4025ba:	462e      	mov	r6, r5
  4025bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4025be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4025c0:	e004      	b.n	4025cc <_svfprintf_r+0x350>
  4025c2:	3f10      	subs	r7, #16
  4025c4:	2f10      	cmp	r7, #16
  4025c6:	f102 0208 	add.w	r2, r2, #8
  4025ca:	dd15      	ble.n	4025f8 <_svfprintf_r+0x37c>
  4025cc:	3301      	adds	r3, #1
  4025ce:	3110      	adds	r1, #16
  4025d0:	2b07      	cmp	r3, #7
  4025d2:	9127      	str	r1, [sp, #156]	; 0x9c
  4025d4:	9326      	str	r3, [sp, #152]	; 0x98
  4025d6:	e882 0840 	stmia.w	r2, {r6, fp}
  4025da:	ddf2      	ble.n	4025c2 <_svfprintf_r+0x346>
  4025dc:	aa25      	add	r2, sp, #148	; 0x94
  4025de:	4629      	mov	r1, r5
  4025e0:	4620      	mov	r0, r4
  4025e2:	f003 fabb 	bl	405b5c <__ssprint_r>
  4025e6:	2800      	cmp	r0, #0
  4025e8:	f47f af1a 	bne.w	402420 <_svfprintf_r+0x1a4>
  4025ec:	3f10      	subs	r7, #16
  4025ee:	2f10      	cmp	r7, #16
  4025f0:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4025f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025f4:	464a      	mov	r2, r9
  4025f6:	dce9      	bgt.n	4025cc <_svfprintf_r+0x350>
  4025f8:	4635      	mov	r5, r6
  4025fa:	460c      	mov	r4, r1
  4025fc:	4646      	mov	r6, r8
  4025fe:	4690      	mov	r8, r2
  402600:	3301      	adds	r3, #1
  402602:	443c      	add	r4, r7
  402604:	2b07      	cmp	r3, #7
  402606:	9427      	str	r4, [sp, #156]	; 0x9c
  402608:	9326      	str	r3, [sp, #152]	; 0x98
  40260a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40260e:	f300 8381 	bgt.w	402d14 <_svfprintf_r+0xa98>
  402612:	f108 0808 	add.w	r8, r8, #8
  402616:	9b07      	ldr	r3, [sp, #28]
  402618:	05df      	lsls	r7, r3, #23
  40261a:	f100 8268 	bmi.w	402aee <_svfprintf_r+0x872>
  40261e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402620:	990e      	ldr	r1, [sp, #56]	; 0x38
  402622:	f8c8 6000 	str.w	r6, [r8]
  402626:	3301      	adds	r3, #1
  402628:	440c      	add	r4, r1
  40262a:	2b07      	cmp	r3, #7
  40262c:	9427      	str	r4, [sp, #156]	; 0x9c
  40262e:	f8c8 1004 	str.w	r1, [r8, #4]
  402632:	9326      	str	r3, [sp, #152]	; 0x98
  402634:	f300 834d 	bgt.w	402cd2 <_svfprintf_r+0xa56>
  402638:	f108 0808 	add.w	r8, r8, #8
  40263c:	9b07      	ldr	r3, [sp, #28]
  40263e:	075b      	lsls	r3, r3, #29
  402640:	d53a      	bpl.n	4026b8 <_svfprintf_r+0x43c>
  402642:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402644:	9a08      	ldr	r2, [sp, #32]
  402646:	1a9d      	subs	r5, r3, r2
  402648:	2d00      	cmp	r5, #0
  40264a:	dd35      	ble.n	4026b8 <_svfprintf_r+0x43c>
  40264c:	2d10      	cmp	r5, #16
  40264e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402650:	dd20      	ble.n	402694 <_svfprintf_r+0x418>
  402652:	2610      	movs	r6, #16
  402654:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  402656:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  40265a:	e004      	b.n	402666 <_svfprintf_r+0x3ea>
  40265c:	3d10      	subs	r5, #16
  40265e:	2d10      	cmp	r5, #16
  402660:	f108 0808 	add.w	r8, r8, #8
  402664:	dd16      	ble.n	402694 <_svfprintf_r+0x418>
  402666:	3301      	adds	r3, #1
  402668:	4a5e      	ldr	r2, [pc, #376]	; (4027e4 <_svfprintf_r+0x568>)
  40266a:	9326      	str	r3, [sp, #152]	; 0x98
  40266c:	3410      	adds	r4, #16
  40266e:	2b07      	cmp	r3, #7
  402670:	9427      	str	r4, [sp, #156]	; 0x9c
  402672:	e888 0044 	stmia.w	r8, {r2, r6}
  402676:	ddf1      	ble.n	40265c <_svfprintf_r+0x3e0>
  402678:	aa25      	add	r2, sp, #148	; 0x94
  40267a:	4659      	mov	r1, fp
  40267c:	4638      	mov	r0, r7
  40267e:	f003 fa6d 	bl	405b5c <__ssprint_r>
  402682:	2800      	cmp	r0, #0
  402684:	f47f aecc 	bne.w	402420 <_svfprintf_r+0x1a4>
  402688:	3d10      	subs	r5, #16
  40268a:	2d10      	cmp	r5, #16
  40268c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40268e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402690:	46c8      	mov	r8, r9
  402692:	dce8      	bgt.n	402666 <_svfprintf_r+0x3ea>
  402694:	3301      	adds	r3, #1
  402696:	4a53      	ldr	r2, [pc, #332]	; (4027e4 <_svfprintf_r+0x568>)
  402698:	9326      	str	r3, [sp, #152]	; 0x98
  40269a:	442c      	add	r4, r5
  40269c:	2b07      	cmp	r3, #7
  40269e:	9427      	str	r4, [sp, #156]	; 0x9c
  4026a0:	e888 0024 	stmia.w	r8, {r2, r5}
  4026a4:	dd08      	ble.n	4026b8 <_svfprintf_r+0x43c>
  4026a6:	aa25      	add	r2, sp, #148	; 0x94
  4026a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4026aa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4026ac:	f003 fa56 	bl	405b5c <__ssprint_r>
  4026b0:	2800      	cmp	r0, #0
  4026b2:	f47f aeb5 	bne.w	402420 <_svfprintf_r+0x1a4>
  4026b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4026ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4026bc:	9908      	ldr	r1, [sp, #32]
  4026be:	428a      	cmp	r2, r1
  4026c0:	bfac      	ite	ge
  4026c2:	189b      	addge	r3, r3, r2
  4026c4:	185b      	addlt	r3, r3, r1
  4026c6:	9309      	str	r3, [sp, #36]	; 0x24
  4026c8:	2c00      	cmp	r4, #0
  4026ca:	f040 830d 	bne.w	402ce8 <_svfprintf_r+0xa6c>
  4026ce:	2300      	movs	r3, #0
  4026d0:	9326      	str	r3, [sp, #152]	; 0x98
  4026d2:	46c8      	mov	r8, r9
  4026d4:	e5f9      	b.n	4022ca <_svfprintf_r+0x4e>
  4026d6:	9311      	str	r3, [sp, #68]	; 0x44
  4026d8:	f01b 0320 	ands.w	r3, fp, #32
  4026dc:	f040 81e3 	bne.w	402aa6 <_svfprintf_r+0x82a>
  4026e0:	f01b 0210 	ands.w	r2, fp, #16
  4026e4:	f040 842e 	bne.w	402f44 <_svfprintf_r+0xcc8>
  4026e8:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  4026ec:	f000 842a 	beq.w	402f44 <_svfprintf_r+0xcc8>
  4026f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4026f2:	4613      	mov	r3, r2
  4026f4:	460a      	mov	r2, r1
  4026f6:	3204      	adds	r2, #4
  4026f8:	880c      	ldrh	r4, [r1, #0]
  4026fa:	920f      	str	r2, [sp, #60]	; 0x3c
  4026fc:	2500      	movs	r5, #0
  4026fe:	e6b0      	b.n	402462 <_svfprintf_r+0x1e6>
  402700:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402702:	9311      	str	r3, [sp, #68]	; 0x44
  402704:	6816      	ldr	r6, [r2, #0]
  402706:	2400      	movs	r4, #0
  402708:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  40270c:	1d15      	adds	r5, r2, #4
  40270e:	2e00      	cmp	r6, #0
  402710:	f000 86a7 	beq.w	403462 <_svfprintf_r+0x11e6>
  402714:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402716:	1c53      	adds	r3, r2, #1
  402718:	f000 8609 	beq.w	40332e <_svfprintf_r+0x10b2>
  40271c:	4621      	mov	r1, r4
  40271e:	4630      	mov	r0, r6
  402720:	f002 fd4e 	bl	4051c0 <memchr>
  402724:	2800      	cmp	r0, #0
  402726:	f000 86e1 	beq.w	4034ec <_svfprintf_r+0x1270>
  40272a:	1b83      	subs	r3, r0, r6
  40272c:	930e      	str	r3, [sp, #56]	; 0x38
  40272e:	940a      	str	r4, [sp, #40]	; 0x28
  402730:	950f      	str	r5, [sp, #60]	; 0x3c
  402732:	f8cd b01c 	str.w	fp, [sp, #28]
  402736:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40273a:	9308      	str	r3, [sp, #32]
  40273c:	9412      	str	r4, [sp, #72]	; 0x48
  40273e:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402742:	e6b3      	b.n	4024ac <_svfprintf_r+0x230>
  402744:	f89a 3000 	ldrb.w	r3, [sl]
  402748:	2201      	movs	r2, #1
  40274a:	212b      	movs	r1, #43	; 0x2b
  40274c:	e5ee      	b.n	40232c <_svfprintf_r+0xb0>
  40274e:	f04b 0b20 	orr.w	fp, fp, #32
  402752:	f89a 3000 	ldrb.w	r3, [sl]
  402756:	e5e9      	b.n	40232c <_svfprintf_r+0xb0>
  402758:	9311      	str	r3, [sp, #68]	; 0x44
  40275a:	2a00      	cmp	r2, #0
  40275c:	f040 8795 	bne.w	40368a <_svfprintf_r+0x140e>
  402760:	4b22      	ldr	r3, [pc, #136]	; (4027ec <_svfprintf_r+0x570>)
  402762:	9318      	str	r3, [sp, #96]	; 0x60
  402764:	f01b 0f20 	tst.w	fp, #32
  402768:	f040 8111 	bne.w	40298e <_svfprintf_r+0x712>
  40276c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40276e:	f01b 0f10 	tst.w	fp, #16
  402772:	4613      	mov	r3, r2
  402774:	f040 83e1 	bne.w	402f3a <_svfprintf_r+0xcbe>
  402778:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40277c:	f000 83dd 	beq.w	402f3a <_svfprintf_r+0xcbe>
  402780:	3304      	adds	r3, #4
  402782:	8814      	ldrh	r4, [r2, #0]
  402784:	930f      	str	r3, [sp, #60]	; 0x3c
  402786:	2500      	movs	r5, #0
  402788:	f01b 0f01 	tst.w	fp, #1
  40278c:	f000 810c 	beq.w	4029a8 <_svfprintf_r+0x72c>
  402790:	ea54 0305 	orrs.w	r3, r4, r5
  402794:	f000 8108 	beq.w	4029a8 <_svfprintf_r+0x72c>
  402798:	2330      	movs	r3, #48	; 0x30
  40279a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40279e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  4027a2:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  4027a6:	f04b 0b02 	orr.w	fp, fp, #2
  4027aa:	2302      	movs	r3, #2
  4027ac:	e659      	b.n	402462 <_svfprintf_r+0x1e6>
  4027ae:	f89a 3000 	ldrb.w	r3, [sl]
  4027b2:	2900      	cmp	r1, #0
  4027b4:	f47f adba 	bne.w	40232c <_svfprintf_r+0xb0>
  4027b8:	2201      	movs	r2, #1
  4027ba:	2120      	movs	r1, #32
  4027bc:	e5b6      	b.n	40232c <_svfprintf_r+0xb0>
  4027be:	f04b 0b01 	orr.w	fp, fp, #1
  4027c2:	f89a 3000 	ldrb.w	r3, [sl]
  4027c6:	e5b1      	b.n	40232c <_svfprintf_r+0xb0>
  4027c8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  4027ca:	6823      	ldr	r3, [r4, #0]
  4027cc:	930d      	str	r3, [sp, #52]	; 0x34
  4027ce:	4618      	mov	r0, r3
  4027d0:	2800      	cmp	r0, #0
  4027d2:	4623      	mov	r3, r4
  4027d4:	f103 0304 	add.w	r3, r3, #4
  4027d8:	f6ff ae0a 	blt.w	4023f0 <_svfprintf_r+0x174>
  4027dc:	930f      	str	r3, [sp, #60]	; 0x3c
  4027de:	f89a 3000 	ldrb.w	r3, [sl]
  4027e2:	e5a3      	b.n	40232c <_svfprintf_r+0xb0>
  4027e4:	00407250 	.word	0x00407250
  4027e8:	00407260 	.word	0x00407260
  4027ec:	00407230 	.word	0x00407230
  4027f0:	f04b 0b10 	orr.w	fp, fp, #16
  4027f4:	f01b 0f20 	tst.w	fp, #32
  4027f8:	9311      	str	r3, [sp, #68]	; 0x44
  4027fa:	f43f ae23 	beq.w	402444 <_svfprintf_r+0x1c8>
  4027fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402800:	3507      	adds	r5, #7
  402802:	f025 0307 	bic.w	r3, r5, #7
  402806:	f103 0208 	add.w	r2, r3, #8
  40280a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40280e:	920f      	str	r2, [sp, #60]	; 0x3c
  402810:	2301      	movs	r3, #1
  402812:	e626      	b.n	402462 <_svfprintf_r+0x1e6>
  402814:	f89a 3000 	ldrb.w	r3, [sl]
  402818:	2b2a      	cmp	r3, #42	; 0x2a
  40281a:	f10a 0401 	add.w	r4, sl, #1
  40281e:	f000 8727 	beq.w	403670 <_svfprintf_r+0x13f4>
  402822:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402826:	2809      	cmp	r0, #9
  402828:	46a2      	mov	sl, r4
  40282a:	f200 86ad 	bhi.w	403588 <_svfprintf_r+0x130c>
  40282e:	2300      	movs	r3, #0
  402830:	461c      	mov	r4, r3
  402832:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402836:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  40283a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  40283e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402842:	2809      	cmp	r0, #9
  402844:	d9f5      	bls.n	402832 <_svfprintf_r+0x5b6>
  402846:	940a      	str	r4, [sp, #40]	; 0x28
  402848:	e572      	b.n	402330 <_svfprintf_r+0xb4>
  40284a:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  40284e:	f89a 3000 	ldrb.w	r3, [sl]
  402852:	e56b      	b.n	40232c <_svfprintf_r+0xb0>
  402854:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402858:	f89a 3000 	ldrb.w	r3, [sl]
  40285c:	e566      	b.n	40232c <_svfprintf_r+0xb0>
  40285e:	f89a 3000 	ldrb.w	r3, [sl]
  402862:	2b6c      	cmp	r3, #108	; 0x6c
  402864:	bf03      	ittte	eq
  402866:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  40286a:	f04b 0b20 	orreq.w	fp, fp, #32
  40286e:	f10a 0a01 	addeq.w	sl, sl, #1
  402872:	f04b 0b10 	orrne.w	fp, fp, #16
  402876:	e559      	b.n	40232c <_svfprintf_r+0xb0>
  402878:	2a00      	cmp	r2, #0
  40287a:	f040 8711 	bne.w	4036a0 <_svfprintf_r+0x1424>
  40287e:	f01b 0f20 	tst.w	fp, #32
  402882:	f040 84f9 	bne.w	403278 <_svfprintf_r+0xffc>
  402886:	f01b 0f10 	tst.w	fp, #16
  40288a:	f040 84ac 	bne.w	4031e6 <_svfprintf_r+0xf6a>
  40288e:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402892:	f000 84a8 	beq.w	4031e6 <_svfprintf_r+0xf6a>
  402896:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402898:	6813      	ldr	r3, [r2, #0]
  40289a:	3204      	adds	r2, #4
  40289c:	920f      	str	r2, [sp, #60]	; 0x3c
  40289e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  4028a2:	801a      	strh	r2, [r3, #0]
  4028a4:	e511      	b.n	4022ca <_svfprintf_r+0x4e>
  4028a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4028a8:	4bb3      	ldr	r3, [pc, #716]	; (402b78 <_svfprintf_r+0x8fc>)
  4028aa:	680c      	ldr	r4, [r1, #0]
  4028ac:	9318      	str	r3, [sp, #96]	; 0x60
  4028ae:	2230      	movs	r2, #48	; 0x30
  4028b0:	2378      	movs	r3, #120	; 0x78
  4028b2:	3104      	adds	r1, #4
  4028b4:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  4028b8:	9311      	str	r3, [sp, #68]	; 0x44
  4028ba:	f04b 0b02 	orr.w	fp, fp, #2
  4028be:	910f      	str	r1, [sp, #60]	; 0x3c
  4028c0:	2500      	movs	r5, #0
  4028c2:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  4028c6:	2302      	movs	r3, #2
  4028c8:	e5cb      	b.n	402462 <_svfprintf_r+0x1e6>
  4028ca:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4028cc:	9311      	str	r3, [sp, #68]	; 0x44
  4028ce:	680a      	ldr	r2, [r1, #0]
  4028d0:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  4028d4:	2300      	movs	r3, #0
  4028d6:	460a      	mov	r2, r1
  4028d8:	461f      	mov	r7, r3
  4028da:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  4028de:	3204      	adds	r2, #4
  4028e0:	2301      	movs	r3, #1
  4028e2:	9308      	str	r3, [sp, #32]
  4028e4:	f8cd b01c 	str.w	fp, [sp, #28]
  4028e8:	970a      	str	r7, [sp, #40]	; 0x28
  4028ea:	9712      	str	r7, [sp, #72]	; 0x48
  4028ec:	920f      	str	r2, [sp, #60]	; 0x3c
  4028ee:	930e      	str	r3, [sp, #56]	; 0x38
  4028f0:	ae28      	add	r6, sp, #160	; 0xa0
  4028f2:	e5df      	b.n	4024b4 <_svfprintf_r+0x238>
  4028f4:	9311      	str	r3, [sp, #68]	; 0x44
  4028f6:	2a00      	cmp	r2, #0
  4028f8:	f040 86ea 	bne.w	4036d0 <_svfprintf_r+0x1454>
  4028fc:	f01b 0f20 	tst.w	fp, #32
  402900:	d15d      	bne.n	4029be <_svfprintf_r+0x742>
  402902:	f01b 0f10 	tst.w	fp, #16
  402906:	f040 8308 	bne.w	402f1a <_svfprintf_r+0xc9e>
  40290a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40290e:	f000 8304 	beq.w	402f1a <_svfprintf_r+0xc9e>
  402912:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402914:	f9b1 4000 	ldrsh.w	r4, [r1]
  402918:	3104      	adds	r1, #4
  40291a:	17e5      	asrs	r5, r4, #31
  40291c:	4622      	mov	r2, r4
  40291e:	462b      	mov	r3, r5
  402920:	910f      	str	r1, [sp, #60]	; 0x3c
  402922:	2a00      	cmp	r2, #0
  402924:	f173 0300 	sbcs.w	r3, r3, #0
  402928:	db58      	blt.n	4029dc <_svfprintf_r+0x760>
  40292a:	990a      	ldr	r1, [sp, #40]	; 0x28
  40292c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402930:	1c4a      	adds	r2, r1, #1
  402932:	f04f 0301 	mov.w	r3, #1
  402936:	f47f ad9b 	bne.w	402470 <_svfprintf_r+0x1f4>
  40293a:	ea54 0205 	orrs.w	r2, r4, r5
  40293e:	f000 81df 	beq.w	402d00 <_svfprintf_r+0xa84>
  402942:	f8cd b01c 	str.w	fp, [sp, #28]
  402946:	2b01      	cmp	r3, #1
  402948:	f000 827b 	beq.w	402e42 <_svfprintf_r+0xbc6>
  40294c:	2b02      	cmp	r3, #2
  40294e:	f040 8206 	bne.w	402d5e <_svfprintf_r+0xae2>
  402952:	9818      	ldr	r0, [sp, #96]	; 0x60
  402954:	464e      	mov	r6, r9
  402956:	0923      	lsrs	r3, r4, #4
  402958:	f004 010f 	and.w	r1, r4, #15
  40295c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402960:	092a      	lsrs	r2, r5, #4
  402962:	461c      	mov	r4, r3
  402964:	4615      	mov	r5, r2
  402966:	5c43      	ldrb	r3, [r0, r1]
  402968:	f806 3d01 	strb.w	r3, [r6, #-1]!
  40296c:	ea54 0305 	orrs.w	r3, r4, r5
  402970:	d1f1      	bne.n	402956 <_svfprintf_r+0x6da>
  402972:	eba9 0306 	sub.w	r3, r9, r6
  402976:	930e      	str	r3, [sp, #56]	; 0x38
  402978:	e590      	b.n	40249c <_svfprintf_r+0x220>
  40297a:	9311      	str	r3, [sp, #68]	; 0x44
  40297c:	2a00      	cmp	r2, #0
  40297e:	f040 86a3 	bne.w	4036c8 <_svfprintf_r+0x144c>
  402982:	4b7e      	ldr	r3, [pc, #504]	; (402b7c <_svfprintf_r+0x900>)
  402984:	9318      	str	r3, [sp, #96]	; 0x60
  402986:	f01b 0f20 	tst.w	fp, #32
  40298a:	f43f aeef 	beq.w	40276c <_svfprintf_r+0x4f0>
  40298e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402990:	3507      	adds	r5, #7
  402992:	f025 0307 	bic.w	r3, r5, #7
  402996:	f103 0208 	add.w	r2, r3, #8
  40299a:	f01b 0f01 	tst.w	fp, #1
  40299e:	920f      	str	r2, [sp, #60]	; 0x3c
  4029a0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4029a4:	f47f aef4 	bne.w	402790 <_svfprintf_r+0x514>
  4029a8:	2302      	movs	r3, #2
  4029aa:	e55a      	b.n	402462 <_svfprintf_r+0x1e6>
  4029ac:	9311      	str	r3, [sp, #68]	; 0x44
  4029ae:	2a00      	cmp	r2, #0
  4029b0:	f040 8686 	bne.w	4036c0 <_svfprintf_r+0x1444>
  4029b4:	f04b 0b10 	orr.w	fp, fp, #16
  4029b8:	f01b 0f20 	tst.w	fp, #32
  4029bc:	d0a1      	beq.n	402902 <_svfprintf_r+0x686>
  4029be:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4029c0:	3507      	adds	r5, #7
  4029c2:	f025 0507 	bic.w	r5, r5, #7
  4029c6:	e9d5 2300 	ldrd	r2, r3, [r5]
  4029ca:	2a00      	cmp	r2, #0
  4029cc:	f105 0108 	add.w	r1, r5, #8
  4029d0:	461d      	mov	r5, r3
  4029d2:	f173 0300 	sbcs.w	r3, r3, #0
  4029d6:	910f      	str	r1, [sp, #60]	; 0x3c
  4029d8:	4614      	mov	r4, r2
  4029da:	daa6      	bge.n	40292a <_svfprintf_r+0x6ae>
  4029dc:	272d      	movs	r7, #45	; 0x2d
  4029de:	4264      	negs	r4, r4
  4029e0:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  4029e4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4029e8:	2301      	movs	r3, #1
  4029ea:	e53d      	b.n	402468 <_svfprintf_r+0x1ec>
  4029ec:	9311      	str	r3, [sp, #68]	; 0x44
  4029ee:	2a00      	cmp	r2, #0
  4029f0:	f040 8662 	bne.w	4036b8 <_svfprintf_r+0x143c>
  4029f4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4029f6:	3507      	adds	r5, #7
  4029f8:	f025 0307 	bic.w	r3, r5, #7
  4029fc:	f103 0208 	add.w	r2, r3, #8
  402a00:	920f      	str	r2, [sp, #60]	; 0x3c
  402a02:	681a      	ldr	r2, [r3, #0]
  402a04:	9215      	str	r2, [sp, #84]	; 0x54
  402a06:	685b      	ldr	r3, [r3, #4]
  402a08:	9314      	str	r3, [sp, #80]	; 0x50
  402a0a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402a0c:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402a0e:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  402a12:	4628      	mov	r0, r5
  402a14:	4621      	mov	r1, r4
  402a16:	f04f 32ff 	mov.w	r2, #4294967295
  402a1a:	4b59      	ldr	r3, [pc, #356]	; (402b80 <_svfprintf_r+0x904>)
  402a1c:	f003 fd2e 	bl	40647c <__aeabi_dcmpun>
  402a20:	2800      	cmp	r0, #0
  402a22:	f040 834a 	bne.w	4030ba <_svfprintf_r+0xe3e>
  402a26:	4628      	mov	r0, r5
  402a28:	4621      	mov	r1, r4
  402a2a:	f04f 32ff 	mov.w	r2, #4294967295
  402a2e:	4b54      	ldr	r3, [pc, #336]	; (402b80 <_svfprintf_r+0x904>)
  402a30:	f003 fd06 	bl	406440 <__aeabi_dcmple>
  402a34:	2800      	cmp	r0, #0
  402a36:	f040 8340 	bne.w	4030ba <_svfprintf_r+0xe3e>
  402a3a:	a815      	add	r0, sp, #84	; 0x54
  402a3c:	c80d      	ldmia	r0, {r0, r2, r3}
  402a3e:	9914      	ldr	r1, [sp, #80]	; 0x50
  402a40:	f003 fcf4 	bl	40642c <__aeabi_dcmplt>
  402a44:	2800      	cmp	r0, #0
  402a46:	f040 8530 	bne.w	4034aa <_svfprintf_r+0x122e>
  402a4a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402a4e:	4e4d      	ldr	r6, [pc, #308]	; (402b84 <_svfprintf_r+0x908>)
  402a50:	4b4d      	ldr	r3, [pc, #308]	; (402b88 <_svfprintf_r+0x90c>)
  402a52:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  402a56:	9007      	str	r0, [sp, #28]
  402a58:	9811      	ldr	r0, [sp, #68]	; 0x44
  402a5a:	2203      	movs	r2, #3
  402a5c:	2100      	movs	r1, #0
  402a5e:	9208      	str	r2, [sp, #32]
  402a60:	910a      	str	r1, [sp, #40]	; 0x28
  402a62:	2847      	cmp	r0, #71	; 0x47
  402a64:	bfd8      	it	le
  402a66:	461e      	movle	r6, r3
  402a68:	920e      	str	r2, [sp, #56]	; 0x38
  402a6a:	9112      	str	r1, [sp, #72]	; 0x48
  402a6c:	e51e      	b.n	4024ac <_svfprintf_r+0x230>
  402a6e:	f04b 0b08 	orr.w	fp, fp, #8
  402a72:	f89a 3000 	ldrb.w	r3, [sl]
  402a76:	e459      	b.n	40232c <_svfprintf_r+0xb0>
  402a78:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402a7c:	2300      	movs	r3, #0
  402a7e:	461c      	mov	r4, r3
  402a80:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402a84:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402a88:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402a8c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402a90:	2809      	cmp	r0, #9
  402a92:	d9f5      	bls.n	402a80 <_svfprintf_r+0x804>
  402a94:	940d      	str	r4, [sp, #52]	; 0x34
  402a96:	e44b      	b.n	402330 <_svfprintf_r+0xb4>
  402a98:	f04b 0b10 	orr.w	fp, fp, #16
  402a9c:	9311      	str	r3, [sp, #68]	; 0x44
  402a9e:	f01b 0320 	ands.w	r3, fp, #32
  402aa2:	f43f ae1d 	beq.w	4026e0 <_svfprintf_r+0x464>
  402aa6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402aa8:	3507      	adds	r5, #7
  402aaa:	f025 0307 	bic.w	r3, r5, #7
  402aae:	f103 0208 	add.w	r2, r3, #8
  402ab2:	e9d3 4500 	ldrd	r4, r5, [r3]
  402ab6:	920f      	str	r2, [sp, #60]	; 0x3c
  402ab8:	2300      	movs	r3, #0
  402aba:	e4d2      	b.n	402462 <_svfprintf_r+0x1e6>
  402abc:	9311      	str	r3, [sp, #68]	; 0x44
  402abe:	2a00      	cmp	r2, #0
  402ac0:	f040 85e7 	bne.w	403692 <_svfprintf_r+0x1416>
  402ac4:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402ac6:	2a00      	cmp	r2, #0
  402ac8:	f43f aca3 	beq.w	402412 <_svfprintf_r+0x196>
  402acc:	2300      	movs	r3, #0
  402ace:	2101      	movs	r1, #1
  402ad0:	461f      	mov	r7, r3
  402ad2:	9108      	str	r1, [sp, #32]
  402ad4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402ad8:	f8cd b01c 	str.w	fp, [sp, #28]
  402adc:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402ae0:	930a      	str	r3, [sp, #40]	; 0x28
  402ae2:	9312      	str	r3, [sp, #72]	; 0x48
  402ae4:	910e      	str	r1, [sp, #56]	; 0x38
  402ae6:	ae28      	add	r6, sp, #160	; 0xa0
  402ae8:	e4e4      	b.n	4024b4 <_svfprintf_r+0x238>
  402aea:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402aec:	e534      	b.n	402558 <_svfprintf_r+0x2dc>
  402aee:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402af0:	2b65      	cmp	r3, #101	; 0x65
  402af2:	f340 80a7 	ble.w	402c44 <_svfprintf_r+0x9c8>
  402af6:	a815      	add	r0, sp, #84	; 0x54
  402af8:	c80d      	ldmia	r0, {r0, r2, r3}
  402afa:	9914      	ldr	r1, [sp, #80]	; 0x50
  402afc:	f003 fc8c 	bl	406418 <__aeabi_dcmpeq>
  402b00:	2800      	cmp	r0, #0
  402b02:	f000 8150 	beq.w	402da6 <_svfprintf_r+0xb2a>
  402b06:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b08:	4a20      	ldr	r2, [pc, #128]	; (402b8c <_svfprintf_r+0x910>)
  402b0a:	f8c8 2000 	str.w	r2, [r8]
  402b0e:	3301      	adds	r3, #1
  402b10:	3401      	adds	r4, #1
  402b12:	2201      	movs	r2, #1
  402b14:	2b07      	cmp	r3, #7
  402b16:	9427      	str	r4, [sp, #156]	; 0x9c
  402b18:	9326      	str	r3, [sp, #152]	; 0x98
  402b1a:	f8c8 2004 	str.w	r2, [r8, #4]
  402b1e:	f300 836a 	bgt.w	4031f6 <_svfprintf_r+0xf7a>
  402b22:	f108 0808 	add.w	r8, r8, #8
  402b26:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402b28:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402b2a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b2c:	4293      	cmp	r3, r2
  402b2e:	db03      	blt.n	402b38 <_svfprintf_r+0x8bc>
  402b30:	9b07      	ldr	r3, [sp, #28]
  402b32:	07dd      	lsls	r5, r3, #31
  402b34:	f57f ad82 	bpl.w	40263c <_svfprintf_r+0x3c0>
  402b38:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b3a:	9919      	ldr	r1, [sp, #100]	; 0x64
  402b3c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402b3e:	f8c8 2000 	str.w	r2, [r8]
  402b42:	3301      	adds	r3, #1
  402b44:	440c      	add	r4, r1
  402b46:	2b07      	cmp	r3, #7
  402b48:	f8c8 1004 	str.w	r1, [r8, #4]
  402b4c:	9427      	str	r4, [sp, #156]	; 0x9c
  402b4e:	9326      	str	r3, [sp, #152]	; 0x98
  402b50:	f300 839e 	bgt.w	403290 <_svfprintf_r+0x1014>
  402b54:	f108 0808 	add.w	r8, r8, #8
  402b58:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b5a:	1e5e      	subs	r6, r3, #1
  402b5c:	2e00      	cmp	r6, #0
  402b5e:	f77f ad6d 	ble.w	40263c <_svfprintf_r+0x3c0>
  402b62:	2e10      	cmp	r6, #16
  402b64:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402b66:	4d0a      	ldr	r5, [pc, #40]	; (402b90 <_svfprintf_r+0x914>)
  402b68:	f340 81f5 	ble.w	402f56 <_svfprintf_r+0xcda>
  402b6c:	4622      	mov	r2, r4
  402b6e:	2710      	movs	r7, #16
  402b70:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402b74:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402b76:	e013      	b.n	402ba0 <_svfprintf_r+0x924>
  402b78:	00407230 	.word	0x00407230
  402b7c:	0040721c 	.word	0x0040721c
  402b80:	7fefffff 	.word	0x7fefffff
  402b84:	00407210 	.word	0x00407210
  402b88:	0040720c 	.word	0x0040720c
  402b8c:	0040724c 	.word	0x0040724c
  402b90:	00407260 	.word	0x00407260
  402b94:	f108 0808 	add.w	r8, r8, #8
  402b98:	3e10      	subs	r6, #16
  402b9a:	2e10      	cmp	r6, #16
  402b9c:	f340 81da 	ble.w	402f54 <_svfprintf_r+0xcd8>
  402ba0:	3301      	adds	r3, #1
  402ba2:	3210      	adds	r2, #16
  402ba4:	2b07      	cmp	r3, #7
  402ba6:	9227      	str	r2, [sp, #156]	; 0x9c
  402ba8:	9326      	str	r3, [sp, #152]	; 0x98
  402baa:	e888 00a0 	stmia.w	r8, {r5, r7}
  402bae:	ddf1      	ble.n	402b94 <_svfprintf_r+0x918>
  402bb0:	aa25      	add	r2, sp, #148	; 0x94
  402bb2:	4621      	mov	r1, r4
  402bb4:	4658      	mov	r0, fp
  402bb6:	f002 ffd1 	bl	405b5c <__ssprint_r>
  402bba:	2800      	cmp	r0, #0
  402bbc:	f47f ac30 	bne.w	402420 <_svfprintf_r+0x1a4>
  402bc0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402bc2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bc4:	46c8      	mov	r8, r9
  402bc6:	e7e7      	b.n	402b98 <_svfprintf_r+0x91c>
  402bc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402bca:	9a08      	ldr	r2, [sp, #32]
  402bcc:	1a9f      	subs	r7, r3, r2
  402bce:	2f00      	cmp	r7, #0
  402bd0:	f77f ace5 	ble.w	40259e <_svfprintf_r+0x322>
  402bd4:	2f10      	cmp	r7, #16
  402bd6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bd8:	4db6      	ldr	r5, [pc, #728]	; (402eb4 <_svfprintf_r+0xc38>)
  402bda:	dd27      	ble.n	402c2c <_svfprintf_r+0x9b0>
  402bdc:	4642      	mov	r2, r8
  402bde:	4621      	mov	r1, r4
  402be0:	46b0      	mov	r8, r6
  402be2:	f04f 0b10 	mov.w	fp, #16
  402be6:	462e      	mov	r6, r5
  402be8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402bea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402bec:	e004      	b.n	402bf8 <_svfprintf_r+0x97c>
  402bee:	3f10      	subs	r7, #16
  402bf0:	2f10      	cmp	r7, #16
  402bf2:	f102 0208 	add.w	r2, r2, #8
  402bf6:	dd15      	ble.n	402c24 <_svfprintf_r+0x9a8>
  402bf8:	3301      	adds	r3, #1
  402bfa:	3110      	adds	r1, #16
  402bfc:	2b07      	cmp	r3, #7
  402bfe:	9127      	str	r1, [sp, #156]	; 0x9c
  402c00:	9326      	str	r3, [sp, #152]	; 0x98
  402c02:	e882 0840 	stmia.w	r2, {r6, fp}
  402c06:	ddf2      	ble.n	402bee <_svfprintf_r+0x972>
  402c08:	aa25      	add	r2, sp, #148	; 0x94
  402c0a:	4629      	mov	r1, r5
  402c0c:	4620      	mov	r0, r4
  402c0e:	f002 ffa5 	bl	405b5c <__ssprint_r>
  402c12:	2800      	cmp	r0, #0
  402c14:	f47f ac04 	bne.w	402420 <_svfprintf_r+0x1a4>
  402c18:	3f10      	subs	r7, #16
  402c1a:	2f10      	cmp	r7, #16
  402c1c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402c1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402c20:	464a      	mov	r2, r9
  402c22:	dce9      	bgt.n	402bf8 <_svfprintf_r+0x97c>
  402c24:	4635      	mov	r5, r6
  402c26:	460c      	mov	r4, r1
  402c28:	4646      	mov	r6, r8
  402c2a:	4690      	mov	r8, r2
  402c2c:	3301      	adds	r3, #1
  402c2e:	443c      	add	r4, r7
  402c30:	2b07      	cmp	r3, #7
  402c32:	9427      	str	r4, [sp, #156]	; 0x9c
  402c34:	9326      	str	r3, [sp, #152]	; 0x98
  402c36:	e888 00a0 	stmia.w	r8, {r5, r7}
  402c3a:	f300 8232 	bgt.w	4030a2 <_svfprintf_r+0xe26>
  402c3e:	f108 0808 	add.w	r8, r8, #8
  402c42:	e4ac      	b.n	40259e <_svfprintf_r+0x322>
  402c44:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c46:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402c48:	2b01      	cmp	r3, #1
  402c4a:	f340 81fe 	ble.w	40304a <_svfprintf_r+0xdce>
  402c4e:	3701      	adds	r7, #1
  402c50:	3401      	adds	r4, #1
  402c52:	2301      	movs	r3, #1
  402c54:	2f07      	cmp	r7, #7
  402c56:	9427      	str	r4, [sp, #156]	; 0x9c
  402c58:	9726      	str	r7, [sp, #152]	; 0x98
  402c5a:	f8c8 6000 	str.w	r6, [r8]
  402c5e:	f8c8 3004 	str.w	r3, [r8, #4]
  402c62:	f300 8203 	bgt.w	40306c <_svfprintf_r+0xdf0>
  402c66:	f108 0808 	add.w	r8, r8, #8
  402c6a:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402c6c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402c6e:	f8c8 3000 	str.w	r3, [r8]
  402c72:	3701      	adds	r7, #1
  402c74:	4414      	add	r4, r2
  402c76:	2f07      	cmp	r7, #7
  402c78:	9427      	str	r4, [sp, #156]	; 0x9c
  402c7a:	9726      	str	r7, [sp, #152]	; 0x98
  402c7c:	f8c8 2004 	str.w	r2, [r8, #4]
  402c80:	f300 8200 	bgt.w	403084 <_svfprintf_r+0xe08>
  402c84:	f108 0808 	add.w	r8, r8, #8
  402c88:	a815      	add	r0, sp, #84	; 0x54
  402c8a:	c80d      	ldmia	r0, {r0, r2, r3}
  402c8c:	9914      	ldr	r1, [sp, #80]	; 0x50
  402c8e:	f003 fbc3 	bl	406418 <__aeabi_dcmpeq>
  402c92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402c94:	2800      	cmp	r0, #0
  402c96:	f040 8101 	bne.w	402e9c <_svfprintf_r+0xc20>
  402c9a:	3b01      	subs	r3, #1
  402c9c:	3701      	adds	r7, #1
  402c9e:	3601      	adds	r6, #1
  402ca0:	441c      	add	r4, r3
  402ca2:	2f07      	cmp	r7, #7
  402ca4:	9726      	str	r7, [sp, #152]	; 0x98
  402ca6:	9427      	str	r4, [sp, #156]	; 0x9c
  402ca8:	f8c8 6000 	str.w	r6, [r8]
  402cac:	f8c8 3004 	str.w	r3, [r8, #4]
  402cb0:	f300 8127 	bgt.w	402f02 <_svfprintf_r+0xc86>
  402cb4:	f108 0808 	add.w	r8, r8, #8
  402cb8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402cba:	f8c8 2004 	str.w	r2, [r8, #4]
  402cbe:	3701      	adds	r7, #1
  402cc0:	4414      	add	r4, r2
  402cc2:	ab21      	add	r3, sp, #132	; 0x84
  402cc4:	2f07      	cmp	r7, #7
  402cc6:	9427      	str	r4, [sp, #156]	; 0x9c
  402cc8:	9726      	str	r7, [sp, #152]	; 0x98
  402cca:	f8c8 3000 	str.w	r3, [r8]
  402cce:	f77f acb3 	ble.w	402638 <_svfprintf_r+0x3bc>
  402cd2:	aa25      	add	r2, sp, #148	; 0x94
  402cd4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cd6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cd8:	f002 ff40 	bl	405b5c <__ssprint_r>
  402cdc:	2800      	cmp	r0, #0
  402cde:	f47f ab9f 	bne.w	402420 <_svfprintf_r+0x1a4>
  402ce2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ce4:	46c8      	mov	r8, r9
  402ce6:	e4a9      	b.n	40263c <_svfprintf_r+0x3c0>
  402ce8:	aa25      	add	r2, sp, #148	; 0x94
  402cea:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cec:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cee:	f002 ff35 	bl	405b5c <__ssprint_r>
  402cf2:	2800      	cmp	r0, #0
  402cf4:	f43f aceb 	beq.w	4026ce <_svfprintf_r+0x452>
  402cf8:	f7ff bb92 	b.w	402420 <_svfprintf_r+0x1a4>
  402cfc:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402d00:	2b01      	cmp	r3, #1
  402d02:	f000 8134 	beq.w	402f6e <_svfprintf_r+0xcf2>
  402d06:	2b02      	cmp	r3, #2
  402d08:	d125      	bne.n	402d56 <_svfprintf_r+0xada>
  402d0a:	f8cd b01c 	str.w	fp, [sp, #28]
  402d0e:	2400      	movs	r4, #0
  402d10:	2500      	movs	r5, #0
  402d12:	e61e      	b.n	402952 <_svfprintf_r+0x6d6>
  402d14:	aa25      	add	r2, sp, #148	; 0x94
  402d16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d18:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d1a:	f002 ff1f 	bl	405b5c <__ssprint_r>
  402d1e:	2800      	cmp	r0, #0
  402d20:	f47f ab7e 	bne.w	402420 <_svfprintf_r+0x1a4>
  402d24:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d26:	46c8      	mov	r8, r9
  402d28:	e475      	b.n	402616 <_svfprintf_r+0x39a>
  402d2a:	aa25      	add	r2, sp, #148	; 0x94
  402d2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d2e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d30:	f002 ff14 	bl	405b5c <__ssprint_r>
  402d34:	2800      	cmp	r0, #0
  402d36:	f47f ab73 	bne.w	402420 <_svfprintf_r+0x1a4>
  402d3a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d3c:	46c8      	mov	r8, r9
  402d3e:	e41b      	b.n	402578 <_svfprintf_r+0x2fc>
  402d40:	aa25      	add	r2, sp, #148	; 0x94
  402d42:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402d44:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d46:	f002 ff09 	bl	405b5c <__ssprint_r>
  402d4a:	2800      	cmp	r0, #0
  402d4c:	f47f ab68 	bne.w	402420 <_svfprintf_r+0x1a4>
  402d50:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402d52:	46c8      	mov	r8, r9
  402d54:	e420      	b.n	402598 <_svfprintf_r+0x31c>
  402d56:	f8cd b01c 	str.w	fp, [sp, #28]
  402d5a:	2400      	movs	r4, #0
  402d5c:	2500      	movs	r5, #0
  402d5e:	4649      	mov	r1, r9
  402d60:	e000      	b.n	402d64 <_svfprintf_r+0xae8>
  402d62:	4631      	mov	r1, r6
  402d64:	08e2      	lsrs	r2, r4, #3
  402d66:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402d6a:	08e8      	lsrs	r0, r5, #3
  402d6c:	f004 0307 	and.w	r3, r4, #7
  402d70:	4605      	mov	r5, r0
  402d72:	4614      	mov	r4, r2
  402d74:	3330      	adds	r3, #48	; 0x30
  402d76:	ea54 0205 	orrs.w	r2, r4, r5
  402d7a:	f801 3c01 	strb.w	r3, [r1, #-1]
  402d7e:	f101 36ff 	add.w	r6, r1, #4294967295
  402d82:	d1ee      	bne.n	402d62 <_svfprintf_r+0xae6>
  402d84:	9a07      	ldr	r2, [sp, #28]
  402d86:	07d2      	lsls	r2, r2, #31
  402d88:	f57f adf3 	bpl.w	402972 <_svfprintf_r+0x6f6>
  402d8c:	2b30      	cmp	r3, #48	; 0x30
  402d8e:	f43f adf0 	beq.w	402972 <_svfprintf_r+0x6f6>
  402d92:	3902      	subs	r1, #2
  402d94:	2330      	movs	r3, #48	; 0x30
  402d96:	f806 3c01 	strb.w	r3, [r6, #-1]
  402d9a:	eba9 0301 	sub.w	r3, r9, r1
  402d9e:	930e      	str	r3, [sp, #56]	; 0x38
  402da0:	460e      	mov	r6, r1
  402da2:	f7ff bb7b 	b.w	40249c <_svfprintf_r+0x220>
  402da6:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402da8:	2900      	cmp	r1, #0
  402daa:	f340 822e 	ble.w	40320a <_svfprintf_r+0xf8e>
  402dae:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402db0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402db2:	4293      	cmp	r3, r2
  402db4:	bfa8      	it	ge
  402db6:	4613      	movge	r3, r2
  402db8:	2b00      	cmp	r3, #0
  402dba:	461f      	mov	r7, r3
  402dbc:	dd0d      	ble.n	402dda <_svfprintf_r+0xb5e>
  402dbe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402dc0:	f8c8 6000 	str.w	r6, [r8]
  402dc4:	3301      	adds	r3, #1
  402dc6:	443c      	add	r4, r7
  402dc8:	2b07      	cmp	r3, #7
  402dca:	9427      	str	r4, [sp, #156]	; 0x9c
  402dcc:	f8c8 7004 	str.w	r7, [r8, #4]
  402dd0:	9326      	str	r3, [sp, #152]	; 0x98
  402dd2:	f300 831f 	bgt.w	403414 <_svfprintf_r+0x1198>
  402dd6:	f108 0808 	add.w	r8, r8, #8
  402dda:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ddc:	2f00      	cmp	r7, #0
  402dde:	bfa8      	it	ge
  402de0:	1bdb      	subge	r3, r3, r7
  402de2:	2b00      	cmp	r3, #0
  402de4:	461f      	mov	r7, r3
  402de6:	f340 80d6 	ble.w	402f96 <_svfprintf_r+0xd1a>
  402dea:	2f10      	cmp	r7, #16
  402dec:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402dee:	4d31      	ldr	r5, [pc, #196]	; (402eb4 <_svfprintf_r+0xc38>)
  402df0:	f340 81ed 	ble.w	4031ce <_svfprintf_r+0xf52>
  402df4:	4642      	mov	r2, r8
  402df6:	4621      	mov	r1, r4
  402df8:	46b0      	mov	r8, r6
  402dfa:	f04f 0b10 	mov.w	fp, #16
  402dfe:	462e      	mov	r6, r5
  402e00:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402e02:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402e04:	e004      	b.n	402e10 <_svfprintf_r+0xb94>
  402e06:	3208      	adds	r2, #8
  402e08:	3f10      	subs	r7, #16
  402e0a:	2f10      	cmp	r7, #16
  402e0c:	f340 81db 	ble.w	4031c6 <_svfprintf_r+0xf4a>
  402e10:	3301      	adds	r3, #1
  402e12:	3110      	adds	r1, #16
  402e14:	2b07      	cmp	r3, #7
  402e16:	9127      	str	r1, [sp, #156]	; 0x9c
  402e18:	9326      	str	r3, [sp, #152]	; 0x98
  402e1a:	e882 0840 	stmia.w	r2, {r6, fp}
  402e1e:	ddf2      	ble.n	402e06 <_svfprintf_r+0xb8a>
  402e20:	aa25      	add	r2, sp, #148	; 0x94
  402e22:	4629      	mov	r1, r5
  402e24:	4620      	mov	r0, r4
  402e26:	f002 fe99 	bl	405b5c <__ssprint_r>
  402e2a:	2800      	cmp	r0, #0
  402e2c:	f47f aaf8 	bne.w	402420 <_svfprintf_r+0x1a4>
  402e30:	9927      	ldr	r1, [sp, #156]	; 0x9c
  402e32:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e34:	464a      	mov	r2, r9
  402e36:	e7e7      	b.n	402e08 <_svfprintf_r+0xb8c>
  402e38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e3a:	930e      	str	r3, [sp, #56]	; 0x38
  402e3c:	464e      	mov	r6, r9
  402e3e:	f7ff bb2d 	b.w	40249c <_svfprintf_r+0x220>
  402e42:	2d00      	cmp	r5, #0
  402e44:	bf08      	it	eq
  402e46:	2c0a      	cmpeq	r4, #10
  402e48:	f0c0 808f 	bcc.w	402f6a <_svfprintf_r+0xcee>
  402e4c:	464e      	mov	r6, r9
  402e4e:	4620      	mov	r0, r4
  402e50:	4629      	mov	r1, r5
  402e52:	220a      	movs	r2, #10
  402e54:	2300      	movs	r3, #0
  402e56:	f003 fb27 	bl	4064a8 <__aeabi_uldivmod>
  402e5a:	3230      	adds	r2, #48	; 0x30
  402e5c:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402e60:	4620      	mov	r0, r4
  402e62:	4629      	mov	r1, r5
  402e64:	2300      	movs	r3, #0
  402e66:	220a      	movs	r2, #10
  402e68:	f003 fb1e 	bl	4064a8 <__aeabi_uldivmod>
  402e6c:	4604      	mov	r4, r0
  402e6e:	460d      	mov	r5, r1
  402e70:	ea54 0305 	orrs.w	r3, r4, r5
  402e74:	d1eb      	bne.n	402e4e <_svfprintf_r+0xbd2>
  402e76:	eba9 0306 	sub.w	r3, r9, r6
  402e7a:	930e      	str	r3, [sp, #56]	; 0x38
  402e7c:	f7ff bb0e 	b.w	40249c <_svfprintf_r+0x220>
  402e80:	aa25      	add	r2, sp, #148	; 0x94
  402e82:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e84:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e86:	f002 fe69 	bl	405b5c <__ssprint_r>
  402e8a:	2800      	cmp	r0, #0
  402e8c:	f47f aac8 	bne.w	402420 <_svfprintf_r+0x1a4>
  402e90:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402e94:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e96:	46c8      	mov	r8, r9
  402e98:	f7ff bb5e 	b.w	402558 <_svfprintf_r+0x2dc>
  402e9c:	1e5e      	subs	r6, r3, #1
  402e9e:	2e00      	cmp	r6, #0
  402ea0:	f77f af0a 	ble.w	402cb8 <_svfprintf_r+0xa3c>
  402ea4:	2e10      	cmp	r6, #16
  402ea6:	4d03      	ldr	r5, [pc, #12]	; (402eb4 <_svfprintf_r+0xc38>)
  402ea8:	dd22      	ble.n	402ef0 <_svfprintf_r+0xc74>
  402eaa:	4622      	mov	r2, r4
  402eac:	f04f 0b10 	mov.w	fp, #16
  402eb0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402eb2:	e006      	b.n	402ec2 <_svfprintf_r+0xc46>
  402eb4:	00407260 	.word	0x00407260
  402eb8:	3e10      	subs	r6, #16
  402eba:	2e10      	cmp	r6, #16
  402ebc:	f108 0808 	add.w	r8, r8, #8
  402ec0:	dd15      	ble.n	402eee <_svfprintf_r+0xc72>
  402ec2:	3701      	adds	r7, #1
  402ec4:	3210      	adds	r2, #16
  402ec6:	2f07      	cmp	r7, #7
  402ec8:	9227      	str	r2, [sp, #156]	; 0x9c
  402eca:	9726      	str	r7, [sp, #152]	; 0x98
  402ecc:	e888 0820 	stmia.w	r8, {r5, fp}
  402ed0:	ddf2      	ble.n	402eb8 <_svfprintf_r+0xc3c>
  402ed2:	aa25      	add	r2, sp, #148	; 0x94
  402ed4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ed6:	4620      	mov	r0, r4
  402ed8:	f002 fe40 	bl	405b5c <__ssprint_r>
  402edc:	2800      	cmp	r0, #0
  402ede:	f47f aa9f 	bne.w	402420 <_svfprintf_r+0x1a4>
  402ee2:	3e10      	subs	r6, #16
  402ee4:	2e10      	cmp	r6, #16
  402ee6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402ee8:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402eea:	46c8      	mov	r8, r9
  402eec:	dce9      	bgt.n	402ec2 <_svfprintf_r+0xc46>
  402eee:	4614      	mov	r4, r2
  402ef0:	3701      	adds	r7, #1
  402ef2:	4434      	add	r4, r6
  402ef4:	2f07      	cmp	r7, #7
  402ef6:	9427      	str	r4, [sp, #156]	; 0x9c
  402ef8:	9726      	str	r7, [sp, #152]	; 0x98
  402efa:	e888 0060 	stmia.w	r8, {r5, r6}
  402efe:	f77f aed9 	ble.w	402cb4 <_svfprintf_r+0xa38>
  402f02:	aa25      	add	r2, sp, #148	; 0x94
  402f04:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f06:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f08:	f002 fe28 	bl	405b5c <__ssprint_r>
  402f0c:	2800      	cmp	r0, #0
  402f0e:	f47f aa87 	bne.w	402420 <_svfprintf_r+0x1a4>
  402f12:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f14:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402f16:	46c8      	mov	r8, r9
  402f18:	e6ce      	b.n	402cb8 <_svfprintf_r+0xa3c>
  402f1a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402f1c:	6814      	ldr	r4, [r2, #0]
  402f1e:	4613      	mov	r3, r2
  402f20:	3304      	adds	r3, #4
  402f22:	17e5      	asrs	r5, r4, #31
  402f24:	930f      	str	r3, [sp, #60]	; 0x3c
  402f26:	4622      	mov	r2, r4
  402f28:	462b      	mov	r3, r5
  402f2a:	e4fa      	b.n	402922 <_svfprintf_r+0x6a6>
  402f2c:	3204      	adds	r2, #4
  402f2e:	681c      	ldr	r4, [r3, #0]
  402f30:	920f      	str	r2, [sp, #60]	; 0x3c
  402f32:	2301      	movs	r3, #1
  402f34:	2500      	movs	r5, #0
  402f36:	f7ff ba94 	b.w	402462 <_svfprintf_r+0x1e6>
  402f3a:	681c      	ldr	r4, [r3, #0]
  402f3c:	3304      	adds	r3, #4
  402f3e:	930f      	str	r3, [sp, #60]	; 0x3c
  402f40:	2500      	movs	r5, #0
  402f42:	e421      	b.n	402788 <_svfprintf_r+0x50c>
  402f44:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402f46:	460a      	mov	r2, r1
  402f48:	3204      	adds	r2, #4
  402f4a:	680c      	ldr	r4, [r1, #0]
  402f4c:	920f      	str	r2, [sp, #60]	; 0x3c
  402f4e:	2500      	movs	r5, #0
  402f50:	f7ff ba87 	b.w	402462 <_svfprintf_r+0x1e6>
  402f54:	4614      	mov	r4, r2
  402f56:	3301      	adds	r3, #1
  402f58:	4434      	add	r4, r6
  402f5a:	2b07      	cmp	r3, #7
  402f5c:	9427      	str	r4, [sp, #156]	; 0x9c
  402f5e:	9326      	str	r3, [sp, #152]	; 0x98
  402f60:	e888 0060 	stmia.w	r8, {r5, r6}
  402f64:	f77f ab68 	ble.w	402638 <_svfprintf_r+0x3bc>
  402f68:	e6b3      	b.n	402cd2 <_svfprintf_r+0xa56>
  402f6a:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402f6e:	f8cd b01c 	str.w	fp, [sp, #28]
  402f72:	ae42      	add	r6, sp, #264	; 0x108
  402f74:	3430      	adds	r4, #48	; 0x30
  402f76:	2301      	movs	r3, #1
  402f78:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402f7c:	930e      	str	r3, [sp, #56]	; 0x38
  402f7e:	f7ff ba8d 	b.w	40249c <_svfprintf_r+0x220>
  402f82:	aa25      	add	r2, sp, #148	; 0x94
  402f84:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f86:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f88:	f002 fde8 	bl	405b5c <__ssprint_r>
  402f8c:	2800      	cmp	r0, #0
  402f8e:	f47f aa47 	bne.w	402420 <_svfprintf_r+0x1a4>
  402f92:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402f94:	46c8      	mov	r8, r9
  402f96:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402f98:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402f9a:	429a      	cmp	r2, r3
  402f9c:	db44      	blt.n	403028 <_svfprintf_r+0xdac>
  402f9e:	9b07      	ldr	r3, [sp, #28]
  402fa0:	07d9      	lsls	r1, r3, #31
  402fa2:	d441      	bmi.n	403028 <_svfprintf_r+0xdac>
  402fa4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402fa6:	9812      	ldr	r0, [sp, #72]	; 0x48
  402fa8:	1a9a      	subs	r2, r3, r2
  402faa:	1a1d      	subs	r5, r3, r0
  402fac:	4295      	cmp	r5, r2
  402fae:	bfa8      	it	ge
  402fb0:	4615      	movge	r5, r2
  402fb2:	2d00      	cmp	r5, #0
  402fb4:	dd0e      	ble.n	402fd4 <_svfprintf_r+0xd58>
  402fb6:	9926      	ldr	r1, [sp, #152]	; 0x98
  402fb8:	f8c8 5004 	str.w	r5, [r8, #4]
  402fbc:	3101      	adds	r1, #1
  402fbe:	4406      	add	r6, r0
  402fc0:	442c      	add	r4, r5
  402fc2:	2907      	cmp	r1, #7
  402fc4:	f8c8 6000 	str.w	r6, [r8]
  402fc8:	9427      	str	r4, [sp, #156]	; 0x9c
  402fca:	9126      	str	r1, [sp, #152]	; 0x98
  402fcc:	f300 823b 	bgt.w	403446 <_svfprintf_r+0x11ca>
  402fd0:	f108 0808 	add.w	r8, r8, #8
  402fd4:	2d00      	cmp	r5, #0
  402fd6:	bfac      	ite	ge
  402fd8:	1b56      	subge	r6, r2, r5
  402fda:	4616      	movlt	r6, r2
  402fdc:	2e00      	cmp	r6, #0
  402fde:	f77f ab2d 	ble.w	40263c <_svfprintf_r+0x3c0>
  402fe2:	2e10      	cmp	r6, #16
  402fe4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402fe6:	4db0      	ldr	r5, [pc, #704]	; (4032a8 <_svfprintf_r+0x102c>)
  402fe8:	ddb5      	ble.n	402f56 <_svfprintf_r+0xcda>
  402fea:	4622      	mov	r2, r4
  402fec:	2710      	movs	r7, #16
  402fee:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ff2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402ff4:	e004      	b.n	403000 <_svfprintf_r+0xd84>
  402ff6:	f108 0808 	add.w	r8, r8, #8
  402ffa:	3e10      	subs	r6, #16
  402ffc:	2e10      	cmp	r6, #16
  402ffe:	dda9      	ble.n	402f54 <_svfprintf_r+0xcd8>
  403000:	3301      	adds	r3, #1
  403002:	3210      	adds	r2, #16
  403004:	2b07      	cmp	r3, #7
  403006:	9227      	str	r2, [sp, #156]	; 0x9c
  403008:	9326      	str	r3, [sp, #152]	; 0x98
  40300a:	e888 00a0 	stmia.w	r8, {r5, r7}
  40300e:	ddf2      	ble.n	402ff6 <_svfprintf_r+0xd7a>
  403010:	aa25      	add	r2, sp, #148	; 0x94
  403012:	4621      	mov	r1, r4
  403014:	4658      	mov	r0, fp
  403016:	f002 fda1 	bl	405b5c <__ssprint_r>
  40301a:	2800      	cmp	r0, #0
  40301c:	f47f aa00 	bne.w	402420 <_svfprintf_r+0x1a4>
  403020:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403022:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403024:	46c8      	mov	r8, r9
  403026:	e7e8      	b.n	402ffa <_svfprintf_r+0xd7e>
  403028:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40302a:	9819      	ldr	r0, [sp, #100]	; 0x64
  40302c:	991a      	ldr	r1, [sp, #104]	; 0x68
  40302e:	f8c8 1000 	str.w	r1, [r8]
  403032:	3301      	adds	r3, #1
  403034:	4404      	add	r4, r0
  403036:	2b07      	cmp	r3, #7
  403038:	9427      	str	r4, [sp, #156]	; 0x9c
  40303a:	f8c8 0004 	str.w	r0, [r8, #4]
  40303e:	9326      	str	r3, [sp, #152]	; 0x98
  403040:	f300 81f5 	bgt.w	40342e <_svfprintf_r+0x11b2>
  403044:	f108 0808 	add.w	r8, r8, #8
  403048:	e7ac      	b.n	402fa4 <_svfprintf_r+0xd28>
  40304a:	9b07      	ldr	r3, [sp, #28]
  40304c:	07da      	lsls	r2, r3, #31
  40304e:	f53f adfe 	bmi.w	402c4e <_svfprintf_r+0x9d2>
  403052:	3701      	adds	r7, #1
  403054:	3401      	adds	r4, #1
  403056:	2301      	movs	r3, #1
  403058:	2f07      	cmp	r7, #7
  40305a:	9427      	str	r4, [sp, #156]	; 0x9c
  40305c:	9726      	str	r7, [sp, #152]	; 0x98
  40305e:	f8c8 6000 	str.w	r6, [r8]
  403062:	f8c8 3004 	str.w	r3, [r8, #4]
  403066:	f77f ae25 	ble.w	402cb4 <_svfprintf_r+0xa38>
  40306a:	e74a      	b.n	402f02 <_svfprintf_r+0xc86>
  40306c:	aa25      	add	r2, sp, #148	; 0x94
  40306e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403070:	980c      	ldr	r0, [sp, #48]	; 0x30
  403072:	f002 fd73 	bl	405b5c <__ssprint_r>
  403076:	2800      	cmp	r0, #0
  403078:	f47f a9d2 	bne.w	402420 <_svfprintf_r+0x1a4>
  40307c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40307e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403080:	46c8      	mov	r8, r9
  403082:	e5f2      	b.n	402c6a <_svfprintf_r+0x9ee>
  403084:	aa25      	add	r2, sp, #148	; 0x94
  403086:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403088:	980c      	ldr	r0, [sp, #48]	; 0x30
  40308a:	f002 fd67 	bl	405b5c <__ssprint_r>
  40308e:	2800      	cmp	r0, #0
  403090:	f47f a9c6 	bne.w	402420 <_svfprintf_r+0x1a4>
  403094:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403096:	9f26      	ldr	r7, [sp, #152]	; 0x98
  403098:	46c8      	mov	r8, r9
  40309a:	e5f5      	b.n	402c88 <_svfprintf_r+0xa0c>
  40309c:	464e      	mov	r6, r9
  40309e:	f7ff b9fd 	b.w	40249c <_svfprintf_r+0x220>
  4030a2:	aa25      	add	r2, sp, #148	; 0x94
  4030a4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030a6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4030a8:	f002 fd58 	bl	405b5c <__ssprint_r>
  4030ac:	2800      	cmp	r0, #0
  4030ae:	f47f a9b7 	bne.w	402420 <_svfprintf_r+0x1a4>
  4030b2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4030b4:	46c8      	mov	r8, r9
  4030b6:	f7ff ba72 	b.w	40259e <_svfprintf_r+0x322>
  4030ba:	9c15      	ldr	r4, [sp, #84]	; 0x54
  4030bc:	4622      	mov	r2, r4
  4030be:	4620      	mov	r0, r4
  4030c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4030c2:	4623      	mov	r3, r4
  4030c4:	4621      	mov	r1, r4
  4030c6:	f003 f9d9 	bl	40647c <__aeabi_dcmpun>
  4030ca:	2800      	cmp	r0, #0
  4030cc:	f040 8286 	bne.w	4035dc <_svfprintf_r+0x1360>
  4030d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4030d2:	3301      	adds	r3, #1
  4030d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4030d6:	f023 0320 	bic.w	r3, r3, #32
  4030da:	930e      	str	r3, [sp, #56]	; 0x38
  4030dc:	f000 81e2 	beq.w	4034a4 <_svfprintf_r+0x1228>
  4030e0:	2b47      	cmp	r3, #71	; 0x47
  4030e2:	f000 811e 	beq.w	403322 <_svfprintf_r+0x10a6>
  4030e6:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  4030ea:	9307      	str	r3, [sp, #28]
  4030ec:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4030ee:	1e1f      	subs	r7, r3, #0
  4030f0:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4030f2:	9308      	str	r3, [sp, #32]
  4030f4:	bfbb      	ittet	lt
  4030f6:	463b      	movlt	r3, r7
  4030f8:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  4030fc:	2300      	movge	r3, #0
  4030fe:	232d      	movlt	r3, #45	; 0x2d
  403100:	9310      	str	r3, [sp, #64]	; 0x40
  403102:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403104:	2b66      	cmp	r3, #102	; 0x66
  403106:	f000 81bb 	beq.w	403480 <_svfprintf_r+0x1204>
  40310a:	2b46      	cmp	r3, #70	; 0x46
  40310c:	f000 80df 	beq.w	4032ce <_svfprintf_r+0x1052>
  403110:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403112:	9a08      	ldr	r2, [sp, #32]
  403114:	2b45      	cmp	r3, #69	; 0x45
  403116:	bf0c      	ite	eq
  403118:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  40311a:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  40311c:	a823      	add	r0, sp, #140	; 0x8c
  40311e:	a920      	add	r1, sp, #128	; 0x80
  403120:	bf08      	it	eq
  403122:	1c5d      	addeq	r5, r3, #1
  403124:	9004      	str	r0, [sp, #16]
  403126:	9103      	str	r1, [sp, #12]
  403128:	a81f      	add	r0, sp, #124	; 0x7c
  40312a:	2102      	movs	r1, #2
  40312c:	463b      	mov	r3, r7
  40312e:	9002      	str	r0, [sp, #8]
  403130:	9501      	str	r5, [sp, #4]
  403132:	9100      	str	r1, [sp, #0]
  403134:	980c      	ldr	r0, [sp, #48]	; 0x30
  403136:	f000 fb73 	bl	403820 <_dtoa_r>
  40313a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40313c:	2b67      	cmp	r3, #103	; 0x67
  40313e:	4606      	mov	r6, r0
  403140:	f040 81e0 	bne.w	403504 <_svfprintf_r+0x1288>
  403144:	f01b 0f01 	tst.w	fp, #1
  403148:	f000 8246 	beq.w	4035d8 <_svfprintf_r+0x135c>
  40314c:	1974      	adds	r4, r6, r5
  40314e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  403150:	9808      	ldr	r0, [sp, #32]
  403152:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403154:	4639      	mov	r1, r7
  403156:	f003 f95f 	bl	406418 <__aeabi_dcmpeq>
  40315a:	2800      	cmp	r0, #0
  40315c:	f040 8165 	bne.w	40342a <_svfprintf_r+0x11ae>
  403160:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403162:	42a3      	cmp	r3, r4
  403164:	d206      	bcs.n	403174 <_svfprintf_r+0xef8>
  403166:	2130      	movs	r1, #48	; 0x30
  403168:	1c5a      	adds	r2, r3, #1
  40316a:	9223      	str	r2, [sp, #140]	; 0x8c
  40316c:	7019      	strb	r1, [r3, #0]
  40316e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403170:	429c      	cmp	r4, r3
  403172:	d8f9      	bhi.n	403168 <_svfprintf_r+0xeec>
  403174:	1b9b      	subs	r3, r3, r6
  403176:	9313      	str	r3, [sp, #76]	; 0x4c
  403178:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40317a:	2b47      	cmp	r3, #71	; 0x47
  40317c:	f000 80e9 	beq.w	403352 <_svfprintf_r+0x10d6>
  403180:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403182:	2b65      	cmp	r3, #101	; 0x65
  403184:	f340 81cd 	ble.w	403522 <_svfprintf_r+0x12a6>
  403188:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40318a:	2b66      	cmp	r3, #102	; 0x66
  40318c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40318e:	9312      	str	r3, [sp, #72]	; 0x48
  403190:	f000 819e 	beq.w	4034d0 <_svfprintf_r+0x1254>
  403194:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  403196:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403198:	4619      	mov	r1, r3
  40319a:	4291      	cmp	r1, r2
  40319c:	f300 818a 	bgt.w	4034b4 <_svfprintf_r+0x1238>
  4031a0:	f01b 0f01 	tst.w	fp, #1
  4031a4:	f040 8213 	bne.w	4035ce <_svfprintf_r+0x1352>
  4031a8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  4031ac:	9308      	str	r3, [sp, #32]
  4031ae:	2367      	movs	r3, #103	; 0x67
  4031b0:	920e      	str	r2, [sp, #56]	; 0x38
  4031b2:	9311      	str	r3, [sp, #68]	; 0x44
  4031b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4031b6:	2b00      	cmp	r3, #0
  4031b8:	f040 80c4 	bne.w	403344 <_svfprintf_r+0x10c8>
  4031bc:	930a      	str	r3, [sp, #40]	; 0x28
  4031be:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4031c2:	f7ff b973 	b.w	4024ac <_svfprintf_r+0x230>
  4031c6:	4635      	mov	r5, r6
  4031c8:	460c      	mov	r4, r1
  4031ca:	4646      	mov	r6, r8
  4031cc:	4690      	mov	r8, r2
  4031ce:	3301      	adds	r3, #1
  4031d0:	443c      	add	r4, r7
  4031d2:	2b07      	cmp	r3, #7
  4031d4:	9427      	str	r4, [sp, #156]	; 0x9c
  4031d6:	9326      	str	r3, [sp, #152]	; 0x98
  4031d8:	e888 00a0 	stmia.w	r8, {r5, r7}
  4031dc:	f73f aed1 	bgt.w	402f82 <_svfprintf_r+0xd06>
  4031e0:	f108 0808 	add.w	r8, r8, #8
  4031e4:	e6d7      	b.n	402f96 <_svfprintf_r+0xd1a>
  4031e6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4031e8:	6813      	ldr	r3, [r2, #0]
  4031ea:	3204      	adds	r2, #4
  4031ec:	920f      	str	r2, [sp, #60]	; 0x3c
  4031ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4031f0:	601a      	str	r2, [r3, #0]
  4031f2:	f7ff b86a 	b.w	4022ca <_svfprintf_r+0x4e>
  4031f6:	aa25      	add	r2, sp, #148	; 0x94
  4031f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4031fa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4031fc:	f002 fcae 	bl	405b5c <__ssprint_r>
  403200:	2800      	cmp	r0, #0
  403202:	f47f a90d 	bne.w	402420 <_svfprintf_r+0x1a4>
  403206:	46c8      	mov	r8, r9
  403208:	e48d      	b.n	402b26 <_svfprintf_r+0x8aa>
  40320a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40320c:	4a27      	ldr	r2, [pc, #156]	; (4032ac <_svfprintf_r+0x1030>)
  40320e:	f8c8 2000 	str.w	r2, [r8]
  403212:	3301      	adds	r3, #1
  403214:	3401      	adds	r4, #1
  403216:	2201      	movs	r2, #1
  403218:	2b07      	cmp	r3, #7
  40321a:	9427      	str	r4, [sp, #156]	; 0x9c
  40321c:	9326      	str	r3, [sp, #152]	; 0x98
  40321e:	f8c8 2004 	str.w	r2, [r8, #4]
  403222:	dc72      	bgt.n	40330a <_svfprintf_r+0x108e>
  403224:	f108 0808 	add.w	r8, r8, #8
  403228:	b929      	cbnz	r1, 403236 <_svfprintf_r+0xfba>
  40322a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40322c:	b91b      	cbnz	r3, 403236 <_svfprintf_r+0xfba>
  40322e:	9b07      	ldr	r3, [sp, #28]
  403230:	07d8      	lsls	r0, r3, #31
  403232:	f57f aa03 	bpl.w	40263c <_svfprintf_r+0x3c0>
  403236:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403238:	9819      	ldr	r0, [sp, #100]	; 0x64
  40323a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  40323c:	f8c8 2000 	str.w	r2, [r8]
  403240:	3301      	adds	r3, #1
  403242:	4602      	mov	r2, r0
  403244:	4422      	add	r2, r4
  403246:	2b07      	cmp	r3, #7
  403248:	9227      	str	r2, [sp, #156]	; 0x9c
  40324a:	f8c8 0004 	str.w	r0, [r8, #4]
  40324e:	9326      	str	r3, [sp, #152]	; 0x98
  403250:	f300 818d 	bgt.w	40356e <_svfprintf_r+0x12f2>
  403254:	f108 0808 	add.w	r8, r8, #8
  403258:	2900      	cmp	r1, #0
  40325a:	f2c0 8165 	blt.w	403528 <_svfprintf_r+0x12ac>
  40325e:	9913      	ldr	r1, [sp, #76]	; 0x4c
  403260:	f8c8 6000 	str.w	r6, [r8]
  403264:	3301      	adds	r3, #1
  403266:	188c      	adds	r4, r1, r2
  403268:	2b07      	cmp	r3, #7
  40326a:	9427      	str	r4, [sp, #156]	; 0x9c
  40326c:	9326      	str	r3, [sp, #152]	; 0x98
  40326e:	f8c8 1004 	str.w	r1, [r8, #4]
  403272:	f77f a9e1 	ble.w	402638 <_svfprintf_r+0x3bc>
  403276:	e52c      	b.n	402cd2 <_svfprintf_r+0xa56>
  403278:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  40327a:	9909      	ldr	r1, [sp, #36]	; 0x24
  40327c:	6813      	ldr	r3, [r2, #0]
  40327e:	17cd      	asrs	r5, r1, #31
  403280:	4608      	mov	r0, r1
  403282:	3204      	adds	r2, #4
  403284:	4629      	mov	r1, r5
  403286:	920f      	str	r2, [sp, #60]	; 0x3c
  403288:	e9c3 0100 	strd	r0, r1, [r3]
  40328c:	f7ff b81d 	b.w	4022ca <_svfprintf_r+0x4e>
  403290:	aa25      	add	r2, sp, #148	; 0x94
  403292:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403294:	980c      	ldr	r0, [sp, #48]	; 0x30
  403296:	f002 fc61 	bl	405b5c <__ssprint_r>
  40329a:	2800      	cmp	r0, #0
  40329c:	f47f a8c0 	bne.w	402420 <_svfprintf_r+0x1a4>
  4032a0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4032a2:	46c8      	mov	r8, r9
  4032a4:	e458      	b.n	402b58 <_svfprintf_r+0x8dc>
  4032a6:	bf00      	nop
  4032a8:	00407260 	.word	0x00407260
  4032ac:	0040724c 	.word	0x0040724c
  4032b0:	2140      	movs	r1, #64	; 0x40
  4032b2:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032b4:	f001 fcd4 	bl	404c60 <_malloc_r>
  4032b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4032ba:	6010      	str	r0, [r2, #0]
  4032bc:	6110      	str	r0, [r2, #16]
  4032be:	2800      	cmp	r0, #0
  4032c0:	f000 81f2 	beq.w	4036a8 <_svfprintf_r+0x142c>
  4032c4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4032c6:	2340      	movs	r3, #64	; 0x40
  4032c8:	6153      	str	r3, [r2, #20]
  4032ca:	f7fe bfee 	b.w	4022aa <_svfprintf_r+0x2e>
  4032ce:	a823      	add	r0, sp, #140	; 0x8c
  4032d0:	a920      	add	r1, sp, #128	; 0x80
  4032d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4032d4:	9004      	str	r0, [sp, #16]
  4032d6:	9103      	str	r1, [sp, #12]
  4032d8:	a81f      	add	r0, sp, #124	; 0x7c
  4032da:	2103      	movs	r1, #3
  4032dc:	9002      	str	r0, [sp, #8]
  4032de:	9a08      	ldr	r2, [sp, #32]
  4032e0:	9401      	str	r4, [sp, #4]
  4032e2:	463b      	mov	r3, r7
  4032e4:	9100      	str	r1, [sp, #0]
  4032e6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4032e8:	f000 fa9a 	bl	403820 <_dtoa_r>
  4032ec:	4625      	mov	r5, r4
  4032ee:	4606      	mov	r6, r0
  4032f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4032f2:	2b46      	cmp	r3, #70	; 0x46
  4032f4:	eb06 0405 	add.w	r4, r6, r5
  4032f8:	f47f af29 	bne.w	40314e <_svfprintf_r+0xed2>
  4032fc:	7833      	ldrb	r3, [r6, #0]
  4032fe:	2b30      	cmp	r3, #48	; 0x30
  403300:	f000 8178 	beq.w	4035f4 <_svfprintf_r+0x1378>
  403304:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  403306:	442c      	add	r4, r5
  403308:	e721      	b.n	40314e <_svfprintf_r+0xed2>
  40330a:	aa25      	add	r2, sp, #148	; 0x94
  40330c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40330e:	980c      	ldr	r0, [sp, #48]	; 0x30
  403310:	f002 fc24 	bl	405b5c <__ssprint_r>
  403314:	2800      	cmp	r0, #0
  403316:	f47f a883 	bne.w	402420 <_svfprintf_r+0x1a4>
  40331a:	991f      	ldr	r1, [sp, #124]	; 0x7c
  40331c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40331e:	46c8      	mov	r8, r9
  403320:	e782      	b.n	403228 <_svfprintf_r+0xfac>
  403322:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403324:	2b00      	cmp	r3, #0
  403326:	bf08      	it	eq
  403328:	2301      	moveq	r3, #1
  40332a:	930a      	str	r3, [sp, #40]	; 0x28
  40332c:	e6db      	b.n	4030e6 <_svfprintf_r+0xe6a>
  40332e:	4630      	mov	r0, r6
  403330:	940a      	str	r4, [sp, #40]	; 0x28
  403332:	f002 fba5 	bl	405a80 <strlen>
  403336:	950f      	str	r5, [sp, #60]	; 0x3c
  403338:	900e      	str	r0, [sp, #56]	; 0x38
  40333a:	f8cd b01c 	str.w	fp, [sp, #28]
  40333e:	4603      	mov	r3, r0
  403340:	f7ff b9f9 	b.w	402736 <_svfprintf_r+0x4ba>
  403344:	272d      	movs	r7, #45	; 0x2d
  403346:	2300      	movs	r3, #0
  403348:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  40334c:	930a      	str	r3, [sp, #40]	; 0x28
  40334e:	f7ff b8ae 	b.w	4024ae <_svfprintf_r+0x232>
  403352:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403354:	9312      	str	r3, [sp, #72]	; 0x48
  403356:	461a      	mov	r2, r3
  403358:	3303      	adds	r3, #3
  40335a:	db04      	blt.n	403366 <_svfprintf_r+0x10ea>
  40335c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40335e:	4619      	mov	r1, r3
  403360:	4291      	cmp	r1, r2
  403362:	f6bf af17 	bge.w	403194 <_svfprintf_r+0xf18>
  403366:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403368:	3b02      	subs	r3, #2
  40336a:	9311      	str	r3, [sp, #68]	; 0x44
  40336c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  403370:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  403374:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403376:	3b01      	subs	r3, #1
  403378:	2b00      	cmp	r3, #0
  40337a:	931f      	str	r3, [sp, #124]	; 0x7c
  40337c:	bfbd      	ittte	lt
  40337e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  403380:	f1c3 0301 	rsblt	r3, r3, #1
  403384:	222d      	movlt	r2, #45	; 0x2d
  403386:	222b      	movge	r2, #43	; 0x2b
  403388:	2b09      	cmp	r3, #9
  40338a:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  40338e:	f340 8116 	ble.w	4035be <_svfprintf_r+0x1342>
  403392:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  403396:	4620      	mov	r0, r4
  403398:	4dab      	ldr	r5, [pc, #684]	; (403648 <_svfprintf_r+0x13cc>)
  40339a:	e000      	b.n	40339e <_svfprintf_r+0x1122>
  40339c:	4610      	mov	r0, r2
  40339e:	fb85 1203 	smull	r1, r2, r5, r3
  4033a2:	17d9      	asrs	r1, r3, #31
  4033a4:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  4033a8:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  4033ac:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  4033b0:	3230      	adds	r2, #48	; 0x30
  4033b2:	2909      	cmp	r1, #9
  4033b4:	f800 2c01 	strb.w	r2, [r0, #-1]
  4033b8:	460b      	mov	r3, r1
  4033ba:	f100 32ff 	add.w	r2, r0, #4294967295
  4033be:	dced      	bgt.n	40339c <_svfprintf_r+0x1120>
  4033c0:	3330      	adds	r3, #48	; 0x30
  4033c2:	3802      	subs	r0, #2
  4033c4:	b2d9      	uxtb	r1, r3
  4033c6:	4284      	cmp	r4, r0
  4033c8:	f802 1c01 	strb.w	r1, [r2, #-1]
  4033cc:	f240 8165 	bls.w	40369a <_svfprintf_r+0x141e>
  4033d0:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  4033d4:	4613      	mov	r3, r2
  4033d6:	e001      	b.n	4033dc <_svfprintf_r+0x1160>
  4033d8:	f813 1b01 	ldrb.w	r1, [r3], #1
  4033dc:	f800 1b01 	strb.w	r1, [r0], #1
  4033e0:	42a3      	cmp	r3, r4
  4033e2:	d1f9      	bne.n	4033d8 <_svfprintf_r+0x115c>
  4033e4:	3301      	adds	r3, #1
  4033e6:	1a9b      	subs	r3, r3, r2
  4033e8:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  4033ec:	4413      	add	r3, r2
  4033ee:	aa21      	add	r2, sp, #132	; 0x84
  4033f0:	1a9b      	subs	r3, r3, r2
  4033f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4033f4:	931b      	str	r3, [sp, #108]	; 0x6c
  4033f6:	2a01      	cmp	r2, #1
  4033f8:	4413      	add	r3, r2
  4033fa:	930e      	str	r3, [sp, #56]	; 0x38
  4033fc:	f340 8119 	ble.w	403632 <_svfprintf_r+0x13b6>
  403400:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403402:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403404:	4413      	add	r3, r2
  403406:	930e      	str	r3, [sp, #56]	; 0x38
  403408:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  40340c:	9308      	str	r3, [sp, #32]
  40340e:	2300      	movs	r3, #0
  403410:	9312      	str	r3, [sp, #72]	; 0x48
  403412:	e6cf      	b.n	4031b4 <_svfprintf_r+0xf38>
  403414:	aa25      	add	r2, sp, #148	; 0x94
  403416:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403418:	980c      	ldr	r0, [sp, #48]	; 0x30
  40341a:	f002 fb9f 	bl	405b5c <__ssprint_r>
  40341e:	2800      	cmp	r0, #0
  403420:	f47e affe 	bne.w	402420 <_svfprintf_r+0x1a4>
  403424:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403426:	46c8      	mov	r8, r9
  403428:	e4d7      	b.n	402dda <_svfprintf_r+0xb5e>
  40342a:	4623      	mov	r3, r4
  40342c:	e6a2      	b.n	403174 <_svfprintf_r+0xef8>
  40342e:	aa25      	add	r2, sp, #148	; 0x94
  403430:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403432:	980c      	ldr	r0, [sp, #48]	; 0x30
  403434:	f002 fb92 	bl	405b5c <__ssprint_r>
  403438:	2800      	cmp	r0, #0
  40343a:	f47e aff1 	bne.w	402420 <_svfprintf_r+0x1a4>
  40343e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403440:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  403442:	46c8      	mov	r8, r9
  403444:	e5ae      	b.n	402fa4 <_svfprintf_r+0xd28>
  403446:	aa25      	add	r2, sp, #148	; 0x94
  403448:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40344a:	980c      	ldr	r0, [sp, #48]	; 0x30
  40344c:	f002 fb86 	bl	405b5c <__ssprint_r>
  403450:	2800      	cmp	r0, #0
  403452:	f47e afe5 	bne.w	402420 <_svfprintf_r+0x1a4>
  403456:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  403458:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40345a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40345c:	1a9a      	subs	r2, r3, r2
  40345e:	46c8      	mov	r8, r9
  403460:	e5b8      	b.n	402fd4 <_svfprintf_r+0xd58>
  403462:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403464:	9612      	str	r6, [sp, #72]	; 0x48
  403466:	2b06      	cmp	r3, #6
  403468:	bf28      	it	cs
  40346a:	2306      	movcs	r3, #6
  40346c:	960a      	str	r6, [sp, #40]	; 0x28
  40346e:	4637      	mov	r7, r6
  403470:	9308      	str	r3, [sp, #32]
  403472:	950f      	str	r5, [sp, #60]	; 0x3c
  403474:	f8cd b01c 	str.w	fp, [sp, #28]
  403478:	930e      	str	r3, [sp, #56]	; 0x38
  40347a:	4e74      	ldr	r6, [pc, #464]	; (40364c <_svfprintf_r+0x13d0>)
  40347c:	f7ff b816 	b.w	4024ac <_svfprintf_r+0x230>
  403480:	a823      	add	r0, sp, #140	; 0x8c
  403482:	a920      	add	r1, sp, #128	; 0x80
  403484:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403486:	9004      	str	r0, [sp, #16]
  403488:	9103      	str	r1, [sp, #12]
  40348a:	a81f      	add	r0, sp, #124	; 0x7c
  40348c:	2103      	movs	r1, #3
  40348e:	9002      	str	r0, [sp, #8]
  403490:	9a08      	ldr	r2, [sp, #32]
  403492:	9501      	str	r5, [sp, #4]
  403494:	463b      	mov	r3, r7
  403496:	9100      	str	r1, [sp, #0]
  403498:	980c      	ldr	r0, [sp, #48]	; 0x30
  40349a:	f000 f9c1 	bl	403820 <_dtoa_r>
  40349e:	4606      	mov	r6, r0
  4034a0:	1944      	adds	r4, r0, r5
  4034a2:	e72b      	b.n	4032fc <_svfprintf_r+0x1080>
  4034a4:	2306      	movs	r3, #6
  4034a6:	930a      	str	r3, [sp, #40]	; 0x28
  4034a8:	e61d      	b.n	4030e6 <_svfprintf_r+0xe6a>
  4034aa:	272d      	movs	r7, #45	; 0x2d
  4034ac:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  4034b0:	f7ff bacd 	b.w	402a4e <_svfprintf_r+0x7d2>
  4034b4:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4034b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4034b8:	4413      	add	r3, r2
  4034ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4034bc:	930e      	str	r3, [sp, #56]	; 0x38
  4034be:	2a00      	cmp	r2, #0
  4034c0:	f340 80b0 	ble.w	403624 <_svfprintf_r+0x13a8>
  4034c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4034c8:	9308      	str	r3, [sp, #32]
  4034ca:	2367      	movs	r3, #103	; 0x67
  4034cc:	9311      	str	r3, [sp, #68]	; 0x44
  4034ce:	e671      	b.n	4031b4 <_svfprintf_r+0xf38>
  4034d0:	2b00      	cmp	r3, #0
  4034d2:	f340 80c3 	ble.w	40365c <_svfprintf_r+0x13e0>
  4034d6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4034d8:	2a00      	cmp	r2, #0
  4034da:	f040 8099 	bne.w	403610 <_svfprintf_r+0x1394>
  4034de:	f01b 0f01 	tst.w	fp, #1
  4034e2:	f040 8095 	bne.w	403610 <_svfprintf_r+0x1394>
  4034e6:	9308      	str	r3, [sp, #32]
  4034e8:	930e      	str	r3, [sp, #56]	; 0x38
  4034ea:	e663      	b.n	4031b4 <_svfprintf_r+0xf38>
  4034ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4034ee:	9308      	str	r3, [sp, #32]
  4034f0:	930e      	str	r3, [sp, #56]	; 0x38
  4034f2:	900a      	str	r0, [sp, #40]	; 0x28
  4034f4:	950f      	str	r5, [sp, #60]	; 0x3c
  4034f6:	f8cd b01c 	str.w	fp, [sp, #28]
  4034fa:	9012      	str	r0, [sp, #72]	; 0x48
  4034fc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  403500:	f7fe bfd4 	b.w	4024ac <_svfprintf_r+0x230>
  403504:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403506:	2b47      	cmp	r3, #71	; 0x47
  403508:	f47f ae20 	bne.w	40314c <_svfprintf_r+0xed0>
  40350c:	f01b 0f01 	tst.w	fp, #1
  403510:	f47f aeee 	bne.w	4032f0 <_svfprintf_r+0x1074>
  403514:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  403516:	1b9b      	subs	r3, r3, r6
  403518:	9313      	str	r3, [sp, #76]	; 0x4c
  40351a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40351c:	2b47      	cmp	r3, #71	; 0x47
  40351e:	f43f af18 	beq.w	403352 <_svfprintf_r+0x10d6>
  403522:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403524:	9312      	str	r3, [sp, #72]	; 0x48
  403526:	e721      	b.n	40336c <_svfprintf_r+0x10f0>
  403528:	424f      	negs	r7, r1
  40352a:	3110      	adds	r1, #16
  40352c:	4d48      	ldr	r5, [pc, #288]	; (403650 <_svfprintf_r+0x13d4>)
  40352e:	da2f      	bge.n	403590 <_svfprintf_r+0x1314>
  403530:	2410      	movs	r4, #16
  403532:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  403536:	e004      	b.n	403542 <_svfprintf_r+0x12c6>
  403538:	f108 0808 	add.w	r8, r8, #8
  40353c:	3f10      	subs	r7, #16
  40353e:	2f10      	cmp	r7, #16
  403540:	dd26      	ble.n	403590 <_svfprintf_r+0x1314>
  403542:	3301      	adds	r3, #1
  403544:	3210      	adds	r2, #16
  403546:	2b07      	cmp	r3, #7
  403548:	9227      	str	r2, [sp, #156]	; 0x9c
  40354a:	9326      	str	r3, [sp, #152]	; 0x98
  40354c:	f8c8 5000 	str.w	r5, [r8]
  403550:	f8c8 4004 	str.w	r4, [r8, #4]
  403554:	ddf0      	ble.n	403538 <_svfprintf_r+0x12bc>
  403556:	aa25      	add	r2, sp, #148	; 0x94
  403558:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40355a:	4658      	mov	r0, fp
  40355c:	f002 fafe 	bl	405b5c <__ssprint_r>
  403560:	2800      	cmp	r0, #0
  403562:	f47e af5d 	bne.w	402420 <_svfprintf_r+0x1a4>
  403566:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403568:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40356a:	46c8      	mov	r8, r9
  40356c:	e7e6      	b.n	40353c <_svfprintf_r+0x12c0>
  40356e:	aa25      	add	r2, sp, #148	; 0x94
  403570:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403572:	980c      	ldr	r0, [sp, #48]	; 0x30
  403574:	f002 faf2 	bl	405b5c <__ssprint_r>
  403578:	2800      	cmp	r0, #0
  40357a:	f47e af51 	bne.w	402420 <_svfprintf_r+0x1a4>
  40357e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  403580:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  403582:	9b26      	ldr	r3, [sp, #152]	; 0x98
  403584:	46c8      	mov	r8, r9
  403586:	e667      	b.n	403258 <_svfprintf_r+0xfdc>
  403588:	2000      	movs	r0, #0
  40358a:	900a      	str	r0, [sp, #40]	; 0x28
  40358c:	f7fe bed0 	b.w	402330 <_svfprintf_r+0xb4>
  403590:	3301      	adds	r3, #1
  403592:	443a      	add	r2, r7
  403594:	2b07      	cmp	r3, #7
  403596:	e888 00a0 	stmia.w	r8, {r5, r7}
  40359a:	9227      	str	r2, [sp, #156]	; 0x9c
  40359c:	9326      	str	r3, [sp, #152]	; 0x98
  40359e:	f108 0808 	add.w	r8, r8, #8
  4035a2:	f77f ae5c 	ble.w	40325e <_svfprintf_r+0xfe2>
  4035a6:	aa25      	add	r2, sp, #148	; 0x94
  4035a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4035aa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4035ac:	f002 fad6 	bl	405b5c <__ssprint_r>
  4035b0:	2800      	cmp	r0, #0
  4035b2:	f47e af35 	bne.w	402420 <_svfprintf_r+0x1a4>
  4035b6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4035b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4035ba:	46c8      	mov	r8, r9
  4035bc:	e64f      	b.n	40325e <_svfprintf_r+0xfe2>
  4035be:	3330      	adds	r3, #48	; 0x30
  4035c0:	2230      	movs	r2, #48	; 0x30
  4035c2:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  4035c6:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  4035ca:	ab22      	add	r3, sp, #136	; 0x88
  4035cc:	e70f      	b.n	4033ee <_svfprintf_r+0x1172>
  4035ce:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4035d0:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4035d2:	4413      	add	r3, r2
  4035d4:	930e      	str	r3, [sp, #56]	; 0x38
  4035d6:	e775      	b.n	4034c4 <_svfprintf_r+0x1248>
  4035d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4035da:	e5cb      	b.n	403174 <_svfprintf_r+0xef8>
  4035dc:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4035de:	4e1d      	ldr	r6, [pc, #116]	; (403654 <_svfprintf_r+0x13d8>)
  4035e0:	2b00      	cmp	r3, #0
  4035e2:	bfb6      	itet	lt
  4035e4:	272d      	movlt	r7, #45	; 0x2d
  4035e6:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  4035ea:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  4035ee:	4b1a      	ldr	r3, [pc, #104]	; (403658 <_svfprintf_r+0x13dc>)
  4035f0:	f7ff ba2f 	b.w	402a52 <_svfprintf_r+0x7d6>
  4035f4:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4035f6:	9808      	ldr	r0, [sp, #32]
  4035f8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4035fa:	4639      	mov	r1, r7
  4035fc:	f002 ff0c 	bl	406418 <__aeabi_dcmpeq>
  403600:	2800      	cmp	r0, #0
  403602:	f47f ae7f 	bne.w	403304 <_svfprintf_r+0x1088>
  403606:	f1c5 0501 	rsb	r5, r5, #1
  40360a:	951f      	str	r5, [sp, #124]	; 0x7c
  40360c:	442c      	add	r4, r5
  40360e:	e59e      	b.n	40314e <_svfprintf_r+0xed2>
  403610:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403612:	9a19      	ldr	r2, [sp, #100]	; 0x64
  403614:	4413      	add	r3, r2
  403616:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403618:	441a      	add	r2, r3
  40361a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  40361e:	920e      	str	r2, [sp, #56]	; 0x38
  403620:	9308      	str	r3, [sp, #32]
  403622:	e5c7      	b.n	4031b4 <_svfprintf_r+0xf38>
  403624:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403626:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403628:	f1c3 0301 	rsb	r3, r3, #1
  40362c:	441a      	add	r2, r3
  40362e:	4613      	mov	r3, r2
  403630:	e7d0      	b.n	4035d4 <_svfprintf_r+0x1358>
  403632:	f01b 0301 	ands.w	r3, fp, #1
  403636:	9312      	str	r3, [sp, #72]	; 0x48
  403638:	f47f aee2 	bne.w	403400 <_svfprintf_r+0x1184>
  40363c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40363e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  403642:	9308      	str	r3, [sp, #32]
  403644:	e5b6      	b.n	4031b4 <_svfprintf_r+0xf38>
  403646:	bf00      	nop
  403648:	66666667 	.word	0x66666667
  40364c:	00407244 	.word	0x00407244
  403650:	00407260 	.word	0x00407260
  403654:	00407218 	.word	0x00407218
  403658:	00407214 	.word	0x00407214
  40365c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40365e:	b913      	cbnz	r3, 403666 <_svfprintf_r+0x13ea>
  403660:	f01b 0f01 	tst.w	fp, #1
  403664:	d002      	beq.n	40366c <_svfprintf_r+0x13f0>
  403666:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403668:	3301      	adds	r3, #1
  40366a:	e7d4      	b.n	403616 <_svfprintf_r+0x139a>
  40366c:	2301      	movs	r3, #1
  40366e:	e73a      	b.n	4034e6 <_svfprintf_r+0x126a>
  403670:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  403672:	f89a 3001 	ldrb.w	r3, [sl, #1]
  403676:	6828      	ldr	r0, [r5, #0]
  403678:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  40367c:	900a      	str	r0, [sp, #40]	; 0x28
  40367e:	4628      	mov	r0, r5
  403680:	3004      	adds	r0, #4
  403682:	46a2      	mov	sl, r4
  403684:	900f      	str	r0, [sp, #60]	; 0x3c
  403686:	f7fe be51 	b.w	40232c <_svfprintf_r+0xb0>
  40368a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40368e:	f7ff b867 	b.w	402760 <_svfprintf_r+0x4e4>
  403692:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403696:	f7ff ba15 	b.w	402ac4 <_svfprintf_r+0x848>
  40369a:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  40369e:	e6a6      	b.n	4033ee <_svfprintf_r+0x1172>
  4036a0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4036a4:	f7ff b8eb 	b.w	40287e <_svfprintf_r+0x602>
  4036a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4036aa:	230c      	movs	r3, #12
  4036ac:	6013      	str	r3, [r2, #0]
  4036ae:	f04f 33ff 	mov.w	r3, #4294967295
  4036b2:	9309      	str	r3, [sp, #36]	; 0x24
  4036b4:	f7fe bebd 	b.w	402432 <_svfprintf_r+0x1b6>
  4036b8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4036bc:	f7ff b99a 	b.w	4029f4 <_svfprintf_r+0x778>
  4036c0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4036c4:	f7ff b976 	b.w	4029b4 <_svfprintf_r+0x738>
  4036c8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4036cc:	f7ff b959 	b.w	402982 <_svfprintf_r+0x706>
  4036d0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  4036d4:	f7ff b912 	b.w	4028fc <_svfprintf_r+0x680>

004036d8 <register_fini>:
  4036d8:	4b02      	ldr	r3, [pc, #8]	; (4036e4 <register_fini+0xc>)
  4036da:	b113      	cbz	r3, 4036e2 <register_fini+0xa>
  4036dc:	4802      	ldr	r0, [pc, #8]	; (4036e8 <register_fini+0x10>)
  4036de:	f000 b805 	b.w	4036ec <atexit>
  4036e2:	4770      	bx	lr
  4036e4:	00000000 	.word	0x00000000
  4036e8:	004048d5 	.word	0x004048d5

004036ec <atexit>:
  4036ec:	2300      	movs	r3, #0
  4036ee:	4601      	mov	r1, r0
  4036f0:	461a      	mov	r2, r3
  4036f2:	4618      	mov	r0, r3
  4036f4:	f002 bac6 	b.w	405c84 <__register_exitproc>

004036f8 <quorem>:
  4036f8:	6902      	ldr	r2, [r0, #16]
  4036fa:	690b      	ldr	r3, [r1, #16]
  4036fc:	4293      	cmp	r3, r2
  4036fe:	f300 808d 	bgt.w	40381c <quorem+0x124>
  403702:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403706:	f103 38ff 	add.w	r8, r3, #4294967295
  40370a:	f101 0714 	add.w	r7, r1, #20
  40370e:	f100 0b14 	add.w	fp, r0, #20
  403712:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  403716:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  40371a:	ea4f 0488 	mov.w	r4, r8, lsl #2
  40371e:	b083      	sub	sp, #12
  403720:	3201      	adds	r2, #1
  403722:	fbb3 f9f2 	udiv	r9, r3, r2
  403726:	eb0b 0304 	add.w	r3, fp, r4
  40372a:	9400      	str	r4, [sp, #0]
  40372c:	eb07 0a04 	add.w	sl, r7, r4
  403730:	9301      	str	r3, [sp, #4]
  403732:	f1b9 0f00 	cmp.w	r9, #0
  403736:	d039      	beq.n	4037ac <quorem+0xb4>
  403738:	2500      	movs	r5, #0
  40373a:	462e      	mov	r6, r5
  40373c:	46bc      	mov	ip, r7
  40373e:	46de      	mov	lr, fp
  403740:	f85c 4b04 	ldr.w	r4, [ip], #4
  403744:	f8de 3000 	ldr.w	r3, [lr]
  403748:	b2a2      	uxth	r2, r4
  40374a:	fb09 5502 	mla	r5, r9, r2, r5
  40374e:	0c22      	lsrs	r2, r4, #16
  403750:	0c2c      	lsrs	r4, r5, #16
  403752:	fb09 4202 	mla	r2, r9, r2, r4
  403756:	b2ad      	uxth	r5, r5
  403758:	1b75      	subs	r5, r6, r5
  40375a:	b296      	uxth	r6, r2
  40375c:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403760:	fa15 f383 	uxtah	r3, r5, r3
  403764:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403768:	b29b      	uxth	r3, r3
  40376a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  40376e:	45e2      	cmp	sl, ip
  403770:	ea4f 4512 	mov.w	r5, r2, lsr #16
  403774:	f84e 3b04 	str.w	r3, [lr], #4
  403778:	ea4f 4626 	mov.w	r6, r6, asr #16
  40377c:	d2e0      	bcs.n	403740 <quorem+0x48>
  40377e:	9b00      	ldr	r3, [sp, #0]
  403780:	f85b 3003 	ldr.w	r3, [fp, r3]
  403784:	b993      	cbnz	r3, 4037ac <quorem+0xb4>
  403786:	9c01      	ldr	r4, [sp, #4]
  403788:	1f23      	subs	r3, r4, #4
  40378a:	459b      	cmp	fp, r3
  40378c:	d20c      	bcs.n	4037a8 <quorem+0xb0>
  40378e:	f854 3c04 	ldr.w	r3, [r4, #-4]
  403792:	b94b      	cbnz	r3, 4037a8 <quorem+0xb0>
  403794:	f1a4 0308 	sub.w	r3, r4, #8
  403798:	e002      	b.n	4037a0 <quorem+0xa8>
  40379a:	681a      	ldr	r2, [r3, #0]
  40379c:	3b04      	subs	r3, #4
  40379e:	b91a      	cbnz	r2, 4037a8 <quorem+0xb0>
  4037a0:	459b      	cmp	fp, r3
  4037a2:	f108 38ff 	add.w	r8, r8, #4294967295
  4037a6:	d3f8      	bcc.n	40379a <quorem+0xa2>
  4037a8:	f8c0 8010 	str.w	r8, [r0, #16]
  4037ac:	4604      	mov	r4, r0
  4037ae:	f001 fffb 	bl	4057a8 <__mcmp>
  4037b2:	2800      	cmp	r0, #0
  4037b4:	db2e      	blt.n	403814 <quorem+0x11c>
  4037b6:	f109 0901 	add.w	r9, r9, #1
  4037ba:	465d      	mov	r5, fp
  4037bc:	2300      	movs	r3, #0
  4037be:	f857 1b04 	ldr.w	r1, [r7], #4
  4037c2:	6828      	ldr	r0, [r5, #0]
  4037c4:	b28a      	uxth	r2, r1
  4037c6:	1a9a      	subs	r2, r3, r2
  4037c8:	0c0b      	lsrs	r3, r1, #16
  4037ca:	fa12 f280 	uxtah	r2, r2, r0
  4037ce:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  4037d2:	eb03 4322 	add.w	r3, r3, r2, asr #16
  4037d6:	b292      	uxth	r2, r2
  4037d8:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  4037dc:	45ba      	cmp	sl, r7
  4037de:	f845 2b04 	str.w	r2, [r5], #4
  4037e2:	ea4f 4323 	mov.w	r3, r3, asr #16
  4037e6:	d2ea      	bcs.n	4037be <quorem+0xc6>
  4037e8:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  4037ec:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  4037f0:	b982      	cbnz	r2, 403814 <quorem+0x11c>
  4037f2:	1f1a      	subs	r2, r3, #4
  4037f4:	4593      	cmp	fp, r2
  4037f6:	d20b      	bcs.n	403810 <quorem+0x118>
  4037f8:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4037fc:	b942      	cbnz	r2, 403810 <quorem+0x118>
  4037fe:	3b08      	subs	r3, #8
  403800:	e002      	b.n	403808 <quorem+0x110>
  403802:	681a      	ldr	r2, [r3, #0]
  403804:	3b04      	subs	r3, #4
  403806:	b91a      	cbnz	r2, 403810 <quorem+0x118>
  403808:	459b      	cmp	fp, r3
  40380a:	f108 38ff 	add.w	r8, r8, #4294967295
  40380e:	d3f8      	bcc.n	403802 <quorem+0x10a>
  403810:	f8c4 8010 	str.w	r8, [r4, #16]
  403814:	4648      	mov	r0, r9
  403816:	b003      	add	sp, #12
  403818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40381c:	2000      	movs	r0, #0
  40381e:	4770      	bx	lr

00403820 <_dtoa_r>:
  403820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403824:	6c01      	ldr	r1, [r0, #64]	; 0x40
  403826:	b09b      	sub	sp, #108	; 0x6c
  403828:	4604      	mov	r4, r0
  40382a:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  40382c:	4692      	mov	sl, r2
  40382e:	469b      	mov	fp, r3
  403830:	b141      	cbz	r1, 403844 <_dtoa_r+0x24>
  403832:	6c42      	ldr	r2, [r0, #68]	; 0x44
  403834:	604a      	str	r2, [r1, #4]
  403836:	2301      	movs	r3, #1
  403838:	4093      	lsls	r3, r2
  40383a:	608b      	str	r3, [r1, #8]
  40383c:	f001 fddc 	bl	4053f8 <_Bfree>
  403840:	2300      	movs	r3, #0
  403842:	6423      	str	r3, [r4, #64]	; 0x40
  403844:	f1bb 0f00 	cmp.w	fp, #0
  403848:	465d      	mov	r5, fp
  40384a:	db35      	blt.n	4038b8 <_dtoa_r+0x98>
  40384c:	2300      	movs	r3, #0
  40384e:	6033      	str	r3, [r6, #0]
  403850:	4b9d      	ldr	r3, [pc, #628]	; (403ac8 <_dtoa_r+0x2a8>)
  403852:	43ab      	bics	r3, r5
  403854:	d015      	beq.n	403882 <_dtoa_r+0x62>
  403856:	4650      	mov	r0, sl
  403858:	4659      	mov	r1, fp
  40385a:	2200      	movs	r2, #0
  40385c:	2300      	movs	r3, #0
  40385e:	f002 fddb 	bl	406418 <__aeabi_dcmpeq>
  403862:	4680      	mov	r8, r0
  403864:	2800      	cmp	r0, #0
  403866:	d02d      	beq.n	4038c4 <_dtoa_r+0xa4>
  403868:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40386a:	2301      	movs	r3, #1
  40386c:	6013      	str	r3, [r2, #0]
  40386e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403870:	2b00      	cmp	r3, #0
  403872:	f000 80bd 	beq.w	4039f0 <_dtoa_r+0x1d0>
  403876:	4895      	ldr	r0, [pc, #596]	; (403acc <_dtoa_r+0x2ac>)
  403878:	6018      	str	r0, [r3, #0]
  40387a:	3801      	subs	r0, #1
  40387c:	b01b      	add	sp, #108	; 0x6c
  40387e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403882:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403884:	f242 730f 	movw	r3, #9999	; 0x270f
  403888:	6013      	str	r3, [r2, #0]
  40388a:	f1ba 0f00 	cmp.w	sl, #0
  40388e:	d10d      	bne.n	4038ac <_dtoa_r+0x8c>
  403890:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403894:	b955      	cbnz	r5, 4038ac <_dtoa_r+0x8c>
  403896:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403898:	488d      	ldr	r0, [pc, #564]	; (403ad0 <_dtoa_r+0x2b0>)
  40389a:	2b00      	cmp	r3, #0
  40389c:	d0ee      	beq.n	40387c <_dtoa_r+0x5c>
  40389e:	f100 0308 	add.w	r3, r0, #8
  4038a2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  4038a4:	6013      	str	r3, [r2, #0]
  4038a6:	b01b      	add	sp, #108	; 0x6c
  4038a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4038ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4038ae:	4889      	ldr	r0, [pc, #548]	; (403ad4 <_dtoa_r+0x2b4>)
  4038b0:	2b00      	cmp	r3, #0
  4038b2:	d0e3      	beq.n	40387c <_dtoa_r+0x5c>
  4038b4:	1cc3      	adds	r3, r0, #3
  4038b6:	e7f4      	b.n	4038a2 <_dtoa_r+0x82>
  4038b8:	2301      	movs	r3, #1
  4038ba:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  4038be:	6033      	str	r3, [r6, #0]
  4038c0:	46ab      	mov	fp, r5
  4038c2:	e7c5      	b.n	403850 <_dtoa_r+0x30>
  4038c4:	aa18      	add	r2, sp, #96	; 0x60
  4038c6:	ab19      	add	r3, sp, #100	; 0x64
  4038c8:	9201      	str	r2, [sp, #4]
  4038ca:	9300      	str	r3, [sp, #0]
  4038cc:	4652      	mov	r2, sl
  4038ce:	465b      	mov	r3, fp
  4038d0:	4620      	mov	r0, r4
  4038d2:	f002 f809 	bl	4058e8 <__d2b>
  4038d6:	0d2b      	lsrs	r3, r5, #20
  4038d8:	4681      	mov	r9, r0
  4038da:	d071      	beq.n	4039c0 <_dtoa_r+0x1a0>
  4038dc:	f3cb 0213 	ubfx	r2, fp, #0, #20
  4038e0:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  4038e4:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4038e6:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  4038ea:	4650      	mov	r0, sl
  4038ec:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  4038f0:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  4038f4:	2200      	movs	r2, #0
  4038f6:	4b78      	ldr	r3, [pc, #480]	; (403ad8 <_dtoa_r+0x2b8>)
  4038f8:	f7fd ff66 	bl	4017c8 <__aeabi_dsub>
  4038fc:	a36c      	add	r3, pc, #432	; (adr r3, 403ab0 <_dtoa_r+0x290>)
  4038fe:	e9d3 2300 	ldrd	r2, r3, [r3]
  403902:	f7fe f915 	bl	401b30 <__aeabi_dmul>
  403906:	a36c      	add	r3, pc, #432	; (adr r3, 403ab8 <_dtoa_r+0x298>)
  403908:	e9d3 2300 	ldrd	r2, r3, [r3]
  40390c:	f7fd ff5e 	bl	4017cc <__adddf3>
  403910:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403914:	4630      	mov	r0, r6
  403916:	f7fe f8a5 	bl	401a64 <__aeabi_i2d>
  40391a:	a369      	add	r3, pc, #420	; (adr r3, 403ac0 <_dtoa_r+0x2a0>)
  40391c:	e9d3 2300 	ldrd	r2, r3, [r3]
  403920:	f7fe f906 	bl	401b30 <__aeabi_dmul>
  403924:	4602      	mov	r2, r0
  403926:	460b      	mov	r3, r1
  403928:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40392c:	f7fd ff4e 	bl	4017cc <__adddf3>
  403930:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403934:	f7fe fb0e 	bl	401f54 <__aeabi_d2iz>
  403938:	2200      	movs	r2, #0
  40393a:	9002      	str	r0, [sp, #8]
  40393c:	2300      	movs	r3, #0
  40393e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403942:	f002 fd73 	bl	40642c <__aeabi_dcmplt>
  403946:	2800      	cmp	r0, #0
  403948:	f040 8173 	bne.w	403c32 <_dtoa_r+0x412>
  40394c:	9d02      	ldr	r5, [sp, #8]
  40394e:	2d16      	cmp	r5, #22
  403950:	f200 815d 	bhi.w	403c0e <_dtoa_r+0x3ee>
  403954:	4b61      	ldr	r3, [pc, #388]	; (403adc <_dtoa_r+0x2bc>)
  403956:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  40395a:	e9d3 0100 	ldrd	r0, r1, [r3]
  40395e:	4652      	mov	r2, sl
  403960:	465b      	mov	r3, fp
  403962:	f002 fd81 	bl	406468 <__aeabi_dcmpgt>
  403966:	2800      	cmp	r0, #0
  403968:	f000 81c5 	beq.w	403cf6 <_dtoa_r+0x4d6>
  40396c:	1e6b      	subs	r3, r5, #1
  40396e:	9302      	str	r3, [sp, #8]
  403970:	2300      	movs	r3, #0
  403972:	930e      	str	r3, [sp, #56]	; 0x38
  403974:	1bbf      	subs	r7, r7, r6
  403976:	1e7b      	subs	r3, r7, #1
  403978:	9306      	str	r3, [sp, #24]
  40397a:	f100 8154 	bmi.w	403c26 <_dtoa_r+0x406>
  40397e:	2300      	movs	r3, #0
  403980:	9308      	str	r3, [sp, #32]
  403982:	9b02      	ldr	r3, [sp, #8]
  403984:	2b00      	cmp	r3, #0
  403986:	f2c0 8145 	blt.w	403c14 <_dtoa_r+0x3f4>
  40398a:	9a06      	ldr	r2, [sp, #24]
  40398c:	930d      	str	r3, [sp, #52]	; 0x34
  40398e:	4611      	mov	r1, r2
  403990:	4419      	add	r1, r3
  403992:	2300      	movs	r3, #0
  403994:	9106      	str	r1, [sp, #24]
  403996:	930c      	str	r3, [sp, #48]	; 0x30
  403998:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40399a:	2b09      	cmp	r3, #9
  40399c:	d82a      	bhi.n	4039f4 <_dtoa_r+0x1d4>
  40399e:	2b05      	cmp	r3, #5
  4039a0:	f340 865b 	ble.w	40465a <_dtoa_r+0xe3a>
  4039a4:	3b04      	subs	r3, #4
  4039a6:	9324      	str	r3, [sp, #144]	; 0x90
  4039a8:	2500      	movs	r5, #0
  4039aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4039ac:	3b02      	subs	r3, #2
  4039ae:	2b03      	cmp	r3, #3
  4039b0:	f200 8642 	bhi.w	404638 <_dtoa_r+0xe18>
  4039b4:	e8df f013 	tbh	[pc, r3, lsl #1]
  4039b8:	02c903d4 	.word	0x02c903d4
  4039bc:	046103df 	.word	0x046103df
  4039c0:	9f18      	ldr	r7, [sp, #96]	; 0x60
  4039c2:	9e19      	ldr	r6, [sp, #100]	; 0x64
  4039c4:	443e      	add	r6, r7
  4039c6:	f206 4332 	addw	r3, r6, #1074	; 0x432
  4039ca:	2b20      	cmp	r3, #32
  4039cc:	f340 818e 	ble.w	403cec <_dtoa_r+0x4cc>
  4039d0:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  4039d4:	f206 4012 	addw	r0, r6, #1042	; 0x412
  4039d8:	409d      	lsls	r5, r3
  4039da:	fa2a f000 	lsr.w	r0, sl, r0
  4039de:	4328      	orrs	r0, r5
  4039e0:	f7fe f830 	bl	401a44 <__aeabi_ui2d>
  4039e4:	2301      	movs	r3, #1
  4039e6:	3e01      	subs	r6, #1
  4039e8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  4039ec:	9314      	str	r3, [sp, #80]	; 0x50
  4039ee:	e781      	b.n	4038f4 <_dtoa_r+0xd4>
  4039f0:	483b      	ldr	r0, [pc, #236]	; (403ae0 <_dtoa_r+0x2c0>)
  4039f2:	e743      	b.n	40387c <_dtoa_r+0x5c>
  4039f4:	2100      	movs	r1, #0
  4039f6:	6461      	str	r1, [r4, #68]	; 0x44
  4039f8:	4620      	mov	r0, r4
  4039fa:	9125      	str	r1, [sp, #148]	; 0x94
  4039fc:	f001 fcd6 	bl	4053ac <_Balloc>
  403a00:	f04f 33ff 	mov.w	r3, #4294967295
  403a04:	930a      	str	r3, [sp, #40]	; 0x28
  403a06:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403a08:	930f      	str	r3, [sp, #60]	; 0x3c
  403a0a:	2301      	movs	r3, #1
  403a0c:	9004      	str	r0, [sp, #16]
  403a0e:	6420      	str	r0, [r4, #64]	; 0x40
  403a10:	9224      	str	r2, [sp, #144]	; 0x90
  403a12:	930b      	str	r3, [sp, #44]	; 0x2c
  403a14:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403a16:	2b00      	cmp	r3, #0
  403a18:	f2c0 80d9 	blt.w	403bce <_dtoa_r+0x3ae>
  403a1c:	9a02      	ldr	r2, [sp, #8]
  403a1e:	2a0e      	cmp	r2, #14
  403a20:	f300 80d5 	bgt.w	403bce <_dtoa_r+0x3ae>
  403a24:	4b2d      	ldr	r3, [pc, #180]	; (403adc <_dtoa_r+0x2bc>)
  403a26:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403a2a:	e9d3 2300 	ldrd	r2, r3, [r3]
  403a2e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  403a32:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403a34:	2b00      	cmp	r3, #0
  403a36:	f2c0 83ba 	blt.w	4041ae <_dtoa_r+0x98e>
  403a3a:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  403a3e:	4650      	mov	r0, sl
  403a40:	462a      	mov	r2, r5
  403a42:	4633      	mov	r3, r6
  403a44:	4659      	mov	r1, fp
  403a46:	f7fe f99d 	bl	401d84 <__aeabi_ddiv>
  403a4a:	f7fe fa83 	bl	401f54 <__aeabi_d2iz>
  403a4e:	4680      	mov	r8, r0
  403a50:	f7fe f808 	bl	401a64 <__aeabi_i2d>
  403a54:	462a      	mov	r2, r5
  403a56:	4633      	mov	r3, r6
  403a58:	f7fe f86a 	bl	401b30 <__aeabi_dmul>
  403a5c:	460b      	mov	r3, r1
  403a5e:	4602      	mov	r2, r0
  403a60:	4659      	mov	r1, fp
  403a62:	4650      	mov	r0, sl
  403a64:	f7fd feb0 	bl	4017c8 <__aeabi_dsub>
  403a68:	9d04      	ldr	r5, [sp, #16]
  403a6a:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403a6e:	702b      	strb	r3, [r5, #0]
  403a70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a72:	2b01      	cmp	r3, #1
  403a74:	4606      	mov	r6, r0
  403a76:	460f      	mov	r7, r1
  403a78:	f105 0501 	add.w	r5, r5, #1
  403a7c:	d068      	beq.n	403b50 <_dtoa_r+0x330>
  403a7e:	2200      	movs	r2, #0
  403a80:	4b18      	ldr	r3, [pc, #96]	; (403ae4 <_dtoa_r+0x2c4>)
  403a82:	f7fe f855 	bl	401b30 <__aeabi_dmul>
  403a86:	2200      	movs	r2, #0
  403a88:	2300      	movs	r3, #0
  403a8a:	4606      	mov	r6, r0
  403a8c:	460f      	mov	r7, r1
  403a8e:	f002 fcc3 	bl	406418 <__aeabi_dcmpeq>
  403a92:	2800      	cmp	r0, #0
  403a94:	f040 8088 	bne.w	403ba8 <_dtoa_r+0x388>
  403a98:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403a9c:	f04f 0a00 	mov.w	sl, #0
  403aa0:	f8df b040 	ldr.w	fp, [pc, #64]	; 403ae4 <_dtoa_r+0x2c4>
  403aa4:	940c      	str	r4, [sp, #48]	; 0x30
  403aa6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403aaa:	e028      	b.n	403afe <_dtoa_r+0x2de>
  403aac:	f3af 8000 	nop.w
  403ab0:	636f4361 	.word	0x636f4361
  403ab4:	3fd287a7 	.word	0x3fd287a7
  403ab8:	8b60c8b3 	.word	0x8b60c8b3
  403abc:	3fc68a28 	.word	0x3fc68a28
  403ac0:	509f79fb 	.word	0x509f79fb
  403ac4:	3fd34413 	.word	0x3fd34413
  403ac8:	7ff00000 	.word	0x7ff00000
  403acc:	0040724d 	.word	0x0040724d
  403ad0:	00407270 	.word	0x00407270
  403ad4:	0040727c 	.word	0x0040727c
  403ad8:	3ff80000 	.word	0x3ff80000
  403adc:	004072a8 	.word	0x004072a8
  403ae0:	0040724c 	.word	0x0040724c
  403ae4:	40240000 	.word	0x40240000
  403ae8:	f7fe f822 	bl	401b30 <__aeabi_dmul>
  403aec:	2200      	movs	r2, #0
  403aee:	2300      	movs	r3, #0
  403af0:	4606      	mov	r6, r0
  403af2:	460f      	mov	r7, r1
  403af4:	f002 fc90 	bl	406418 <__aeabi_dcmpeq>
  403af8:	2800      	cmp	r0, #0
  403afa:	f040 83c1 	bne.w	404280 <_dtoa_r+0xa60>
  403afe:	4642      	mov	r2, r8
  403b00:	464b      	mov	r3, r9
  403b02:	4630      	mov	r0, r6
  403b04:	4639      	mov	r1, r7
  403b06:	f7fe f93d 	bl	401d84 <__aeabi_ddiv>
  403b0a:	f7fe fa23 	bl	401f54 <__aeabi_d2iz>
  403b0e:	4604      	mov	r4, r0
  403b10:	f7fd ffa8 	bl	401a64 <__aeabi_i2d>
  403b14:	4642      	mov	r2, r8
  403b16:	464b      	mov	r3, r9
  403b18:	f7fe f80a 	bl	401b30 <__aeabi_dmul>
  403b1c:	4602      	mov	r2, r0
  403b1e:	460b      	mov	r3, r1
  403b20:	4630      	mov	r0, r6
  403b22:	4639      	mov	r1, r7
  403b24:	f7fd fe50 	bl	4017c8 <__aeabi_dsub>
  403b28:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  403b2c:	9e04      	ldr	r6, [sp, #16]
  403b2e:	f805 eb01 	strb.w	lr, [r5], #1
  403b32:	eba5 0e06 	sub.w	lr, r5, r6
  403b36:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  403b38:	45b6      	cmp	lr, r6
  403b3a:	e9cd 0106 	strd	r0, r1, [sp, #24]
  403b3e:	4652      	mov	r2, sl
  403b40:	465b      	mov	r3, fp
  403b42:	d1d1      	bne.n	403ae8 <_dtoa_r+0x2c8>
  403b44:	46a0      	mov	r8, r4
  403b46:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403b4a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403b4c:	4606      	mov	r6, r0
  403b4e:	460f      	mov	r7, r1
  403b50:	4632      	mov	r2, r6
  403b52:	463b      	mov	r3, r7
  403b54:	4630      	mov	r0, r6
  403b56:	4639      	mov	r1, r7
  403b58:	f7fd fe38 	bl	4017cc <__adddf3>
  403b5c:	4606      	mov	r6, r0
  403b5e:	460f      	mov	r7, r1
  403b60:	4602      	mov	r2, r0
  403b62:	460b      	mov	r3, r1
  403b64:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403b68:	f002 fc60 	bl	40642c <__aeabi_dcmplt>
  403b6c:	b948      	cbnz	r0, 403b82 <_dtoa_r+0x362>
  403b6e:	4632      	mov	r2, r6
  403b70:	463b      	mov	r3, r7
  403b72:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403b76:	f002 fc4f 	bl	406418 <__aeabi_dcmpeq>
  403b7a:	b1a8      	cbz	r0, 403ba8 <_dtoa_r+0x388>
  403b7c:	f018 0f01 	tst.w	r8, #1
  403b80:	d012      	beq.n	403ba8 <_dtoa_r+0x388>
  403b82:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403b86:	9a04      	ldr	r2, [sp, #16]
  403b88:	1e6b      	subs	r3, r5, #1
  403b8a:	e004      	b.n	403b96 <_dtoa_r+0x376>
  403b8c:	429a      	cmp	r2, r3
  403b8e:	f000 8401 	beq.w	404394 <_dtoa_r+0xb74>
  403b92:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403b96:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403b9a:	f103 0501 	add.w	r5, r3, #1
  403b9e:	d0f5      	beq.n	403b8c <_dtoa_r+0x36c>
  403ba0:	f108 0801 	add.w	r8, r8, #1
  403ba4:	f883 8000 	strb.w	r8, [r3]
  403ba8:	4649      	mov	r1, r9
  403baa:	4620      	mov	r0, r4
  403bac:	f001 fc24 	bl	4053f8 <_Bfree>
  403bb0:	2200      	movs	r2, #0
  403bb2:	9b02      	ldr	r3, [sp, #8]
  403bb4:	702a      	strb	r2, [r5, #0]
  403bb6:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403bb8:	3301      	adds	r3, #1
  403bba:	6013      	str	r3, [r2, #0]
  403bbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403bbe:	2b00      	cmp	r3, #0
  403bc0:	f000 839e 	beq.w	404300 <_dtoa_r+0xae0>
  403bc4:	9804      	ldr	r0, [sp, #16]
  403bc6:	601d      	str	r5, [r3, #0]
  403bc8:	b01b      	add	sp, #108	; 0x6c
  403bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403bce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403bd0:	2a00      	cmp	r2, #0
  403bd2:	d03e      	beq.n	403c52 <_dtoa_r+0x432>
  403bd4:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403bd6:	2a01      	cmp	r2, #1
  403bd8:	f340 8311 	ble.w	4041fe <_dtoa_r+0x9de>
  403bdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403bde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403be0:	1e5f      	subs	r7, r3, #1
  403be2:	42ba      	cmp	r2, r7
  403be4:	f2c0 838f 	blt.w	404306 <_dtoa_r+0xae6>
  403be8:	1bd7      	subs	r7, r2, r7
  403bea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403bec:	2b00      	cmp	r3, #0
  403bee:	f2c0 848b 	blt.w	404508 <_dtoa_r+0xce8>
  403bf2:	9d08      	ldr	r5, [sp, #32]
  403bf4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403bf6:	9a08      	ldr	r2, [sp, #32]
  403bf8:	441a      	add	r2, r3
  403bfa:	9208      	str	r2, [sp, #32]
  403bfc:	9a06      	ldr	r2, [sp, #24]
  403bfe:	2101      	movs	r1, #1
  403c00:	441a      	add	r2, r3
  403c02:	4620      	mov	r0, r4
  403c04:	9206      	str	r2, [sp, #24]
  403c06:	f001 fc91 	bl	40552c <__i2b>
  403c0a:	4606      	mov	r6, r0
  403c0c:	e024      	b.n	403c58 <_dtoa_r+0x438>
  403c0e:	2301      	movs	r3, #1
  403c10:	930e      	str	r3, [sp, #56]	; 0x38
  403c12:	e6af      	b.n	403974 <_dtoa_r+0x154>
  403c14:	9a08      	ldr	r2, [sp, #32]
  403c16:	9b02      	ldr	r3, [sp, #8]
  403c18:	1ad2      	subs	r2, r2, r3
  403c1a:	425b      	negs	r3, r3
  403c1c:	930c      	str	r3, [sp, #48]	; 0x30
  403c1e:	2300      	movs	r3, #0
  403c20:	9208      	str	r2, [sp, #32]
  403c22:	930d      	str	r3, [sp, #52]	; 0x34
  403c24:	e6b8      	b.n	403998 <_dtoa_r+0x178>
  403c26:	f1c7 0301 	rsb	r3, r7, #1
  403c2a:	9308      	str	r3, [sp, #32]
  403c2c:	2300      	movs	r3, #0
  403c2e:	9306      	str	r3, [sp, #24]
  403c30:	e6a7      	b.n	403982 <_dtoa_r+0x162>
  403c32:	9d02      	ldr	r5, [sp, #8]
  403c34:	4628      	mov	r0, r5
  403c36:	f7fd ff15 	bl	401a64 <__aeabi_i2d>
  403c3a:	4602      	mov	r2, r0
  403c3c:	460b      	mov	r3, r1
  403c3e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403c42:	f002 fbe9 	bl	406418 <__aeabi_dcmpeq>
  403c46:	2800      	cmp	r0, #0
  403c48:	f47f ae80 	bne.w	40394c <_dtoa_r+0x12c>
  403c4c:	1e6b      	subs	r3, r5, #1
  403c4e:	9302      	str	r3, [sp, #8]
  403c50:	e67c      	b.n	40394c <_dtoa_r+0x12c>
  403c52:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403c54:	9d08      	ldr	r5, [sp, #32]
  403c56:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403c58:	2d00      	cmp	r5, #0
  403c5a:	dd0c      	ble.n	403c76 <_dtoa_r+0x456>
  403c5c:	9906      	ldr	r1, [sp, #24]
  403c5e:	2900      	cmp	r1, #0
  403c60:	460b      	mov	r3, r1
  403c62:	dd08      	ble.n	403c76 <_dtoa_r+0x456>
  403c64:	42a9      	cmp	r1, r5
  403c66:	9a08      	ldr	r2, [sp, #32]
  403c68:	bfa8      	it	ge
  403c6a:	462b      	movge	r3, r5
  403c6c:	1ad2      	subs	r2, r2, r3
  403c6e:	1aed      	subs	r5, r5, r3
  403c70:	1acb      	subs	r3, r1, r3
  403c72:	9208      	str	r2, [sp, #32]
  403c74:	9306      	str	r3, [sp, #24]
  403c76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403c78:	b1d3      	cbz	r3, 403cb0 <_dtoa_r+0x490>
  403c7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403c7c:	2b00      	cmp	r3, #0
  403c7e:	f000 82b7 	beq.w	4041f0 <_dtoa_r+0x9d0>
  403c82:	2f00      	cmp	r7, #0
  403c84:	dd10      	ble.n	403ca8 <_dtoa_r+0x488>
  403c86:	4631      	mov	r1, r6
  403c88:	463a      	mov	r2, r7
  403c8a:	4620      	mov	r0, r4
  403c8c:	f001 fcea 	bl	405664 <__pow5mult>
  403c90:	464a      	mov	r2, r9
  403c92:	4601      	mov	r1, r0
  403c94:	4606      	mov	r6, r0
  403c96:	4620      	mov	r0, r4
  403c98:	f001 fc52 	bl	405540 <__multiply>
  403c9c:	4649      	mov	r1, r9
  403c9e:	4680      	mov	r8, r0
  403ca0:	4620      	mov	r0, r4
  403ca2:	f001 fba9 	bl	4053f8 <_Bfree>
  403ca6:	46c1      	mov	r9, r8
  403ca8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403caa:	1bda      	subs	r2, r3, r7
  403cac:	f040 82a1 	bne.w	4041f2 <_dtoa_r+0x9d2>
  403cb0:	2101      	movs	r1, #1
  403cb2:	4620      	mov	r0, r4
  403cb4:	f001 fc3a 	bl	40552c <__i2b>
  403cb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403cba:	2b00      	cmp	r3, #0
  403cbc:	4680      	mov	r8, r0
  403cbe:	dd1c      	ble.n	403cfa <_dtoa_r+0x4da>
  403cc0:	4601      	mov	r1, r0
  403cc2:	461a      	mov	r2, r3
  403cc4:	4620      	mov	r0, r4
  403cc6:	f001 fccd 	bl	405664 <__pow5mult>
  403cca:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403ccc:	2b01      	cmp	r3, #1
  403cce:	4680      	mov	r8, r0
  403cd0:	f340 8254 	ble.w	40417c <_dtoa_r+0x95c>
  403cd4:	2300      	movs	r3, #0
  403cd6:	930c      	str	r3, [sp, #48]	; 0x30
  403cd8:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403cdc:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403ce0:	6918      	ldr	r0, [r3, #16]
  403ce2:	f001 fbd3 	bl	40548c <__hi0bits>
  403ce6:	f1c0 0020 	rsb	r0, r0, #32
  403cea:	e010      	b.n	403d0e <_dtoa_r+0x4ee>
  403cec:	f1c3 0520 	rsb	r5, r3, #32
  403cf0:	fa0a f005 	lsl.w	r0, sl, r5
  403cf4:	e674      	b.n	4039e0 <_dtoa_r+0x1c0>
  403cf6:	900e      	str	r0, [sp, #56]	; 0x38
  403cf8:	e63c      	b.n	403974 <_dtoa_r+0x154>
  403cfa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403cfc:	2b01      	cmp	r3, #1
  403cfe:	f340 8287 	ble.w	404210 <_dtoa_r+0x9f0>
  403d02:	2300      	movs	r3, #0
  403d04:	930c      	str	r3, [sp, #48]	; 0x30
  403d06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403d08:	2001      	movs	r0, #1
  403d0a:	2b00      	cmp	r3, #0
  403d0c:	d1e4      	bne.n	403cd8 <_dtoa_r+0x4b8>
  403d0e:	9a06      	ldr	r2, [sp, #24]
  403d10:	4410      	add	r0, r2
  403d12:	f010 001f 	ands.w	r0, r0, #31
  403d16:	f000 80a1 	beq.w	403e5c <_dtoa_r+0x63c>
  403d1a:	f1c0 0320 	rsb	r3, r0, #32
  403d1e:	2b04      	cmp	r3, #4
  403d20:	f340 849e 	ble.w	404660 <_dtoa_r+0xe40>
  403d24:	9b08      	ldr	r3, [sp, #32]
  403d26:	f1c0 001c 	rsb	r0, r0, #28
  403d2a:	4403      	add	r3, r0
  403d2c:	9308      	str	r3, [sp, #32]
  403d2e:	4613      	mov	r3, r2
  403d30:	4403      	add	r3, r0
  403d32:	4405      	add	r5, r0
  403d34:	9306      	str	r3, [sp, #24]
  403d36:	9b08      	ldr	r3, [sp, #32]
  403d38:	2b00      	cmp	r3, #0
  403d3a:	dd05      	ble.n	403d48 <_dtoa_r+0x528>
  403d3c:	4649      	mov	r1, r9
  403d3e:	461a      	mov	r2, r3
  403d40:	4620      	mov	r0, r4
  403d42:	f001 fcdf 	bl	405704 <__lshift>
  403d46:	4681      	mov	r9, r0
  403d48:	9b06      	ldr	r3, [sp, #24]
  403d4a:	2b00      	cmp	r3, #0
  403d4c:	dd05      	ble.n	403d5a <_dtoa_r+0x53a>
  403d4e:	4641      	mov	r1, r8
  403d50:	461a      	mov	r2, r3
  403d52:	4620      	mov	r0, r4
  403d54:	f001 fcd6 	bl	405704 <__lshift>
  403d58:	4680      	mov	r8, r0
  403d5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403d5c:	2b00      	cmp	r3, #0
  403d5e:	f040 8086 	bne.w	403e6e <_dtoa_r+0x64e>
  403d62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d64:	2b00      	cmp	r3, #0
  403d66:	f340 8266 	ble.w	404236 <_dtoa_r+0xa16>
  403d6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403d6c:	2b00      	cmp	r3, #0
  403d6e:	f000 8098 	beq.w	403ea2 <_dtoa_r+0x682>
  403d72:	2d00      	cmp	r5, #0
  403d74:	dd05      	ble.n	403d82 <_dtoa_r+0x562>
  403d76:	4631      	mov	r1, r6
  403d78:	462a      	mov	r2, r5
  403d7a:	4620      	mov	r0, r4
  403d7c:	f001 fcc2 	bl	405704 <__lshift>
  403d80:	4606      	mov	r6, r0
  403d82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403d84:	2b00      	cmp	r3, #0
  403d86:	f040 8337 	bne.w	4043f8 <_dtoa_r+0xbd8>
  403d8a:	9606      	str	r6, [sp, #24]
  403d8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403d8e:	9a04      	ldr	r2, [sp, #16]
  403d90:	f8dd b018 	ldr.w	fp, [sp, #24]
  403d94:	3b01      	subs	r3, #1
  403d96:	18d3      	adds	r3, r2, r3
  403d98:	930b      	str	r3, [sp, #44]	; 0x2c
  403d9a:	f00a 0301 	and.w	r3, sl, #1
  403d9e:	930c      	str	r3, [sp, #48]	; 0x30
  403da0:	4617      	mov	r7, r2
  403da2:	46c2      	mov	sl, r8
  403da4:	4651      	mov	r1, sl
  403da6:	4648      	mov	r0, r9
  403da8:	f7ff fca6 	bl	4036f8 <quorem>
  403dac:	4631      	mov	r1, r6
  403dae:	4605      	mov	r5, r0
  403db0:	4648      	mov	r0, r9
  403db2:	f001 fcf9 	bl	4057a8 <__mcmp>
  403db6:	465a      	mov	r2, fp
  403db8:	900a      	str	r0, [sp, #40]	; 0x28
  403dba:	4651      	mov	r1, sl
  403dbc:	4620      	mov	r0, r4
  403dbe:	f001 fd0f 	bl	4057e0 <__mdiff>
  403dc2:	68c2      	ldr	r2, [r0, #12]
  403dc4:	4680      	mov	r8, r0
  403dc6:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403dca:	2a00      	cmp	r2, #0
  403dcc:	f040 822b 	bne.w	404226 <_dtoa_r+0xa06>
  403dd0:	4601      	mov	r1, r0
  403dd2:	4648      	mov	r0, r9
  403dd4:	9308      	str	r3, [sp, #32]
  403dd6:	f001 fce7 	bl	4057a8 <__mcmp>
  403dda:	4641      	mov	r1, r8
  403ddc:	9006      	str	r0, [sp, #24]
  403dde:	4620      	mov	r0, r4
  403de0:	f001 fb0a 	bl	4053f8 <_Bfree>
  403de4:	9a06      	ldr	r2, [sp, #24]
  403de6:	9b08      	ldr	r3, [sp, #32]
  403de8:	b932      	cbnz	r2, 403df8 <_dtoa_r+0x5d8>
  403dea:	9924      	ldr	r1, [sp, #144]	; 0x90
  403dec:	b921      	cbnz	r1, 403df8 <_dtoa_r+0x5d8>
  403dee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403df0:	2a00      	cmp	r2, #0
  403df2:	f000 83ef 	beq.w	4045d4 <_dtoa_r+0xdb4>
  403df6:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403df8:	990a      	ldr	r1, [sp, #40]	; 0x28
  403dfa:	2900      	cmp	r1, #0
  403dfc:	f2c0 829f 	blt.w	40433e <_dtoa_r+0xb1e>
  403e00:	d105      	bne.n	403e0e <_dtoa_r+0x5ee>
  403e02:	9924      	ldr	r1, [sp, #144]	; 0x90
  403e04:	b919      	cbnz	r1, 403e0e <_dtoa_r+0x5ee>
  403e06:	990c      	ldr	r1, [sp, #48]	; 0x30
  403e08:	2900      	cmp	r1, #0
  403e0a:	f000 8298 	beq.w	40433e <_dtoa_r+0xb1e>
  403e0e:	2a00      	cmp	r2, #0
  403e10:	f300 8306 	bgt.w	404420 <_dtoa_r+0xc00>
  403e14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403e16:	703b      	strb	r3, [r7, #0]
  403e18:	f107 0801 	add.w	r8, r7, #1
  403e1c:	4297      	cmp	r7, r2
  403e1e:	4645      	mov	r5, r8
  403e20:	f000 830c 	beq.w	40443c <_dtoa_r+0xc1c>
  403e24:	4649      	mov	r1, r9
  403e26:	2300      	movs	r3, #0
  403e28:	220a      	movs	r2, #10
  403e2a:	4620      	mov	r0, r4
  403e2c:	f001 faee 	bl	40540c <__multadd>
  403e30:	455e      	cmp	r6, fp
  403e32:	4681      	mov	r9, r0
  403e34:	4631      	mov	r1, r6
  403e36:	f04f 0300 	mov.w	r3, #0
  403e3a:	f04f 020a 	mov.w	r2, #10
  403e3e:	4620      	mov	r0, r4
  403e40:	f000 81eb 	beq.w	40421a <_dtoa_r+0x9fa>
  403e44:	f001 fae2 	bl	40540c <__multadd>
  403e48:	4659      	mov	r1, fp
  403e4a:	4606      	mov	r6, r0
  403e4c:	2300      	movs	r3, #0
  403e4e:	220a      	movs	r2, #10
  403e50:	4620      	mov	r0, r4
  403e52:	f001 fadb 	bl	40540c <__multadd>
  403e56:	4647      	mov	r7, r8
  403e58:	4683      	mov	fp, r0
  403e5a:	e7a3      	b.n	403da4 <_dtoa_r+0x584>
  403e5c:	201c      	movs	r0, #28
  403e5e:	9b08      	ldr	r3, [sp, #32]
  403e60:	4403      	add	r3, r0
  403e62:	9308      	str	r3, [sp, #32]
  403e64:	9b06      	ldr	r3, [sp, #24]
  403e66:	4403      	add	r3, r0
  403e68:	4405      	add	r5, r0
  403e6a:	9306      	str	r3, [sp, #24]
  403e6c:	e763      	b.n	403d36 <_dtoa_r+0x516>
  403e6e:	4641      	mov	r1, r8
  403e70:	4648      	mov	r0, r9
  403e72:	f001 fc99 	bl	4057a8 <__mcmp>
  403e76:	2800      	cmp	r0, #0
  403e78:	f6bf af73 	bge.w	403d62 <_dtoa_r+0x542>
  403e7c:	9f02      	ldr	r7, [sp, #8]
  403e7e:	4649      	mov	r1, r9
  403e80:	2300      	movs	r3, #0
  403e82:	220a      	movs	r2, #10
  403e84:	4620      	mov	r0, r4
  403e86:	3f01      	subs	r7, #1
  403e88:	9702      	str	r7, [sp, #8]
  403e8a:	f001 fabf 	bl	40540c <__multadd>
  403e8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403e90:	4681      	mov	r9, r0
  403e92:	2b00      	cmp	r3, #0
  403e94:	f040 83b6 	bne.w	404604 <_dtoa_r+0xde4>
  403e98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403e9a:	2b00      	cmp	r3, #0
  403e9c:	f340 83bf 	ble.w	40461e <_dtoa_r+0xdfe>
  403ea0:	930a      	str	r3, [sp, #40]	; 0x28
  403ea2:	f8dd b010 	ldr.w	fp, [sp, #16]
  403ea6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403ea8:	465d      	mov	r5, fp
  403eaa:	e002      	b.n	403eb2 <_dtoa_r+0x692>
  403eac:	f001 faae 	bl	40540c <__multadd>
  403eb0:	4681      	mov	r9, r0
  403eb2:	4641      	mov	r1, r8
  403eb4:	4648      	mov	r0, r9
  403eb6:	f7ff fc1f 	bl	4036f8 <quorem>
  403eba:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403ebe:	f805 ab01 	strb.w	sl, [r5], #1
  403ec2:	eba5 030b 	sub.w	r3, r5, fp
  403ec6:	42bb      	cmp	r3, r7
  403ec8:	f04f 020a 	mov.w	r2, #10
  403ecc:	f04f 0300 	mov.w	r3, #0
  403ed0:	4649      	mov	r1, r9
  403ed2:	4620      	mov	r0, r4
  403ed4:	dbea      	blt.n	403eac <_dtoa_r+0x68c>
  403ed6:	9b04      	ldr	r3, [sp, #16]
  403ed8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403eda:	2a01      	cmp	r2, #1
  403edc:	bfac      	ite	ge
  403ede:	189b      	addge	r3, r3, r2
  403ee0:	3301      	addlt	r3, #1
  403ee2:	461d      	mov	r5, r3
  403ee4:	f04f 0b00 	mov.w	fp, #0
  403ee8:	4649      	mov	r1, r9
  403eea:	2201      	movs	r2, #1
  403eec:	4620      	mov	r0, r4
  403eee:	f001 fc09 	bl	405704 <__lshift>
  403ef2:	4641      	mov	r1, r8
  403ef4:	4681      	mov	r9, r0
  403ef6:	f001 fc57 	bl	4057a8 <__mcmp>
  403efa:	2800      	cmp	r0, #0
  403efc:	f340 823d 	ble.w	40437a <_dtoa_r+0xb5a>
  403f00:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403f04:	9904      	ldr	r1, [sp, #16]
  403f06:	1e6b      	subs	r3, r5, #1
  403f08:	e004      	b.n	403f14 <_dtoa_r+0x6f4>
  403f0a:	428b      	cmp	r3, r1
  403f0c:	f000 81ae 	beq.w	40426c <_dtoa_r+0xa4c>
  403f10:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403f14:	2a39      	cmp	r2, #57	; 0x39
  403f16:	f103 0501 	add.w	r5, r3, #1
  403f1a:	d0f6      	beq.n	403f0a <_dtoa_r+0x6ea>
  403f1c:	3201      	adds	r2, #1
  403f1e:	701a      	strb	r2, [r3, #0]
  403f20:	4641      	mov	r1, r8
  403f22:	4620      	mov	r0, r4
  403f24:	f001 fa68 	bl	4053f8 <_Bfree>
  403f28:	2e00      	cmp	r6, #0
  403f2a:	f43f ae3d 	beq.w	403ba8 <_dtoa_r+0x388>
  403f2e:	f1bb 0f00 	cmp.w	fp, #0
  403f32:	d005      	beq.n	403f40 <_dtoa_r+0x720>
  403f34:	45b3      	cmp	fp, r6
  403f36:	d003      	beq.n	403f40 <_dtoa_r+0x720>
  403f38:	4659      	mov	r1, fp
  403f3a:	4620      	mov	r0, r4
  403f3c:	f001 fa5c 	bl	4053f8 <_Bfree>
  403f40:	4631      	mov	r1, r6
  403f42:	4620      	mov	r0, r4
  403f44:	f001 fa58 	bl	4053f8 <_Bfree>
  403f48:	e62e      	b.n	403ba8 <_dtoa_r+0x388>
  403f4a:	2300      	movs	r3, #0
  403f4c:	930b      	str	r3, [sp, #44]	; 0x2c
  403f4e:	9b02      	ldr	r3, [sp, #8]
  403f50:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403f52:	4413      	add	r3, r2
  403f54:	930f      	str	r3, [sp, #60]	; 0x3c
  403f56:	3301      	adds	r3, #1
  403f58:	2b01      	cmp	r3, #1
  403f5a:	461f      	mov	r7, r3
  403f5c:	461e      	mov	r6, r3
  403f5e:	930a      	str	r3, [sp, #40]	; 0x28
  403f60:	bfb8      	it	lt
  403f62:	2701      	movlt	r7, #1
  403f64:	2100      	movs	r1, #0
  403f66:	2f17      	cmp	r7, #23
  403f68:	6461      	str	r1, [r4, #68]	; 0x44
  403f6a:	d90a      	bls.n	403f82 <_dtoa_r+0x762>
  403f6c:	2201      	movs	r2, #1
  403f6e:	2304      	movs	r3, #4
  403f70:	005b      	lsls	r3, r3, #1
  403f72:	f103 0014 	add.w	r0, r3, #20
  403f76:	4287      	cmp	r7, r0
  403f78:	4611      	mov	r1, r2
  403f7a:	f102 0201 	add.w	r2, r2, #1
  403f7e:	d2f7      	bcs.n	403f70 <_dtoa_r+0x750>
  403f80:	6461      	str	r1, [r4, #68]	; 0x44
  403f82:	4620      	mov	r0, r4
  403f84:	f001 fa12 	bl	4053ac <_Balloc>
  403f88:	2e0e      	cmp	r6, #14
  403f8a:	9004      	str	r0, [sp, #16]
  403f8c:	6420      	str	r0, [r4, #64]	; 0x40
  403f8e:	f63f ad41 	bhi.w	403a14 <_dtoa_r+0x1f4>
  403f92:	2d00      	cmp	r5, #0
  403f94:	f43f ad3e 	beq.w	403a14 <_dtoa_r+0x1f4>
  403f98:	9902      	ldr	r1, [sp, #8]
  403f9a:	2900      	cmp	r1, #0
  403f9c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403fa0:	f340 8202 	ble.w	4043a8 <_dtoa_r+0xb88>
  403fa4:	4bb8      	ldr	r3, [pc, #736]	; (404288 <_dtoa_r+0xa68>)
  403fa6:	f001 020f 	and.w	r2, r1, #15
  403faa:	110d      	asrs	r5, r1, #4
  403fac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403fb0:	06e9      	lsls	r1, r5, #27
  403fb2:	e9d3 6700 	ldrd	r6, r7, [r3]
  403fb6:	f140 81ae 	bpl.w	404316 <_dtoa_r+0xaf6>
  403fba:	4bb4      	ldr	r3, [pc, #720]	; (40428c <_dtoa_r+0xa6c>)
  403fbc:	4650      	mov	r0, sl
  403fbe:	4659      	mov	r1, fp
  403fc0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403fc4:	f7fd fede 	bl	401d84 <__aeabi_ddiv>
  403fc8:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403fcc:	f005 050f 	and.w	r5, r5, #15
  403fd0:	f04f 0a03 	mov.w	sl, #3
  403fd4:	b18d      	cbz	r5, 403ffa <_dtoa_r+0x7da>
  403fd6:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 40428c <_dtoa_r+0xa6c>
  403fda:	07ea      	lsls	r2, r5, #31
  403fdc:	d509      	bpl.n	403ff2 <_dtoa_r+0x7d2>
  403fde:	4630      	mov	r0, r6
  403fe0:	4639      	mov	r1, r7
  403fe2:	e9d8 2300 	ldrd	r2, r3, [r8]
  403fe6:	f7fd fda3 	bl	401b30 <__aeabi_dmul>
  403fea:	f10a 0a01 	add.w	sl, sl, #1
  403fee:	4606      	mov	r6, r0
  403ff0:	460f      	mov	r7, r1
  403ff2:	106d      	asrs	r5, r5, #1
  403ff4:	f108 0808 	add.w	r8, r8, #8
  403ff8:	d1ef      	bne.n	403fda <_dtoa_r+0x7ba>
  403ffa:	463b      	mov	r3, r7
  403ffc:	4632      	mov	r2, r6
  403ffe:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  404002:	f7fd febf 	bl	401d84 <__aeabi_ddiv>
  404006:	4607      	mov	r7, r0
  404008:	4688      	mov	r8, r1
  40400a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40400c:	b143      	cbz	r3, 404020 <_dtoa_r+0x800>
  40400e:	2200      	movs	r2, #0
  404010:	4b9f      	ldr	r3, [pc, #636]	; (404290 <_dtoa_r+0xa70>)
  404012:	4638      	mov	r0, r7
  404014:	4641      	mov	r1, r8
  404016:	f002 fa09 	bl	40642c <__aeabi_dcmplt>
  40401a:	2800      	cmp	r0, #0
  40401c:	f040 8286 	bne.w	40452c <_dtoa_r+0xd0c>
  404020:	4650      	mov	r0, sl
  404022:	f7fd fd1f 	bl	401a64 <__aeabi_i2d>
  404026:	463a      	mov	r2, r7
  404028:	4643      	mov	r3, r8
  40402a:	f7fd fd81 	bl	401b30 <__aeabi_dmul>
  40402e:	4b99      	ldr	r3, [pc, #612]	; (404294 <_dtoa_r+0xa74>)
  404030:	2200      	movs	r2, #0
  404032:	f7fd fbcb 	bl	4017cc <__adddf3>
  404036:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404038:	4605      	mov	r5, r0
  40403a:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  40403e:	2b00      	cmp	r3, #0
  404040:	f000 813e 	beq.w	4042c0 <_dtoa_r+0xaa0>
  404044:	9b02      	ldr	r3, [sp, #8]
  404046:	9315      	str	r3, [sp, #84]	; 0x54
  404048:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40404a:	9312      	str	r3, [sp, #72]	; 0x48
  40404c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40404e:	2b00      	cmp	r3, #0
  404050:	f000 81fa 	beq.w	404448 <_dtoa_r+0xc28>
  404054:	9a12      	ldr	r2, [sp, #72]	; 0x48
  404056:	4b8c      	ldr	r3, [pc, #560]	; (404288 <_dtoa_r+0xa68>)
  404058:	498f      	ldr	r1, [pc, #572]	; (404298 <_dtoa_r+0xa78>)
  40405a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40405e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  404062:	2000      	movs	r0, #0
  404064:	f7fd fe8e 	bl	401d84 <__aeabi_ddiv>
  404068:	462a      	mov	r2, r5
  40406a:	4633      	mov	r3, r6
  40406c:	f7fd fbac 	bl	4017c8 <__aeabi_dsub>
  404070:	4682      	mov	sl, r0
  404072:	468b      	mov	fp, r1
  404074:	4638      	mov	r0, r7
  404076:	4641      	mov	r1, r8
  404078:	f7fd ff6c 	bl	401f54 <__aeabi_d2iz>
  40407c:	4605      	mov	r5, r0
  40407e:	f7fd fcf1 	bl	401a64 <__aeabi_i2d>
  404082:	4602      	mov	r2, r0
  404084:	460b      	mov	r3, r1
  404086:	4638      	mov	r0, r7
  404088:	4641      	mov	r1, r8
  40408a:	f7fd fb9d 	bl	4017c8 <__aeabi_dsub>
  40408e:	3530      	adds	r5, #48	; 0x30
  404090:	fa5f f885 	uxtb.w	r8, r5
  404094:	9d04      	ldr	r5, [sp, #16]
  404096:	4606      	mov	r6, r0
  404098:	460f      	mov	r7, r1
  40409a:	f885 8000 	strb.w	r8, [r5]
  40409e:	4602      	mov	r2, r0
  4040a0:	460b      	mov	r3, r1
  4040a2:	4650      	mov	r0, sl
  4040a4:	4659      	mov	r1, fp
  4040a6:	3501      	adds	r5, #1
  4040a8:	f002 f9de 	bl	406468 <__aeabi_dcmpgt>
  4040ac:	2800      	cmp	r0, #0
  4040ae:	d154      	bne.n	40415a <_dtoa_r+0x93a>
  4040b0:	4632      	mov	r2, r6
  4040b2:	463b      	mov	r3, r7
  4040b4:	2000      	movs	r0, #0
  4040b6:	4976      	ldr	r1, [pc, #472]	; (404290 <_dtoa_r+0xa70>)
  4040b8:	f7fd fb86 	bl	4017c8 <__aeabi_dsub>
  4040bc:	4602      	mov	r2, r0
  4040be:	460b      	mov	r3, r1
  4040c0:	4650      	mov	r0, sl
  4040c2:	4659      	mov	r1, fp
  4040c4:	f002 f9d0 	bl	406468 <__aeabi_dcmpgt>
  4040c8:	2800      	cmp	r0, #0
  4040ca:	f040 8270 	bne.w	4045ae <_dtoa_r+0xd8e>
  4040ce:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4040d0:	2a01      	cmp	r2, #1
  4040d2:	f000 8111 	beq.w	4042f8 <_dtoa_r+0xad8>
  4040d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4040d8:	9a04      	ldr	r2, [sp, #16]
  4040da:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  4040de:	4413      	add	r3, r2
  4040e0:	4699      	mov	r9, r3
  4040e2:	e00d      	b.n	404100 <_dtoa_r+0x8e0>
  4040e4:	2000      	movs	r0, #0
  4040e6:	496a      	ldr	r1, [pc, #424]	; (404290 <_dtoa_r+0xa70>)
  4040e8:	f7fd fb6e 	bl	4017c8 <__aeabi_dsub>
  4040ec:	4652      	mov	r2, sl
  4040ee:	465b      	mov	r3, fp
  4040f0:	f002 f99c 	bl	40642c <__aeabi_dcmplt>
  4040f4:	2800      	cmp	r0, #0
  4040f6:	f040 8258 	bne.w	4045aa <_dtoa_r+0xd8a>
  4040fa:	454d      	cmp	r5, r9
  4040fc:	f000 80fa 	beq.w	4042f4 <_dtoa_r+0xad4>
  404100:	4650      	mov	r0, sl
  404102:	4659      	mov	r1, fp
  404104:	2200      	movs	r2, #0
  404106:	4b65      	ldr	r3, [pc, #404]	; (40429c <_dtoa_r+0xa7c>)
  404108:	f7fd fd12 	bl	401b30 <__aeabi_dmul>
  40410c:	2200      	movs	r2, #0
  40410e:	4b63      	ldr	r3, [pc, #396]	; (40429c <_dtoa_r+0xa7c>)
  404110:	4682      	mov	sl, r0
  404112:	468b      	mov	fp, r1
  404114:	4630      	mov	r0, r6
  404116:	4639      	mov	r1, r7
  404118:	f7fd fd0a 	bl	401b30 <__aeabi_dmul>
  40411c:	460f      	mov	r7, r1
  40411e:	4606      	mov	r6, r0
  404120:	f7fd ff18 	bl	401f54 <__aeabi_d2iz>
  404124:	4680      	mov	r8, r0
  404126:	f7fd fc9d 	bl	401a64 <__aeabi_i2d>
  40412a:	4602      	mov	r2, r0
  40412c:	460b      	mov	r3, r1
  40412e:	4630      	mov	r0, r6
  404130:	4639      	mov	r1, r7
  404132:	f7fd fb49 	bl	4017c8 <__aeabi_dsub>
  404136:	f108 0830 	add.w	r8, r8, #48	; 0x30
  40413a:	fa5f f888 	uxtb.w	r8, r8
  40413e:	4652      	mov	r2, sl
  404140:	465b      	mov	r3, fp
  404142:	f805 8b01 	strb.w	r8, [r5], #1
  404146:	4606      	mov	r6, r0
  404148:	460f      	mov	r7, r1
  40414a:	f002 f96f 	bl	40642c <__aeabi_dcmplt>
  40414e:	4632      	mov	r2, r6
  404150:	463b      	mov	r3, r7
  404152:	2800      	cmp	r0, #0
  404154:	d0c6      	beq.n	4040e4 <_dtoa_r+0x8c4>
  404156:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  40415a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40415c:	9302      	str	r3, [sp, #8]
  40415e:	e523      	b.n	403ba8 <_dtoa_r+0x388>
  404160:	2300      	movs	r3, #0
  404162:	930b      	str	r3, [sp, #44]	; 0x2c
  404164:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404166:	2b00      	cmp	r3, #0
  404168:	f340 80dc 	ble.w	404324 <_dtoa_r+0xb04>
  40416c:	461f      	mov	r7, r3
  40416e:	461e      	mov	r6, r3
  404170:	930f      	str	r3, [sp, #60]	; 0x3c
  404172:	930a      	str	r3, [sp, #40]	; 0x28
  404174:	e6f6      	b.n	403f64 <_dtoa_r+0x744>
  404176:	2301      	movs	r3, #1
  404178:	930b      	str	r3, [sp, #44]	; 0x2c
  40417a:	e7f3      	b.n	404164 <_dtoa_r+0x944>
  40417c:	f1ba 0f00 	cmp.w	sl, #0
  404180:	f47f ada8 	bne.w	403cd4 <_dtoa_r+0x4b4>
  404184:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404188:	2b00      	cmp	r3, #0
  40418a:	f47f adba 	bne.w	403d02 <_dtoa_r+0x4e2>
  40418e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  404192:	0d3f      	lsrs	r7, r7, #20
  404194:	053f      	lsls	r7, r7, #20
  404196:	2f00      	cmp	r7, #0
  404198:	f000 820d 	beq.w	4045b6 <_dtoa_r+0xd96>
  40419c:	9b08      	ldr	r3, [sp, #32]
  40419e:	3301      	adds	r3, #1
  4041a0:	9308      	str	r3, [sp, #32]
  4041a2:	9b06      	ldr	r3, [sp, #24]
  4041a4:	3301      	adds	r3, #1
  4041a6:	9306      	str	r3, [sp, #24]
  4041a8:	2301      	movs	r3, #1
  4041aa:	930c      	str	r3, [sp, #48]	; 0x30
  4041ac:	e5ab      	b.n	403d06 <_dtoa_r+0x4e6>
  4041ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4041b0:	2b00      	cmp	r3, #0
  4041b2:	f73f ac42 	bgt.w	403a3a <_dtoa_r+0x21a>
  4041b6:	f040 8221 	bne.w	4045fc <_dtoa_r+0xddc>
  4041ba:	2200      	movs	r2, #0
  4041bc:	4b38      	ldr	r3, [pc, #224]	; (4042a0 <_dtoa_r+0xa80>)
  4041be:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4041c2:	f7fd fcb5 	bl	401b30 <__aeabi_dmul>
  4041c6:	4652      	mov	r2, sl
  4041c8:	465b      	mov	r3, fp
  4041ca:	f002 f943 	bl	406454 <__aeabi_dcmpge>
  4041ce:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  4041d2:	4646      	mov	r6, r8
  4041d4:	2800      	cmp	r0, #0
  4041d6:	d041      	beq.n	40425c <_dtoa_r+0xa3c>
  4041d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4041da:	9d04      	ldr	r5, [sp, #16]
  4041dc:	43db      	mvns	r3, r3
  4041de:	9302      	str	r3, [sp, #8]
  4041e0:	4641      	mov	r1, r8
  4041e2:	4620      	mov	r0, r4
  4041e4:	f001 f908 	bl	4053f8 <_Bfree>
  4041e8:	2e00      	cmp	r6, #0
  4041ea:	f43f acdd 	beq.w	403ba8 <_dtoa_r+0x388>
  4041ee:	e6a7      	b.n	403f40 <_dtoa_r+0x720>
  4041f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4041f2:	4649      	mov	r1, r9
  4041f4:	4620      	mov	r0, r4
  4041f6:	f001 fa35 	bl	405664 <__pow5mult>
  4041fa:	4681      	mov	r9, r0
  4041fc:	e558      	b.n	403cb0 <_dtoa_r+0x490>
  4041fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
  404200:	2a00      	cmp	r2, #0
  404202:	f000 8187 	beq.w	404514 <_dtoa_r+0xcf4>
  404206:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40420a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  40420c:	9d08      	ldr	r5, [sp, #32]
  40420e:	e4f2      	b.n	403bf6 <_dtoa_r+0x3d6>
  404210:	f1ba 0f00 	cmp.w	sl, #0
  404214:	f47f ad75 	bne.w	403d02 <_dtoa_r+0x4e2>
  404218:	e7b4      	b.n	404184 <_dtoa_r+0x964>
  40421a:	f001 f8f7 	bl	40540c <__multadd>
  40421e:	4647      	mov	r7, r8
  404220:	4606      	mov	r6, r0
  404222:	4683      	mov	fp, r0
  404224:	e5be      	b.n	403da4 <_dtoa_r+0x584>
  404226:	4601      	mov	r1, r0
  404228:	4620      	mov	r0, r4
  40422a:	9306      	str	r3, [sp, #24]
  40422c:	f001 f8e4 	bl	4053f8 <_Bfree>
  404230:	2201      	movs	r2, #1
  404232:	9b06      	ldr	r3, [sp, #24]
  404234:	e5e0      	b.n	403df8 <_dtoa_r+0x5d8>
  404236:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404238:	2b02      	cmp	r3, #2
  40423a:	f77f ad96 	ble.w	403d6a <_dtoa_r+0x54a>
  40423e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404240:	2b00      	cmp	r3, #0
  404242:	d1c9      	bne.n	4041d8 <_dtoa_r+0x9b8>
  404244:	4641      	mov	r1, r8
  404246:	2205      	movs	r2, #5
  404248:	4620      	mov	r0, r4
  40424a:	f001 f8df 	bl	40540c <__multadd>
  40424e:	4601      	mov	r1, r0
  404250:	4680      	mov	r8, r0
  404252:	4648      	mov	r0, r9
  404254:	f001 faa8 	bl	4057a8 <__mcmp>
  404258:	2800      	cmp	r0, #0
  40425a:	ddbd      	ble.n	4041d8 <_dtoa_r+0x9b8>
  40425c:	9a02      	ldr	r2, [sp, #8]
  40425e:	9904      	ldr	r1, [sp, #16]
  404260:	2331      	movs	r3, #49	; 0x31
  404262:	3201      	adds	r2, #1
  404264:	9202      	str	r2, [sp, #8]
  404266:	700b      	strb	r3, [r1, #0]
  404268:	1c4d      	adds	r5, r1, #1
  40426a:	e7b9      	b.n	4041e0 <_dtoa_r+0x9c0>
  40426c:	9a02      	ldr	r2, [sp, #8]
  40426e:	3201      	adds	r2, #1
  404270:	9202      	str	r2, [sp, #8]
  404272:	9a04      	ldr	r2, [sp, #16]
  404274:	2331      	movs	r3, #49	; 0x31
  404276:	7013      	strb	r3, [r2, #0]
  404278:	e652      	b.n	403f20 <_dtoa_r+0x700>
  40427a:	2301      	movs	r3, #1
  40427c:	930b      	str	r3, [sp, #44]	; 0x2c
  40427e:	e666      	b.n	403f4e <_dtoa_r+0x72e>
  404280:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  404284:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  404286:	e48f      	b.n	403ba8 <_dtoa_r+0x388>
  404288:	004072a8 	.word	0x004072a8
  40428c:	00407280 	.word	0x00407280
  404290:	3ff00000 	.word	0x3ff00000
  404294:	401c0000 	.word	0x401c0000
  404298:	3fe00000 	.word	0x3fe00000
  40429c:	40240000 	.word	0x40240000
  4042a0:	40140000 	.word	0x40140000
  4042a4:	4650      	mov	r0, sl
  4042a6:	f7fd fbdd 	bl	401a64 <__aeabi_i2d>
  4042aa:	463a      	mov	r2, r7
  4042ac:	4643      	mov	r3, r8
  4042ae:	f7fd fc3f 	bl	401b30 <__aeabi_dmul>
  4042b2:	2200      	movs	r2, #0
  4042b4:	4bc1      	ldr	r3, [pc, #772]	; (4045bc <_dtoa_r+0xd9c>)
  4042b6:	f7fd fa89 	bl	4017cc <__adddf3>
  4042ba:	4605      	mov	r5, r0
  4042bc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4042c0:	4641      	mov	r1, r8
  4042c2:	2200      	movs	r2, #0
  4042c4:	4bbe      	ldr	r3, [pc, #760]	; (4045c0 <_dtoa_r+0xda0>)
  4042c6:	4638      	mov	r0, r7
  4042c8:	f7fd fa7e 	bl	4017c8 <__aeabi_dsub>
  4042cc:	462a      	mov	r2, r5
  4042ce:	4633      	mov	r3, r6
  4042d0:	4682      	mov	sl, r0
  4042d2:	468b      	mov	fp, r1
  4042d4:	f002 f8c8 	bl	406468 <__aeabi_dcmpgt>
  4042d8:	4680      	mov	r8, r0
  4042da:	2800      	cmp	r0, #0
  4042dc:	f040 8110 	bne.w	404500 <_dtoa_r+0xce0>
  4042e0:	462a      	mov	r2, r5
  4042e2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  4042e6:	4650      	mov	r0, sl
  4042e8:	4659      	mov	r1, fp
  4042ea:	f002 f89f 	bl	40642c <__aeabi_dcmplt>
  4042ee:	b118      	cbz	r0, 4042f8 <_dtoa_r+0xad8>
  4042f0:	4646      	mov	r6, r8
  4042f2:	e771      	b.n	4041d8 <_dtoa_r+0x9b8>
  4042f4:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4042f8:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  4042fc:	f7ff bb8a 	b.w	403a14 <_dtoa_r+0x1f4>
  404300:	9804      	ldr	r0, [sp, #16]
  404302:	f7ff babb 	b.w	40387c <_dtoa_r+0x5c>
  404306:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404308:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  40430a:	970c      	str	r7, [sp, #48]	; 0x30
  40430c:	1afb      	subs	r3, r7, r3
  40430e:	441a      	add	r2, r3
  404310:	920d      	str	r2, [sp, #52]	; 0x34
  404312:	2700      	movs	r7, #0
  404314:	e469      	b.n	403bea <_dtoa_r+0x3ca>
  404316:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  40431a:	f04f 0a02 	mov.w	sl, #2
  40431e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  404322:	e657      	b.n	403fd4 <_dtoa_r+0x7b4>
  404324:	2100      	movs	r1, #0
  404326:	2301      	movs	r3, #1
  404328:	6461      	str	r1, [r4, #68]	; 0x44
  40432a:	4620      	mov	r0, r4
  40432c:	9325      	str	r3, [sp, #148]	; 0x94
  40432e:	f001 f83d 	bl	4053ac <_Balloc>
  404332:	9b25      	ldr	r3, [sp, #148]	; 0x94
  404334:	9004      	str	r0, [sp, #16]
  404336:	6420      	str	r0, [r4, #64]	; 0x40
  404338:	930a      	str	r3, [sp, #40]	; 0x28
  40433a:	930f      	str	r3, [sp, #60]	; 0x3c
  40433c:	e629      	b.n	403f92 <_dtoa_r+0x772>
  40433e:	2a00      	cmp	r2, #0
  404340:	46d0      	mov	r8, sl
  404342:	f8cd b018 	str.w	fp, [sp, #24]
  404346:	469a      	mov	sl, r3
  404348:	dd11      	ble.n	40436e <_dtoa_r+0xb4e>
  40434a:	4649      	mov	r1, r9
  40434c:	2201      	movs	r2, #1
  40434e:	4620      	mov	r0, r4
  404350:	f001 f9d8 	bl	405704 <__lshift>
  404354:	4641      	mov	r1, r8
  404356:	4681      	mov	r9, r0
  404358:	f001 fa26 	bl	4057a8 <__mcmp>
  40435c:	2800      	cmp	r0, #0
  40435e:	f340 8146 	ble.w	4045ee <_dtoa_r+0xdce>
  404362:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  404366:	f000 8106 	beq.w	404576 <_dtoa_r+0xd56>
  40436a:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  40436e:	46b3      	mov	fp, r6
  404370:	f887 a000 	strb.w	sl, [r7]
  404374:	1c7d      	adds	r5, r7, #1
  404376:	9e06      	ldr	r6, [sp, #24]
  404378:	e5d2      	b.n	403f20 <_dtoa_r+0x700>
  40437a:	d104      	bne.n	404386 <_dtoa_r+0xb66>
  40437c:	f01a 0f01 	tst.w	sl, #1
  404380:	d001      	beq.n	404386 <_dtoa_r+0xb66>
  404382:	e5bd      	b.n	403f00 <_dtoa_r+0x6e0>
  404384:	4615      	mov	r5, r2
  404386:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40438a:	2b30      	cmp	r3, #48	; 0x30
  40438c:	f105 32ff 	add.w	r2, r5, #4294967295
  404390:	d0f8      	beq.n	404384 <_dtoa_r+0xb64>
  404392:	e5c5      	b.n	403f20 <_dtoa_r+0x700>
  404394:	9904      	ldr	r1, [sp, #16]
  404396:	2230      	movs	r2, #48	; 0x30
  404398:	700a      	strb	r2, [r1, #0]
  40439a:	9a02      	ldr	r2, [sp, #8]
  40439c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4043a0:	3201      	adds	r2, #1
  4043a2:	9202      	str	r2, [sp, #8]
  4043a4:	f7ff bbfc 	b.w	403ba0 <_dtoa_r+0x380>
  4043a8:	f000 80bb 	beq.w	404522 <_dtoa_r+0xd02>
  4043ac:	9b02      	ldr	r3, [sp, #8]
  4043ae:	425d      	negs	r5, r3
  4043b0:	4b84      	ldr	r3, [pc, #528]	; (4045c4 <_dtoa_r+0xda4>)
  4043b2:	f005 020f 	and.w	r2, r5, #15
  4043b6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4043ba:	e9d3 2300 	ldrd	r2, r3, [r3]
  4043be:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  4043c2:	f7fd fbb5 	bl	401b30 <__aeabi_dmul>
  4043c6:	112d      	asrs	r5, r5, #4
  4043c8:	4607      	mov	r7, r0
  4043ca:	4688      	mov	r8, r1
  4043cc:	f000 812c 	beq.w	404628 <_dtoa_r+0xe08>
  4043d0:	4e7d      	ldr	r6, [pc, #500]	; (4045c8 <_dtoa_r+0xda8>)
  4043d2:	f04f 0a02 	mov.w	sl, #2
  4043d6:	07eb      	lsls	r3, r5, #31
  4043d8:	d509      	bpl.n	4043ee <_dtoa_r+0xbce>
  4043da:	4638      	mov	r0, r7
  4043dc:	4641      	mov	r1, r8
  4043de:	e9d6 2300 	ldrd	r2, r3, [r6]
  4043e2:	f7fd fba5 	bl	401b30 <__aeabi_dmul>
  4043e6:	f10a 0a01 	add.w	sl, sl, #1
  4043ea:	4607      	mov	r7, r0
  4043ec:	4688      	mov	r8, r1
  4043ee:	106d      	asrs	r5, r5, #1
  4043f0:	f106 0608 	add.w	r6, r6, #8
  4043f4:	d1ef      	bne.n	4043d6 <_dtoa_r+0xbb6>
  4043f6:	e608      	b.n	40400a <_dtoa_r+0x7ea>
  4043f8:	6871      	ldr	r1, [r6, #4]
  4043fa:	4620      	mov	r0, r4
  4043fc:	f000 ffd6 	bl	4053ac <_Balloc>
  404400:	6933      	ldr	r3, [r6, #16]
  404402:	3302      	adds	r3, #2
  404404:	009a      	lsls	r2, r3, #2
  404406:	4605      	mov	r5, r0
  404408:	f106 010c 	add.w	r1, r6, #12
  40440c:	300c      	adds	r0, #12
  40440e:	f000 ff27 	bl	405260 <memcpy>
  404412:	4629      	mov	r1, r5
  404414:	2201      	movs	r2, #1
  404416:	4620      	mov	r0, r4
  404418:	f001 f974 	bl	405704 <__lshift>
  40441c:	9006      	str	r0, [sp, #24]
  40441e:	e4b5      	b.n	403d8c <_dtoa_r+0x56c>
  404420:	2b39      	cmp	r3, #57	; 0x39
  404422:	f8cd b018 	str.w	fp, [sp, #24]
  404426:	46d0      	mov	r8, sl
  404428:	f000 80a5 	beq.w	404576 <_dtoa_r+0xd56>
  40442c:	f103 0a01 	add.w	sl, r3, #1
  404430:	46b3      	mov	fp, r6
  404432:	f887 a000 	strb.w	sl, [r7]
  404436:	1c7d      	adds	r5, r7, #1
  404438:	9e06      	ldr	r6, [sp, #24]
  40443a:	e571      	b.n	403f20 <_dtoa_r+0x700>
  40443c:	465a      	mov	r2, fp
  40443e:	46d0      	mov	r8, sl
  404440:	46b3      	mov	fp, r6
  404442:	469a      	mov	sl, r3
  404444:	4616      	mov	r6, r2
  404446:	e54f      	b.n	403ee8 <_dtoa_r+0x6c8>
  404448:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40444a:	495e      	ldr	r1, [pc, #376]	; (4045c4 <_dtoa_r+0xda4>)
  40444c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  404450:	462a      	mov	r2, r5
  404452:	4633      	mov	r3, r6
  404454:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  404458:	f7fd fb6a 	bl	401b30 <__aeabi_dmul>
  40445c:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  404460:	4638      	mov	r0, r7
  404462:	4641      	mov	r1, r8
  404464:	f7fd fd76 	bl	401f54 <__aeabi_d2iz>
  404468:	4605      	mov	r5, r0
  40446a:	f7fd fafb 	bl	401a64 <__aeabi_i2d>
  40446e:	460b      	mov	r3, r1
  404470:	4602      	mov	r2, r0
  404472:	4641      	mov	r1, r8
  404474:	4638      	mov	r0, r7
  404476:	f7fd f9a7 	bl	4017c8 <__aeabi_dsub>
  40447a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40447c:	460f      	mov	r7, r1
  40447e:	9904      	ldr	r1, [sp, #16]
  404480:	3530      	adds	r5, #48	; 0x30
  404482:	2b01      	cmp	r3, #1
  404484:	700d      	strb	r5, [r1, #0]
  404486:	4606      	mov	r6, r0
  404488:	f101 0501 	add.w	r5, r1, #1
  40448c:	d026      	beq.n	4044dc <_dtoa_r+0xcbc>
  40448e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404490:	9a04      	ldr	r2, [sp, #16]
  404492:	f8df b13c 	ldr.w	fp, [pc, #316]	; 4045d0 <_dtoa_r+0xdb0>
  404496:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40449a:	4413      	add	r3, r2
  40449c:	f04f 0a00 	mov.w	sl, #0
  4044a0:	4699      	mov	r9, r3
  4044a2:	4652      	mov	r2, sl
  4044a4:	465b      	mov	r3, fp
  4044a6:	4630      	mov	r0, r6
  4044a8:	4639      	mov	r1, r7
  4044aa:	f7fd fb41 	bl	401b30 <__aeabi_dmul>
  4044ae:	460f      	mov	r7, r1
  4044b0:	4606      	mov	r6, r0
  4044b2:	f7fd fd4f 	bl	401f54 <__aeabi_d2iz>
  4044b6:	4680      	mov	r8, r0
  4044b8:	f7fd fad4 	bl	401a64 <__aeabi_i2d>
  4044bc:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4044c0:	4602      	mov	r2, r0
  4044c2:	460b      	mov	r3, r1
  4044c4:	4630      	mov	r0, r6
  4044c6:	4639      	mov	r1, r7
  4044c8:	f7fd f97e 	bl	4017c8 <__aeabi_dsub>
  4044cc:	f805 8b01 	strb.w	r8, [r5], #1
  4044d0:	454d      	cmp	r5, r9
  4044d2:	4606      	mov	r6, r0
  4044d4:	460f      	mov	r7, r1
  4044d6:	d1e4      	bne.n	4044a2 <_dtoa_r+0xc82>
  4044d8:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4044dc:	4b3b      	ldr	r3, [pc, #236]	; (4045cc <_dtoa_r+0xdac>)
  4044de:	2200      	movs	r2, #0
  4044e0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  4044e4:	f7fd f972 	bl	4017cc <__adddf3>
  4044e8:	4632      	mov	r2, r6
  4044ea:	463b      	mov	r3, r7
  4044ec:	f001 ff9e 	bl	40642c <__aeabi_dcmplt>
  4044f0:	2800      	cmp	r0, #0
  4044f2:	d046      	beq.n	404582 <_dtoa_r+0xd62>
  4044f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4044f6:	9302      	str	r3, [sp, #8]
  4044f8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  4044fc:	f7ff bb43 	b.w	403b86 <_dtoa_r+0x366>
  404500:	f04f 0800 	mov.w	r8, #0
  404504:	4646      	mov	r6, r8
  404506:	e6a9      	b.n	40425c <_dtoa_r+0xa3c>
  404508:	9b08      	ldr	r3, [sp, #32]
  40450a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40450c:	1a9d      	subs	r5, r3, r2
  40450e:	2300      	movs	r3, #0
  404510:	f7ff bb71 	b.w	403bf6 <_dtoa_r+0x3d6>
  404514:	9b18      	ldr	r3, [sp, #96]	; 0x60
  404516:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  404518:	9d08      	ldr	r5, [sp, #32]
  40451a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40451e:	f7ff bb6a 	b.w	403bf6 <_dtoa_r+0x3d6>
  404522:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  404526:	f04f 0a02 	mov.w	sl, #2
  40452a:	e56e      	b.n	40400a <_dtoa_r+0x7ea>
  40452c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40452e:	2b00      	cmp	r3, #0
  404530:	f43f aeb8 	beq.w	4042a4 <_dtoa_r+0xa84>
  404534:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404536:	2b00      	cmp	r3, #0
  404538:	f77f aede 	ble.w	4042f8 <_dtoa_r+0xad8>
  40453c:	2200      	movs	r2, #0
  40453e:	4b24      	ldr	r3, [pc, #144]	; (4045d0 <_dtoa_r+0xdb0>)
  404540:	4638      	mov	r0, r7
  404542:	4641      	mov	r1, r8
  404544:	f7fd faf4 	bl	401b30 <__aeabi_dmul>
  404548:	4607      	mov	r7, r0
  40454a:	4688      	mov	r8, r1
  40454c:	f10a 0001 	add.w	r0, sl, #1
  404550:	f7fd fa88 	bl	401a64 <__aeabi_i2d>
  404554:	463a      	mov	r2, r7
  404556:	4643      	mov	r3, r8
  404558:	f7fd faea 	bl	401b30 <__aeabi_dmul>
  40455c:	2200      	movs	r2, #0
  40455e:	4b17      	ldr	r3, [pc, #92]	; (4045bc <_dtoa_r+0xd9c>)
  404560:	f7fd f934 	bl	4017cc <__adddf3>
  404564:	9a02      	ldr	r2, [sp, #8]
  404566:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404568:	9312      	str	r3, [sp, #72]	; 0x48
  40456a:	3a01      	subs	r2, #1
  40456c:	4605      	mov	r5, r0
  40456e:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  404572:	9215      	str	r2, [sp, #84]	; 0x54
  404574:	e56a      	b.n	40404c <_dtoa_r+0x82c>
  404576:	2239      	movs	r2, #57	; 0x39
  404578:	46b3      	mov	fp, r6
  40457a:	703a      	strb	r2, [r7, #0]
  40457c:	9e06      	ldr	r6, [sp, #24]
  40457e:	1c7d      	adds	r5, r7, #1
  404580:	e4c0      	b.n	403f04 <_dtoa_r+0x6e4>
  404582:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  404586:	2000      	movs	r0, #0
  404588:	4910      	ldr	r1, [pc, #64]	; (4045cc <_dtoa_r+0xdac>)
  40458a:	f7fd f91d 	bl	4017c8 <__aeabi_dsub>
  40458e:	4632      	mov	r2, r6
  404590:	463b      	mov	r3, r7
  404592:	f001 ff69 	bl	406468 <__aeabi_dcmpgt>
  404596:	b908      	cbnz	r0, 40459c <_dtoa_r+0xd7c>
  404598:	e6ae      	b.n	4042f8 <_dtoa_r+0xad8>
  40459a:	4615      	mov	r5, r2
  40459c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  4045a0:	2b30      	cmp	r3, #48	; 0x30
  4045a2:	f105 32ff 	add.w	r2, r5, #4294967295
  4045a6:	d0f8      	beq.n	40459a <_dtoa_r+0xd7a>
  4045a8:	e5d7      	b.n	40415a <_dtoa_r+0x93a>
  4045aa:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4045ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4045b0:	9302      	str	r3, [sp, #8]
  4045b2:	f7ff bae8 	b.w	403b86 <_dtoa_r+0x366>
  4045b6:	970c      	str	r7, [sp, #48]	; 0x30
  4045b8:	f7ff bba5 	b.w	403d06 <_dtoa_r+0x4e6>
  4045bc:	401c0000 	.word	0x401c0000
  4045c0:	40140000 	.word	0x40140000
  4045c4:	004072a8 	.word	0x004072a8
  4045c8:	00407280 	.word	0x00407280
  4045cc:	3fe00000 	.word	0x3fe00000
  4045d0:	40240000 	.word	0x40240000
  4045d4:	2b39      	cmp	r3, #57	; 0x39
  4045d6:	f8cd b018 	str.w	fp, [sp, #24]
  4045da:	46d0      	mov	r8, sl
  4045dc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  4045e0:	469a      	mov	sl, r3
  4045e2:	d0c8      	beq.n	404576 <_dtoa_r+0xd56>
  4045e4:	f1bb 0f00 	cmp.w	fp, #0
  4045e8:	f73f aebf 	bgt.w	40436a <_dtoa_r+0xb4a>
  4045ec:	e6bf      	b.n	40436e <_dtoa_r+0xb4e>
  4045ee:	f47f aebe 	bne.w	40436e <_dtoa_r+0xb4e>
  4045f2:	f01a 0f01 	tst.w	sl, #1
  4045f6:	f43f aeba 	beq.w	40436e <_dtoa_r+0xb4e>
  4045fa:	e6b2      	b.n	404362 <_dtoa_r+0xb42>
  4045fc:	f04f 0800 	mov.w	r8, #0
  404600:	4646      	mov	r6, r8
  404602:	e5e9      	b.n	4041d8 <_dtoa_r+0x9b8>
  404604:	4631      	mov	r1, r6
  404606:	2300      	movs	r3, #0
  404608:	220a      	movs	r2, #10
  40460a:	4620      	mov	r0, r4
  40460c:	f000 fefe 	bl	40540c <__multadd>
  404610:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404612:	2b00      	cmp	r3, #0
  404614:	4606      	mov	r6, r0
  404616:	dd0a      	ble.n	40462e <_dtoa_r+0xe0e>
  404618:	930a      	str	r3, [sp, #40]	; 0x28
  40461a:	f7ff bbaa 	b.w	403d72 <_dtoa_r+0x552>
  40461e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404620:	2b02      	cmp	r3, #2
  404622:	dc23      	bgt.n	40466c <_dtoa_r+0xe4c>
  404624:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404626:	e43b      	b.n	403ea0 <_dtoa_r+0x680>
  404628:	f04f 0a02 	mov.w	sl, #2
  40462c:	e4ed      	b.n	40400a <_dtoa_r+0x7ea>
  40462e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404630:	2b02      	cmp	r3, #2
  404632:	dc1b      	bgt.n	40466c <_dtoa_r+0xe4c>
  404634:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404636:	e7ef      	b.n	404618 <_dtoa_r+0xdf8>
  404638:	2500      	movs	r5, #0
  40463a:	6465      	str	r5, [r4, #68]	; 0x44
  40463c:	4629      	mov	r1, r5
  40463e:	4620      	mov	r0, r4
  404640:	f000 feb4 	bl	4053ac <_Balloc>
  404644:	f04f 33ff 	mov.w	r3, #4294967295
  404648:	930a      	str	r3, [sp, #40]	; 0x28
  40464a:	930f      	str	r3, [sp, #60]	; 0x3c
  40464c:	2301      	movs	r3, #1
  40464e:	9004      	str	r0, [sp, #16]
  404650:	9525      	str	r5, [sp, #148]	; 0x94
  404652:	6420      	str	r0, [r4, #64]	; 0x40
  404654:	930b      	str	r3, [sp, #44]	; 0x2c
  404656:	f7ff b9dd 	b.w	403a14 <_dtoa_r+0x1f4>
  40465a:	2501      	movs	r5, #1
  40465c:	f7ff b9a5 	b.w	4039aa <_dtoa_r+0x18a>
  404660:	f43f ab69 	beq.w	403d36 <_dtoa_r+0x516>
  404664:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404668:	f7ff bbf9 	b.w	403e5e <_dtoa_r+0x63e>
  40466c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40466e:	930a      	str	r3, [sp, #40]	; 0x28
  404670:	e5e5      	b.n	40423e <_dtoa_r+0xa1e>
  404672:	bf00      	nop

00404674 <__sflush_r>:
  404674:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
  404678:	b29a      	uxth	r2, r3
  40467a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40467e:	460d      	mov	r5, r1
  404680:	0711      	lsls	r1, r2, #28
  404682:	4680      	mov	r8, r0
  404684:	d43a      	bmi.n	4046fc <__sflush_r+0x88>
  404686:	686a      	ldr	r2, [r5, #4]
  404688:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
  40468c:	2a00      	cmp	r2, #0
  40468e:	81ab      	strh	r3, [r5, #12]
  404690:	dd6f      	ble.n	404772 <__sflush_r+0xfe>
  404692:	6aac      	ldr	r4, [r5, #40]	; 0x28
  404694:	2c00      	cmp	r4, #0
  404696:	d049      	beq.n	40472c <__sflush_r+0xb8>
  404698:	2200      	movs	r2, #0
  40469a:	b29b      	uxth	r3, r3
  40469c:	f8d8 6000 	ldr.w	r6, [r8]
  4046a0:	f8c8 2000 	str.w	r2, [r8]
  4046a4:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
  4046a8:	d067      	beq.n	40477a <__sflush_r+0x106>
  4046aa:	6d2a      	ldr	r2, [r5, #80]	; 0x50
  4046ac:	075f      	lsls	r7, r3, #29
  4046ae:	d505      	bpl.n	4046bc <__sflush_r+0x48>
  4046b0:	6869      	ldr	r1, [r5, #4]
  4046b2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  4046b4:	1a52      	subs	r2, r2, r1
  4046b6:	b10b      	cbz	r3, 4046bc <__sflush_r+0x48>
  4046b8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
  4046ba:	1ad2      	subs	r2, r2, r3
  4046bc:	2300      	movs	r3, #0
  4046be:	69e9      	ldr	r1, [r5, #28]
  4046c0:	4640      	mov	r0, r8
  4046c2:	47a0      	blx	r4
  4046c4:	1c44      	adds	r4, r0, #1
  4046c6:	d03c      	beq.n	404742 <__sflush_r+0xce>
  4046c8:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
  4046cc:	692a      	ldr	r2, [r5, #16]
  4046ce:	602a      	str	r2, [r5, #0]
  4046d0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  4046d4:	2200      	movs	r2, #0
  4046d6:	81ab      	strh	r3, [r5, #12]
  4046d8:	04db      	lsls	r3, r3, #19
  4046da:	606a      	str	r2, [r5, #4]
  4046dc:	d447      	bmi.n	40476e <__sflush_r+0xfa>
  4046de:	6b29      	ldr	r1, [r5, #48]	; 0x30
  4046e0:	f8c8 6000 	str.w	r6, [r8]
  4046e4:	b311      	cbz	r1, 40472c <__sflush_r+0xb8>
  4046e6:	f105 0340 	add.w	r3, r5, #64	; 0x40
  4046ea:	4299      	cmp	r1, r3
  4046ec:	d002      	beq.n	4046f4 <__sflush_r+0x80>
  4046ee:	4640      	mov	r0, r8
  4046f0:	f000 f95a 	bl	4049a8 <_free_r>
  4046f4:	2000      	movs	r0, #0
  4046f6:	6328      	str	r0, [r5, #48]	; 0x30
  4046f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4046fc:	692e      	ldr	r6, [r5, #16]
  4046fe:	b1ae      	cbz	r6, 40472c <__sflush_r+0xb8>
  404700:	682c      	ldr	r4, [r5, #0]
  404702:	602e      	str	r6, [r5, #0]
  404704:	0791      	lsls	r1, r2, #30
  404706:	bf0c      	ite	eq
  404708:	696b      	ldreq	r3, [r5, #20]
  40470a:	2300      	movne	r3, #0
  40470c:	1ba4      	subs	r4, r4, r6
  40470e:	60ab      	str	r3, [r5, #8]
  404710:	e00a      	b.n	404728 <__sflush_r+0xb4>
  404712:	4623      	mov	r3, r4
  404714:	4632      	mov	r2, r6
  404716:	6a6f      	ldr	r7, [r5, #36]	; 0x24
  404718:	69e9      	ldr	r1, [r5, #28]
  40471a:	4640      	mov	r0, r8
  40471c:	47b8      	blx	r7
  40471e:	2800      	cmp	r0, #0
  404720:	eba4 0400 	sub.w	r4, r4, r0
  404724:	4406      	add	r6, r0
  404726:	dd04      	ble.n	404732 <__sflush_r+0xbe>
  404728:	2c00      	cmp	r4, #0
  40472a:	dcf2      	bgt.n	404712 <__sflush_r+0x9e>
  40472c:	2000      	movs	r0, #0
  40472e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404732:	89ab      	ldrh	r3, [r5, #12]
  404734:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404738:	81ab      	strh	r3, [r5, #12]
  40473a:	f04f 30ff 	mov.w	r0, #4294967295
  40473e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404742:	f8d8 4000 	ldr.w	r4, [r8]
  404746:	2c1d      	cmp	r4, #29
  404748:	d8f3      	bhi.n	404732 <__sflush_r+0xbe>
  40474a:	4b19      	ldr	r3, [pc, #100]	; (4047b0 <__sflush_r+0x13c>)
  40474c:	40e3      	lsrs	r3, r4
  40474e:	43db      	mvns	r3, r3
  404750:	f013 0301 	ands.w	r3, r3, #1
  404754:	d1ed      	bne.n	404732 <__sflush_r+0xbe>
  404756:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
  40475a:	606b      	str	r3, [r5, #4]
  40475c:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
  404760:	6929      	ldr	r1, [r5, #16]
  404762:	81ab      	strh	r3, [r5, #12]
  404764:	04da      	lsls	r2, r3, #19
  404766:	6029      	str	r1, [r5, #0]
  404768:	d5b9      	bpl.n	4046de <__sflush_r+0x6a>
  40476a:	2c00      	cmp	r4, #0
  40476c:	d1b7      	bne.n	4046de <__sflush_r+0x6a>
  40476e:	6528      	str	r0, [r5, #80]	; 0x50
  404770:	e7b5      	b.n	4046de <__sflush_r+0x6a>
  404772:	6bea      	ldr	r2, [r5, #60]	; 0x3c
  404774:	2a00      	cmp	r2, #0
  404776:	dc8c      	bgt.n	404692 <__sflush_r+0x1e>
  404778:	e7d8      	b.n	40472c <__sflush_r+0xb8>
  40477a:	2301      	movs	r3, #1
  40477c:	69e9      	ldr	r1, [r5, #28]
  40477e:	4640      	mov	r0, r8
  404780:	47a0      	blx	r4
  404782:	1c43      	adds	r3, r0, #1
  404784:	4602      	mov	r2, r0
  404786:	d002      	beq.n	40478e <__sflush_r+0x11a>
  404788:	89ab      	ldrh	r3, [r5, #12]
  40478a:	6aac      	ldr	r4, [r5, #40]	; 0x28
  40478c:	e78e      	b.n	4046ac <__sflush_r+0x38>
  40478e:	f8d8 3000 	ldr.w	r3, [r8]
  404792:	2b00      	cmp	r3, #0
  404794:	d0f8      	beq.n	404788 <__sflush_r+0x114>
  404796:	2b1d      	cmp	r3, #29
  404798:	d001      	beq.n	40479e <__sflush_r+0x12a>
  40479a:	2b16      	cmp	r3, #22
  40479c:	d102      	bne.n	4047a4 <__sflush_r+0x130>
  40479e:	f8c8 6000 	str.w	r6, [r8]
  4047a2:	e7c3      	b.n	40472c <__sflush_r+0xb8>
  4047a4:	89ab      	ldrh	r3, [r5, #12]
  4047a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  4047aa:	81ab      	strh	r3, [r5, #12]
  4047ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4047b0:	20400001 	.word	0x20400001

004047b4 <_fflush_r>:
  4047b4:	b538      	push	{r3, r4, r5, lr}
  4047b6:	460d      	mov	r5, r1
  4047b8:	4604      	mov	r4, r0
  4047ba:	b108      	cbz	r0, 4047c0 <_fflush_r+0xc>
  4047bc:	6b83      	ldr	r3, [r0, #56]	; 0x38
  4047be:	b1bb      	cbz	r3, 4047f0 <_fflush_r+0x3c>
  4047c0:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
  4047c4:	b188      	cbz	r0, 4047ea <_fflush_r+0x36>
  4047c6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4047c8:	07db      	lsls	r3, r3, #31
  4047ca:	d401      	bmi.n	4047d0 <_fflush_r+0x1c>
  4047cc:	0581      	lsls	r1, r0, #22
  4047ce:	d517      	bpl.n	404800 <_fflush_r+0x4c>
  4047d0:	4620      	mov	r0, r4
  4047d2:	4629      	mov	r1, r5
  4047d4:	f7ff ff4e 	bl	404674 <__sflush_r>
  4047d8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  4047da:	07da      	lsls	r2, r3, #31
  4047dc:	4604      	mov	r4, r0
  4047de:	d402      	bmi.n	4047e6 <_fflush_r+0x32>
  4047e0:	89ab      	ldrh	r3, [r5, #12]
  4047e2:	059b      	lsls	r3, r3, #22
  4047e4:	d507      	bpl.n	4047f6 <_fflush_r+0x42>
  4047e6:	4620      	mov	r0, r4
  4047e8:	bd38      	pop	{r3, r4, r5, pc}
  4047ea:	4604      	mov	r4, r0
  4047ec:	4620      	mov	r0, r4
  4047ee:	bd38      	pop	{r3, r4, r5, pc}
  4047f0:	f000 f838 	bl	404864 <__sinit>
  4047f4:	e7e4      	b.n	4047c0 <_fflush_r+0xc>
  4047f6:	6da8      	ldr	r0, [r5, #88]	; 0x58
  4047f8:	f000 f9fa 	bl	404bf0 <__retarget_lock_release_recursive>
  4047fc:	4620      	mov	r0, r4
  4047fe:	bd38      	pop	{r3, r4, r5, pc}
  404800:	6da8      	ldr	r0, [r5, #88]	; 0x58
  404802:	f000 f9f3 	bl	404bec <__retarget_lock_acquire_recursive>
  404806:	e7e3      	b.n	4047d0 <_fflush_r+0x1c>

00404808 <_cleanup_r>:
  404808:	4901      	ldr	r1, [pc, #4]	; (404810 <_cleanup_r+0x8>)
  40480a:	f000 b9b3 	b.w	404b74 <_fwalk_reent>
  40480e:	bf00      	nop
  404810:	00405dcd 	.word	0x00405dcd

00404814 <std.isra.0>:
  404814:	b510      	push	{r4, lr}
  404816:	2300      	movs	r3, #0
  404818:	4604      	mov	r4, r0
  40481a:	8181      	strh	r1, [r0, #12]
  40481c:	81c2      	strh	r2, [r0, #14]
  40481e:	6003      	str	r3, [r0, #0]
  404820:	6043      	str	r3, [r0, #4]
  404822:	6083      	str	r3, [r0, #8]
  404824:	6643      	str	r3, [r0, #100]	; 0x64
  404826:	6103      	str	r3, [r0, #16]
  404828:	6143      	str	r3, [r0, #20]
  40482a:	6183      	str	r3, [r0, #24]
  40482c:	4619      	mov	r1, r3
  40482e:	2208      	movs	r2, #8
  404830:	305c      	adds	r0, #92	; 0x5c
  404832:	f7fd fbdf 	bl	401ff4 <memset>
  404836:	4807      	ldr	r0, [pc, #28]	; (404854 <std.isra.0+0x40>)
  404838:	4907      	ldr	r1, [pc, #28]	; (404858 <std.isra.0+0x44>)
  40483a:	4a08      	ldr	r2, [pc, #32]	; (40485c <std.isra.0+0x48>)
  40483c:	4b08      	ldr	r3, [pc, #32]	; (404860 <std.isra.0+0x4c>)
  40483e:	6220      	str	r0, [r4, #32]
  404840:	61e4      	str	r4, [r4, #28]
  404842:	6261      	str	r1, [r4, #36]	; 0x24
  404844:	62a2      	str	r2, [r4, #40]	; 0x28
  404846:	62e3      	str	r3, [r4, #44]	; 0x2c
  404848:	f104 0058 	add.w	r0, r4, #88	; 0x58
  40484c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  404850:	f000 b9c8 	b.w	404be4 <__retarget_lock_init_recursive>
  404854:	004059c5 	.word	0x004059c5
  404858:	004059e9 	.word	0x004059e9
  40485c:	00405a25 	.word	0x00405a25
  404860:	00405a45 	.word	0x00405a45

00404864 <__sinit>:
  404864:	b510      	push	{r4, lr}
  404866:	4604      	mov	r4, r0
  404868:	4812      	ldr	r0, [pc, #72]	; (4048b4 <__sinit+0x50>)
  40486a:	f000 f9bf 	bl	404bec <__retarget_lock_acquire_recursive>
  40486e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
  404870:	b9d2      	cbnz	r2, 4048a8 <__sinit+0x44>
  404872:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
  404876:	4810      	ldr	r0, [pc, #64]	; (4048b8 <__sinit+0x54>)
  404878:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
  40487c:	2103      	movs	r1, #3
  40487e:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
  404882:	63e0      	str	r0, [r4, #60]	; 0x3c
  404884:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
  404888:	6860      	ldr	r0, [r4, #4]
  40488a:	2104      	movs	r1, #4
  40488c:	f7ff ffc2 	bl	404814 <std.isra.0>
  404890:	2201      	movs	r2, #1
  404892:	2109      	movs	r1, #9
  404894:	68a0      	ldr	r0, [r4, #8]
  404896:	f7ff ffbd 	bl	404814 <std.isra.0>
  40489a:	2202      	movs	r2, #2
  40489c:	2112      	movs	r1, #18
  40489e:	68e0      	ldr	r0, [r4, #12]
  4048a0:	f7ff ffb8 	bl	404814 <std.isra.0>
  4048a4:	2301      	movs	r3, #1
  4048a6:	63a3      	str	r3, [r4, #56]	; 0x38
  4048a8:	4802      	ldr	r0, [pc, #8]	; (4048b4 <__sinit+0x50>)
  4048aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4048ae:	f000 b99f 	b.w	404bf0 <__retarget_lock_release_recursive>
  4048b2:	bf00      	nop
  4048b4:	20400ce4 	.word	0x20400ce4
  4048b8:	00404809 	.word	0x00404809

004048bc <__sfp_lock_acquire>:
  4048bc:	4801      	ldr	r0, [pc, #4]	; (4048c4 <__sfp_lock_acquire+0x8>)
  4048be:	f000 b995 	b.w	404bec <__retarget_lock_acquire_recursive>
  4048c2:	bf00      	nop
  4048c4:	20400cf8 	.word	0x20400cf8

004048c8 <__sfp_lock_release>:
  4048c8:	4801      	ldr	r0, [pc, #4]	; (4048d0 <__sfp_lock_release+0x8>)
  4048ca:	f000 b991 	b.w	404bf0 <__retarget_lock_release_recursive>
  4048ce:	bf00      	nop
  4048d0:	20400cf8 	.word	0x20400cf8

004048d4 <__libc_fini_array>:
  4048d4:	b538      	push	{r3, r4, r5, lr}
  4048d6:	4c0a      	ldr	r4, [pc, #40]	; (404900 <__libc_fini_array+0x2c>)
  4048d8:	4d0a      	ldr	r5, [pc, #40]	; (404904 <__libc_fini_array+0x30>)
  4048da:	1b64      	subs	r4, r4, r5
  4048dc:	10a4      	asrs	r4, r4, #2
  4048de:	d00a      	beq.n	4048f6 <__libc_fini_array+0x22>
  4048e0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  4048e4:	3b01      	subs	r3, #1
  4048e6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  4048ea:	3c01      	subs	r4, #1
  4048ec:	f855 3904 	ldr.w	r3, [r5], #-4
  4048f0:	4798      	blx	r3
  4048f2:	2c00      	cmp	r4, #0
  4048f4:	d1f9      	bne.n	4048ea <__libc_fini_array+0x16>
  4048f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4048fa:	f002 bdd3 	b.w	4074a4 <_fini>
  4048fe:	bf00      	nop
  404900:	004074b4 	.word	0x004074b4
  404904:	004074b0 	.word	0x004074b0

00404908 <_malloc_trim_r>:
  404908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40490a:	4f24      	ldr	r7, [pc, #144]	; (40499c <_malloc_trim_r+0x94>)
  40490c:	460c      	mov	r4, r1
  40490e:	4606      	mov	r6, r0
  404910:	f000 fd40 	bl	405394 <__malloc_lock>
  404914:	68bb      	ldr	r3, [r7, #8]
  404916:	685d      	ldr	r5, [r3, #4]
  404918:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  40491c:	310f      	adds	r1, #15
  40491e:	f025 0503 	bic.w	r5, r5, #3
  404922:	4429      	add	r1, r5
  404924:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404928:	f021 010f 	bic.w	r1, r1, #15
  40492c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404930:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404934:	db07      	blt.n	404946 <_malloc_trim_r+0x3e>
  404936:	2100      	movs	r1, #0
  404938:	4630      	mov	r0, r6
  40493a:	f001 f831 	bl	4059a0 <_sbrk_r>
  40493e:	68bb      	ldr	r3, [r7, #8]
  404940:	442b      	add	r3, r5
  404942:	4298      	cmp	r0, r3
  404944:	d004      	beq.n	404950 <_malloc_trim_r+0x48>
  404946:	4630      	mov	r0, r6
  404948:	f000 fd2a 	bl	4053a0 <__malloc_unlock>
  40494c:	2000      	movs	r0, #0
  40494e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404950:	4261      	negs	r1, r4
  404952:	4630      	mov	r0, r6
  404954:	f001 f824 	bl	4059a0 <_sbrk_r>
  404958:	3001      	adds	r0, #1
  40495a:	d00d      	beq.n	404978 <_malloc_trim_r+0x70>
  40495c:	4b10      	ldr	r3, [pc, #64]	; (4049a0 <_malloc_trim_r+0x98>)
  40495e:	68ba      	ldr	r2, [r7, #8]
  404960:	6819      	ldr	r1, [r3, #0]
  404962:	1b2d      	subs	r5, r5, r4
  404964:	f045 0501 	orr.w	r5, r5, #1
  404968:	4630      	mov	r0, r6
  40496a:	1b09      	subs	r1, r1, r4
  40496c:	6055      	str	r5, [r2, #4]
  40496e:	6019      	str	r1, [r3, #0]
  404970:	f000 fd16 	bl	4053a0 <__malloc_unlock>
  404974:	2001      	movs	r0, #1
  404976:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404978:	2100      	movs	r1, #0
  40497a:	4630      	mov	r0, r6
  40497c:	f001 f810 	bl	4059a0 <_sbrk_r>
  404980:	68ba      	ldr	r2, [r7, #8]
  404982:	1a83      	subs	r3, r0, r2
  404984:	2b0f      	cmp	r3, #15
  404986:	ddde      	ble.n	404946 <_malloc_trim_r+0x3e>
  404988:	4c06      	ldr	r4, [pc, #24]	; (4049a4 <_malloc_trim_r+0x9c>)
  40498a:	4905      	ldr	r1, [pc, #20]	; (4049a0 <_malloc_trim_r+0x98>)
  40498c:	6824      	ldr	r4, [r4, #0]
  40498e:	f043 0301 	orr.w	r3, r3, #1
  404992:	1b00      	subs	r0, r0, r4
  404994:	6053      	str	r3, [r2, #4]
  404996:	6008      	str	r0, [r1, #0]
  404998:	e7d5      	b.n	404946 <_malloc_trim_r+0x3e>
  40499a:	bf00      	nop
  40499c:	20400454 	.word	0x20400454
  4049a0:	20400c70 	.word	0x20400c70
  4049a4:	2040085c 	.word	0x2040085c

004049a8 <_free_r>:
  4049a8:	2900      	cmp	r1, #0
  4049aa:	d044      	beq.n	404a36 <_free_r+0x8e>
  4049ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4049b0:	460d      	mov	r5, r1
  4049b2:	4680      	mov	r8, r0
  4049b4:	f000 fcee 	bl	405394 <__malloc_lock>
  4049b8:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4049bc:	4969      	ldr	r1, [pc, #420]	; (404b64 <_free_r+0x1bc>)
  4049be:	f027 0301 	bic.w	r3, r7, #1
  4049c2:	f1a5 0408 	sub.w	r4, r5, #8
  4049c6:	18e2      	adds	r2, r4, r3
  4049c8:	688e      	ldr	r6, [r1, #8]
  4049ca:	6850      	ldr	r0, [r2, #4]
  4049cc:	42b2      	cmp	r2, r6
  4049ce:	f020 0003 	bic.w	r0, r0, #3
  4049d2:	d05e      	beq.n	404a92 <_free_r+0xea>
  4049d4:	07fe      	lsls	r6, r7, #31
  4049d6:	6050      	str	r0, [r2, #4]
  4049d8:	d40b      	bmi.n	4049f2 <_free_r+0x4a>
  4049da:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4049de:	1be4      	subs	r4, r4, r7
  4049e0:	f101 0e08 	add.w	lr, r1, #8
  4049e4:	68a5      	ldr	r5, [r4, #8]
  4049e6:	4575      	cmp	r5, lr
  4049e8:	443b      	add	r3, r7
  4049ea:	d06d      	beq.n	404ac8 <_free_r+0x120>
  4049ec:	68e7      	ldr	r7, [r4, #12]
  4049ee:	60ef      	str	r7, [r5, #12]
  4049f0:	60bd      	str	r5, [r7, #8]
  4049f2:	1815      	adds	r5, r2, r0
  4049f4:	686d      	ldr	r5, [r5, #4]
  4049f6:	07ed      	lsls	r5, r5, #31
  4049f8:	d53e      	bpl.n	404a78 <_free_r+0xd0>
  4049fa:	f043 0201 	orr.w	r2, r3, #1
  4049fe:	6062      	str	r2, [r4, #4]
  404a00:	50e3      	str	r3, [r4, r3]
  404a02:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404a06:	d217      	bcs.n	404a38 <_free_r+0x90>
  404a08:	08db      	lsrs	r3, r3, #3
  404a0a:	1c58      	adds	r0, r3, #1
  404a0c:	109a      	asrs	r2, r3, #2
  404a0e:	684d      	ldr	r5, [r1, #4]
  404a10:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  404a14:	60a7      	str	r7, [r4, #8]
  404a16:	2301      	movs	r3, #1
  404a18:	4093      	lsls	r3, r2
  404a1a:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  404a1e:	432b      	orrs	r3, r5
  404a20:	3a08      	subs	r2, #8
  404a22:	60e2      	str	r2, [r4, #12]
  404a24:	604b      	str	r3, [r1, #4]
  404a26:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  404a2a:	60fc      	str	r4, [r7, #12]
  404a2c:	4640      	mov	r0, r8
  404a2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404a32:	f000 bcb5 	b.w	4053a0 <__malloc_unlock>
  404a36:	4770      	bx	lr
  404a38:	0a5a      	lsrs	r2, r3, #9
  404a3a:	2a04      	cmp	r2, #4
  404a3c:	d852      	bhi.n	404ae4 <_free_r+0x13c>
  404a3e:	099a      	lsrs	r2, r3, #6
  404a40:	f102 0739 	add.w	r7, r2, #57	; 0x39
  404a44:	00ff      	lsls	r7, r7, #3
  404a46:	f102 0538 	add.w	r5, r2, #56	; 0x38
  404a4a:	19c8      	adds	r0, r1, r7
  404a4c:	59ca      	ldr	r2, [r1, r7]
  404a4e:	3808      	subs	r0, #8
  404a50:	4290      	cmp	r0, r2
  404a52:	d04f      	beq.n	404af4 <_free_r+0x14c>
  404a54:	6851      	ldr	r1, [r2, #4]
  404a56:	f021 0103 	bic.w	r1, r1, #3
  404a5a:	428b      	cmp	r3, r1
  404a5c:	d232      	bcs.n	404ac4 <_free_r+0x11c>
  404a5e:	6892      	ldr	r2, [r2, #8]
  404a60:	4290      	cmp	r0, r2
  404a62:	d1f7      	bne.n	404a54 <_free_r+0xac>
  404a64:	68c3      	ldr	r3, [r0, #12]
  404a66:	60a0      	str	r0, [r4, #8]
  404a68:	60e3      	str	r3, [r4, #12]
  404a6a:	609c      	str	r4, [r3, #8]
  404a6c:	60c4      	str	r4, [r0, #12]
  404a6e:	4640      	mov	r0, r8
  404a70:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404a74:	f000 bc94 	b.w	4053a0 <__malloc_unlock>
  404a78:	6895      	ldr	r5, [r2, #8]
  404a7a:	4f3b      	ldr	r7, [pc, #236]	; (404b68 <_free_r+0x1c0>)
  404a7c:	42bd      	cmp	r5, r7
  404a7e:	4403      	add	r3, r0
  404a80:	d040      	beq.n	404b04 <_free_r+0x15c>
  404a82:	68d0      	ldr	r0, [r2, #12]
  404a84:	60e8      	str	r0, [r5, #12]
  404a86:	f043 0201 	orr.w	r2, r3, #1
  404a8a:	6085      	str	r5, [r0, #8]
  404a8c:	6062      	str	r2, [r4, #4]
  404a8e:	50e3      	str	r3, [r4, r3]
  404a90:	e7b7      	b.n	404a02 <_free_r+0x5a>
  404a92:	07ff      	lsls	r7, r7, #31
  404a94:	4403      	add	r3, r0
  404a96:	d407      	bmi.n	404aa8 <_free_r+0x100>
  404a98:	f855 2c08 	ldr.w	r2, [r5, #-8]
  404a9c:	1aa4      	subs	r4, r4, r2
  404a9e:	4413      	add	r3, r2
  404aa0:	68a0      	ldr	r0, [r4, #8]
  404aa2:	68e2      	ldr	r2, [r4, #12]
  404aa4:	60c2      	str	r2, [r0, #12]
  404aa6:	6090      	str	r0, [r2, #8]
  404aa8:	4a30      	ldr	r2, [pc, #192]	; (404b6c <_free_r+0x1c4>)
  404aaa:	6812      	ldr	r2, [r2, #0]
  404aac:	f043 0001 	orr.w	r0, r3, #1
  404ab0:	4293      	cmp	r3, r2
  404ab2:	6060      	str	r0, [r4, #4]
  404ab4:	608c      	str	r4, [r1, #8]
  404ab6:	d3b9      	bcc.n	404a2c <_free_r+0x84>
  404ab8:	4b2d      	ldr	r3, [pc, #180]	; (404b70 <_free_r+0x1c8>)
  404aba:	4640      	mov	r0, r8
  404abc:	6819      	ldr	r1, [r3, #0]
  404abe:	f7ff ff23 	bl	404908 <_malloc_trim_r>
  404ac2:	e7b3      	b.n	404a2c <_free_r+0x84>
  404ac4:	4610      	mov	r0, r2
  404ac6:	e7cd      	b.n	404a64 <_free_r+0xbc>
  404ac8:	1811      	adds	r1, r2, r0
  404aca:	6849      	ldr	r1, [r1, #4]
  404acc:	07c9      	lsls	r1, r1, #31
  404ace:	d444      	bmi.n	404b5a <_free_r+0x1b2>
  404ad0:	6891      	ldr	r1, [r2, #8]
  404ad2:	68d2      	ldr	r2, [r2, #12]
  404ad4:	60ca      	str	r2, [r1, #12]
  404ad6:	4403      	add	r3, r0
  404ad8:	f043 0001 	orr.w	r0, r3, #1
  404adc:	6091      	str	r1, [r2, #8]
  404ade:	6060      	str	r0, [r4, #4]
  404ae0:	50e3      	str	r3, [r4, r3]
  404ae2:	e7a3      	b.n	404a2c <_free_r+0x84>
  404ae4:	2a14      	cmp	r2, #20
  404ae6:	d816      	bhi.n	404b16 <_free_r+0x16e>
  404ae8:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  404aec:	00ff      	lsls	r7, r7, #3
  404aee:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  404af2:	e7aa      	b.n	404a4a <_free_r+0xa2>
  404af4:	10aa      	asrs	r2, r5, #2
  404af6:	2301      	movs	r3, #1
  404af8:	684d      	ldr	r5, [r1, #4]
  404afa:	4093      	lsls	r3, r2
  404afc:	432b      	orrs	r3, r5
  404afe:	604b      	str	r3, [r1, #4]
  404b00:	4603      	mov	r3, r0
  404b02:	e7b0      	b.n	404a66 <_free_r+0xbe>
  404b04:	f043 0201 	orr.w	r2, r3, #1
  404b08:	614c      	str	r4, [r1, #20]
  404b0a:	610c      	str	r4, [r1, #16]
  404b0c:	60e5      	str	r5, [r4, #12]
  404b0e:	60a5      	str	r5, [r4, #8]
  404b10:	6062      	str	r2, [r4, #4]
  404b12:	50e3      	str	r3, [r4, r3]
  404b14:	e78a      	b.n	404a2c <_free_r+0x84>
  404b16:	2a54      	cmp	r2, #84	; 0x54
  404b18:	d806      	bhi.n	404b28 <_free_r+0x180>
  404b1a:	0b1a      	lsrs	r2, r3, #12
  404b1c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  404b20:	00ff      	lsls	r7, r7, #3
  404b22:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  404b26:	e790      	b.n	404a4a <_free_r+0xa2>
  404b28:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404b2c:	d806      	bhi.n	404b3c <_free_r+0x194>
  404b2e:	0bda      	lsrs	r2, r3, #15
  404b30:	f102 0778 	add.w	r7, r2, #120	; 0x78
  404b34:	00ff      	lsls	r7, r7, #3
  404b36:	f102 0577 	add.w	r5, r2, #119	; 0x77
  404b3a:	e786      	b.n	404a4a <_free_r+0xa2>
  404b3c:	f240 5054 	movw	r0, #1364	; 0x554
  404b40:	4282      	cmp	r2, r0
  404b42:	d806      	bhi.n	404b52 <_free_r+0x1aa>
  404b44:	0c9a      	lsrs	r2, r3, #18
  404b46:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  404b4a:	00ff      	lsls	r7, r7, #3
  404b4c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  404b50:	e77b      	b.n	404a4a <_free_r+0xa2>
  404b52:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  404b56:	257e      	movs	r5, #126	; 0x7e
  404b58:	e777      	b.n	404a4a <_free_r+0xa2>
  404b5a:	f043 0101 	orr.w	r1, r3, #1
  404b5e:	6061      	str	r1, [r4, #4]
  404b60:	6013      	str	r3, [r2, #0]
  404b62:	e763      	b.n	404a2c <_free_r+0x84>
  404b64:	20400454 	.word	0x20400454
  404b68:	2040045c 	.word	0x2040045c
  404b6c:	20400860 	.word	0x20400860
  404b70:	20400ca0 	.word	0x20400ca0

00404b74 <_fwalk_reent>:
  404b74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404b78:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
  404b7c:	d01f      	beq.n	404bbe <_fwalk_reent+0x4a>
  404b7e:	4688      	mov	r8, r1
  404b80:	4606      	mov	r6, r0
  404b82:	f04f 0900 	mov.w	r9, #0
  404b86:	687d      	ldr	r5, [r7, #4]
  404b88:	68bc      	ldr	r4, [r7, #8]
  404b8a:	3d01      	subs	r5, #1
  404b8c:	d411      	bmi.n	404bb2 <_fwalk_reent+0x3e>
  404b8e:	89a3      	ldrh	r3, [r4, #12]
  404b90:	2b01      	cmp	r3, #1
  404b92:	f105 35ff 	add.w	r5, r5, #4294967295
  404b96:	d908      	bls.n	404baa <_fwalk_reent+0x36>
  404b98:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
  404b9c:	3301      	adds	r3, #1
  404b9e:	4621      	mov	r1, r4
  404ba0:	4630      	mov	r0, r6
  404ba2:	d002      	beq.n	404baa <_fwalk_reent+0x36>
  404ba4:	47c0      	blx	r8
  404ba6:	ea49 0900 	orr.w	r9, r9, r0
  404baa:	1c6b      	adds	r3, r5, #1
  404bac:	f104 0468 	add.w	r4, r4, #104	; 0x68
  404bb0:	d1ed      	bne.n	404b8e <_fwalk_reent+0x1a>
  404bb2:	683f      	ldr	r7, [r7, #0]
  404bb4:	2f00      	cmp	r7, #0
  404bb6:	d1e6      	bne.n	404b86 <_fwalk_reent+0x12>
  404bb8:	4648      	mov	r0, r9
  404bba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404bbe:	46b9      	mov	r9, r7
  404bc0:	4648      	mov	r0, r9
  404bc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404bc6:	bf00      	nop

00404bc8 <_localeconv_r>:
  404bc8:	4a04      	ldr	r2, [pc, #16]	; (404bdc <_localeconv_r+0x14>)
  404bca:	4b05      	ldr	r3, [pc, #20]	; (404be0 <_localeconv_r+0x18>)
  404bcc:	6812      	ldr	r2, [r2, #0]
  404bce:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404bd0:	2800      	cmp	r0, #0
  404bd2:	bf08      	it	eq
  404bd4:	4618      	moveq	r0, r3
  404bd6:	30f0      	adds	r0, #240	; 0xf0
  404bd8:	4770      	bx	lr
  404bda:	bf00      	nop
  404bdc:	20400024 	.word	0x20400024
  404be0:	20400864 	.word	0x20400864

00404be4 <__retarget_lock_init_recursive>:
  404be4:	4770      	bx	lr
  404be6:	bf00      	nop

00404be8 <__retarget_lock_close_recursive>:
  404be8:	4770      	bx	lr
  404bea:	bf00      	nop

00404bec <__retarget_lock_acquire_recursive>:
  404bec:	4770      	bx	lr
  404bee:	bf00      	nop

00404bf0 <__retarget_lock_release_recursive>:
  404bf0:	4770      	bx	lr
  404bf2:	bf00      	nop

00404bf4 <__swhatbuf_r>:
  404bf4:	b570      	push	{r4, r5, r6, lr}
  404bf6:	460c      	mov	r4, r1
  404bf8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  404bfc:	2900      	cmp	r1, #0
  404bfe:	b090      	sub	sp, #64	; 0x40
  404c00:	4615      	mov	r5, r2
  404c02:	461e      	mov	r6, r3
  404c04:	db14      	blt.n	404c30 <__swhatbuf_r+0x3c>
  404c06:	aa01      	add	r2, sp, #4
  404c08:	f001 f942 	bl	405e90 <_fstat_r>
  404c0c:	2800      	cmp	r0, #0
  404c0e:	db0f      	blt.n	404c30 <__swhatbuf_r+0x3c>
  404c10:	9a02      	ldr	r2, [sp, #8]
  404c12:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  404c16:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
  404c1a:	fab2 f282 	clz	r2, r2
  404c1e:	0952      	lsrs	r2, r2, #5
  404c20:	f44f 6380 	mov.w	r3, #1024	; 0x400
  404c24:	f44f 6000 	mov.w	r0, #2048	; 0x800
  404c28:	6032      	str	r2, [r6, #0]
  404c2a:	602b      	str	r3, [r5, #0]
  404c2c:	b010      	add	sp, #64	; 0x40
  404c2e:	bd70      	pop	{r4, r5, r6, pc}
  404c30:	89a2      	ldrh	r2, [r4, #12]
  404c32:	2300      	movs	r3, #0
  404c34:	f012 0080 	ands.w	r0, r2, #128	; 0x80
  404c38:	6033      	str	r3, [r6, #0]
  404c3a:	d004      	beq.n	404c46 <__swhatbuf_r+0x52>
  404c3c:	2240      	movs	r2, #64	; 0x40
  404c3e:	4618      	mov	r0, r3
  404c40:	602a      	str	r2, [r5, #0]
  404c42:	b010      	add	sp, #64	; 0x40
  404c44:	bd70      	pop	{r4, r5, r6, pc}
  404c46:	f44f 6380 	mov.w	r3, #1024	; 0x400
  404c4a:	602b      	str	r3, [r5, #0]
  404c4c:	b010      	add	sp, #64	; 0x40
  404c4e:	bd70      	pop	{r4, r5, r6, pc}

00404c50 <malloc>:
  404c50:	4b02      	ldr	r3, [pc, #8]	; (404c5c <malloc+0xc>)
  404c52:	4601      	mov	r1, r0
  404c54:	6818      	ldr	r0, [r3, #0]
  404c56:	f000 b803 	b.w	404c60 <_malloc_r>
  404c5a:	bf00      	nop
  404c5c:	20400024 	.word	0x20400024

00404c60 <_malloc_r>:
  404c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404c64:	f101 060b 	add.w	r6, r1, #11
  404c68:	2e16      	cmp	r6, #22
  404c6a:	b083      	sub	sp, #12
  404c6c:	4605      	mov	r5, r0
  404c6e:	f240 809e 	bls.w	404dae <_malloc_r+0x14e>
  404c72:	f036 0607 	bics.w	r6, r6, #7
  404c76:	f100 80bd 	bmi.w	404df4 <_malloc_r+0x194>
  404c7a:	42b1      	cmp	r1, r6
  404c7c:	f200 80ba 	bhi.w	404df4 <_malloc_r+0x194>
  404c80:	f000 fb88 	bl	405394 <__malloc_lock>
  404c84:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  404c88:	f0c0 8293 	bcc.w	4051b2 <_malloc_r+0x552>
  404c8c:	0a73      	lsrs	r3, r6, #9
  404c8e:	f000 80b8 	beq.w	404e02 <_malloc_r+0x1a2>
  404c92:	2b04      	cmp	r3, #4
  404c94:	f200 8179 	bhi.w	404f8a <_malloc_r+0x32a>
  404c98:	09b3      	lsrs	r3, r6, #6
  404c9a:	f103 0039 	add.w	r0, r3, #57	; 0x39
  404c9e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  404ca2:	00c3      	lsls	r3, r0, #3
  404ca4:	4fbf      	ldr	r7, [pc, #764]	; (404fa4 <_malloc_r+0x344>)
  404ca6:	443b      	add	r3, r7
  404ca8:	f1a3 0108 	sub.w	r1, r3, #8
  404cac:	685c      	ldr	r4, [r3, #4]
  404cae:	42a1      	cmp	r1, r4
  404cb0:	d106      	bne.n	404cc0 <_malloc_r+0x60>
  404cb2:	e00c      	b.n	404cce <_malloc_r+0x6e>
  404cb4:	2a00      	cmp	r2, #0
  404cb6:	f280 80aa 	bge.w	404e0e <_malloc_r+0x1ae>
  404cba:	68e4      	ldr	r4, [r4, #12]
  404cbc:	42a1      	cmp	r1, r4
  404cbe:	d006      	beq.n	404cce <_malloc_r+0x6e>
  404cc0:	6863      	ldr	r3, [r4, #4]
  404cc2:	f023 0303 	bic.w	r3, r3, #3
  404cc6:	1b9a      	subs	r2, r3, r6
  404cc8:	2a0f      	cmp	r2, #15
  404cca:	ddf3      	ble.n	404cb4 <_malloc_r+0x54>
  404ccc:	4670      	mov	r0, lr
  404cce:	693c      	ldr	r4, [r7, #16]
  404cd0:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 404fb8 <_malloc_r+0x358>
  404cd4:	4574      	cmp	r4, lr
  404cd6:	f000 81ab 	beq.w	405030 <_malloc_r+0x3d0>
  404cda:	6863      	ldr	r3, [r4, #4]
  404cdc:	f023 0303 	bic.w	r3, r3, #3
  404ce0:	1b9a      	subs	r2, r3, r6
  404ce2:	2a0f      	cmp	r2, #15
  404ce4:	f300 8190 	bgt.w	405008 <_malloc_r+0x3a8>
  404ce8:	2a00      	cmp	r2, #0
  404cea:	f8c7 e014 	str.w	lr, [r7, #20]
  404cee:	f8c7 e010 	str.w	lr, [r7, #16]
  404cf2:	f280 809d 	bge.w	404e30 <_malloc_r+0x1d0>
  404cf6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404cfa:	f080 8161 	bcs.w	404fc0 <_malloc_r+0x360>
  404cfe:	08db      	lsrs	r3, r3, #3
  404d00:	f103 0c01 	add.w	ip, r3, #1
  404d04:	1099      	asrs	r1, r3, #2
  404d06:	687a      	ldr	r2, [r7, #4]
  404d08:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404d0c:	f8c4 8008 	str.w	r8, [r4, #8]
  404d10:	2301      	movs	r3, #1
  404d12:	408b      	lsls	r3, r1
  404d14:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404d18:	4313      	orrs	r3, r2
  404d1a:	3908      	subs	r1, #8
  404d1c:	60e1      	str	r1, [r4, #12]
  404d1e:	607b      	str	r3, [r7, #4]
  404d20:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404d24:	f8c8 400c 	str.w	r4, [r8, #12]
  404d28:	1082      	asrs	r2, r0, #2
  404d2a:	2401      	movs	r4, #1
  404d2c:	4094      	lsls	r4, r2
  404d2e:	429c      	cmp	r4, r3
  404d30:	f200 808b 	bhi.w	404e4a <_malloc_r+0x1ea>
  404d34:	421c      	tst	r4, r3
  404d36:	d106      	bne.n	404d46 <_malloc_r+0xe6>
  404d38:	f020 0003 	bic.w	r0, r0, #3
  404d3c:	0064      	lsls	r4, r4, #1
  404d3e:	421c      	tst	r4, r3
  404d40:	f100 0004 	add.w	r0, r0, #4
  404d44:	d0fa      	beq.n	404d3c <_malloc_r+0xdc>
  404d46:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404d4a:	46cc      	mov	ip, r9
  404d4c:	4680      	mov	r8, r0
  404d4e:	f8dc 300c 	ldr.w	r3, [ip, #12]
  404d52:	459c      	cmp	ip, r3
  404d54:	d107      	bne.n	404d66 <_malloc_r+0x106>
  404d56:	e16d      	b.n	405034 <_malloc_r+0x3d4>
  404d58:	2a00      	cmp	r2, #0
  404d5a:	f280 817b 	bge.w	405054 <_malloc_r+0x3f4>
  404d5e:	68db      	ldr	r3, [r3, #12]
  404d60:	459c      	cmp	ip, r3
  404d62:	f000 8167 	beq.w	405034 <_malloc_r+0x3d4>
  404d66:	6859      	ldr	r1, [r3, #4]
  404d68:	f021 0103 	bic.w	r1, r1, #3
  404d6c:	1b8a      	subs	r2, r1, r6
  404d6e:	2a0f      	cmp	r2, #15
  404d70:	ddf2      	ble.n	404d58 <_malloc_r+0xf8>
  404d72:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404d76:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404d7a:	9300      	str	r3, [sp, #0]
  404d7c:	199c      	adds	r4, r3, r6
  404d7e:	4628      	mov	r0, r5
  404d80:	f046 0601 	orr.w	r6, r6, #1
  404d84:	f042 0501 	orr.w	r5, r2, #1
  404d88:	605e      	str	r6, [r3, #4]
  404d8a:	f8c8 c00c 	str.w	ip, [r8, #12]
  404d8e:	f8cc 8008 	str.w	r8, [ip, #8]
  404d92:	617c      	str	r4, [r7, #20]
  404d94:	613c      	str	r4, [r7, #16]
  404d96:	f8c4 e00c 	str.w	lr, [r4, #12]
  404d9a:	f8c4 e008 	str.w	lr, [r4, #8]
  404d9e:	6065      	str	r5, [r4, #4]
  404da0:	505a      	str	r2, [r3, r1]
  404da2:	f000 fafd 	bl	4053a0 <__malloc_unlock>
  404da6:	9b00      	ldr	r3, [sp, #0]
  404da8:	f103 0408 	add.w	r4, r3, #8
  404dac:	e01e      	b.n	404dec <_malloc_r+0x18c>
  404dae:	2910      	cmp	r1, #16
  404db0:	d820      	bhi.n	404df4 <_malloc_r+0x194>
  404db2:	f000 faef 	bl	405394 <__malloc_lock>
  404db6:	2610      	movs	r6, #16
  404db8:	2318      	movs	r3, #24
  404dba:	2002      	movs	r0, #2
  404dbc:	4f79      	ldr	r7, [pc, #484]	; (404fa4 <_malloc_r+0x344>)
  404dbe:	443b      	add	r3, r7
  404dc0:	f1a3 0208 	sub.w	r2, r3, #8
  404dc4:	685c      	ldr	r4, [r3, #4]
  404dc6:	4294      	cmp	r4, r2
  404dc8:	f000 813d 	beq.w	405046 <_malloc_r+0x3e6>
  404dcc:	6863      	ldr	r3, [r4, #4]
  404dce:	68e1      	ldr	r1, [r4, #12]
  404dd0:	68a6      	ldr	r6, [r4, #8]
  404dd2:	f023 0303 	bic.w	r3, r3, #3
  404dd6:	4423      	add	r3, r4
  404dd8:	4628      	mov	r0, r5
  404dda:	685a      	ldr	r2, [r3, #4]
  404ddc:	60f1      	str	r1, [r6, #12]
  404dde:	f042 0201 	orr.w	r2, r2, #1
  404de2:	608e      	str	r6, [r1, #8]
  404de4:	605a      	str	r2, [r3, #4]
  404de6:	f000 fadb 	bl	4053a0 <__malloc_unlock>
  404dea:	3408      	adds	r4, #8
  404dec:	4620      	mov	r0, r4
  404dee:	b003      	add	sp, #12
  404df0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404df4:	2400      	movs	r4, #0
  404df6:	230c      	movs	r3, #12
  404df8:	4620      	mov	r0, r4
  404dfa:	602b      	str	r3, [r5, #0]
  404dfc:	b003      	add	sp, #12
  404dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e02:	2040      	movs	r0, #64	; 0x40
  404e04:	f44f 7300 	mov.w	r3, #512	; 0x200
  404e08:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404e0c:	e74a      	b.n	404ca4 <_malloc_r+0x44>
  404e0e:	4423      	add	r3, r4
  404e10:	68e1      	ldr	r1, [r4, #12]
  404e12:	685a      	ldr	r2, [r3, #4]
  404e14:	68a6      	ldr	r6, [r4, #8]
  404e16:	f042 0201 	orr.w	r2, r2, #1
  404e1a:	60f1      	str	r1, [r6, #12]
  404e1c:	4628      	mov	r0, r5
  404e1e:	608e      	str	r6, [r1, #8]
  404e20:	605a      	str	r2, [r3, #4]
  404e22:	f000 fabd 	bl	4053a0 <__malloc_unlock>
  404e26:	3408      	adds	r4, #8
  404e28:	4620      	mov	r0, r4
  404e2a:	b003      	add	sp, #12
  404e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e30:	4423      	add	r3, r4
  404e32:	4628      	mov	r0, r5
  404e34:	685a      	ldr	r2, [r3, #4]
  404e36:	f042 0201 	orr.w	r2, r2, #1
  404e3a:	605a      	str	r2, [r3, #4]
  404e3c:	f000 fab0 	bl	4053a0 <__malloc_unlock>
  404e40:	3408      	adds	r4, #8
  404e42:	4620      	mov	r0, r4
  404e44:	b003      	add	sp, #12
  404e46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e4a:	68bc      	ldr	r4, [r7, #8]
  404e4c:	6863      	ldr	r3, [r4, #4]
  404e4e:	f023 0803 	bic.w	r8, r3, #3
  404e52:	45b0      	cmp	r8, r6
  404e54:	d304      	bcc.n	404e60 <_malloc_r+0x200>
  404e56:	eba8 0306 	sub.w	r3, r8, r6
  404e5a:	2b0f      	cmp	r3, #15
  404e5c:	f300 8085 	bgt.w	404f6a <_malloc_r+0x30a>
  404e60:	f8df 9158 	ldr.w	r9, [pc, #344]	; 404fbc <_malloc_r+0x35c>
  404e64:	4b50      	ldr	r3, [pc, #320]	; (404fa8 <_malloc_r+0x348>)
  404e66:	f8d9 2000 	ldr.w	r2, [r9]
  404e6a:	681b      	ldr	r3, [r3, #0]
  404e6c:	3201      	adds	r2, #1
  404e6e:	4433      	add	r3, r6
  404e70:	eb04 0a08 	add.w	sl, r4, r8
  404e74:	f000 8155 	beq.w	405122 <_malloc_r+0x4c2>
  404e78:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404e7c:	330f      	adds	r3, #15
  404e7e:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404e82:	f02b 0b0f 	bic.w	fp, fp, #15
  404e86:	4659      	mov	r1, fp
  404e88:	4628      	mov	r0, r5
  404e8a:	f000 fd89 	bl	4059a0 <_sbrk_r>
  404e8e:	1c41      	adds	r1, r0, #1
  404e90:	4602      	mov	r2, r0
  404e92:	f000 80fc 	beq.w	40508e <_malloc_r+0x42e>
  404e96:	4582      	cmp	sl, r0
  404e98:	f200 80f7 	bhi.w	40508a <_malloc_r+0x42a>
  404e9c:	4b43      	ldr	r3, [pc, #268]	; (404fac <_malloc_r+0x34c>)
  404e9e:	6819      	ldr	r1, [r3, #0]
  404ea0:	4459      	add	r1, fp
  404ea2:	6019      	str	r1, [r3, #0]
  404ea4:	f000 814d 	beq.w	405142 <_malloc_r+0x4e2>
  404ea8:	f8d9 0000 	ldr.w	r0, [r9]
  404eac:	3001      	adds	r0, #1
  404eae:	bf1b      	ittet	ne
  404eb0:	eba2 0a0a 	subne.w	sl, r2, sl
  404eb4:	4451      	addne	r1, sl
  404eb6:	f8c9 2000 	streq.w	r2, [r9]
  404eba:	6019      	strne	r1, [r3, #0]
  404ebc:	f012 0107 	ands.w	r1, r2, #7
  404ec0:	f000 8115 	beq.w	4050ee <_malloc_r+0x48e>
  404ec4:	f1c1 0008 	rsb	r0, r1, #8
  404ec8:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  404ecc:	4402      	add	r2, r0
  404ece:	3108      	adds	r1, #8
  404ed0:	eb02 090b 	add.w	r9, r2, fp
  404ed4:	f3c9 090b 	ubfx	r9, r9, #0, #12
  404ed8:	eba1 0909 	sub.w	r9, r1, r9
  404edc:	4649      	mov	r1, r9
  404ede:	4628      	mov	r0, r5
  404ee0:	9301      	str	r3, [sp, #4]
  404ee2:	9200      	str	r2, [sp, #0]
  404ee4:	f000 fd5c 	bl	4059a0 <_sbrk_r>
  404ee8:	1c43      	adds	r3, r0, #1
  404eea:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404eee:	f000 8143 	beq.w	405178 <_malloc_r+0x518>
  404ef2:	1a80      	subs	r0, r0, r2
  404ef4:	4448      	add	r0, r9
  404ef6:	f040 0001 	orr.w	r0, r0, #1
  404efa:	6819      	ldr	r1, [r3, #0]
  404efc:	60ba      	str	r2, [r7, #8]
  404efe:	4449      	add	r1, r9
  404f00:	42bc      	cmp	r4, r7
  404f02:	6050      	str	r0, [r2, #4]
  404f04:	6019      	str	r1, [r3, #0]
  404f06:	d017      	beq.n	404f38 <_malloc_r+0x2d8>
  404f08:	f1b8 0f0f 	cmp.w	r8, #15
  404f0c:	f240 80fb 	bls.w	405106 <_malloc_r+0x4a6>
  404f10:	6860      	ldr	r0, [r4, #4]
  404f12:	f1a8 020c 	sub.w	r2, r8, #12
  404f16:	f022 0207 	bic.w	r2, r2, #7
  404f1a:	eb04 0e02 	add.w	lr, r4, r2
  404f1e:	f000 0001 	and.w	r0, r0, #1
  404f22:	f04f 0c05 	mov.w	ip, #5
  404f26:	4310      	orrs	r0, r2
  404f28:	2a0f      	cmp	r2, #15
  404f2a:	6060      	str	r0, [r4, #4]
  404f2c:	f8ce c004 	str.w	ip, [lr, #4]
  404f30:	f8ce c008 	str.w	ip, [lr, #8]
  404f34:	f200 8117 	bhi.w	405166 <_malloc_r+0x506>
  404f38:	4b1d      	ldr	r3, [pc, #116]	; (404fb0 <_malloc_r+0x350>)
  404f3a:	68bc      	ldr	r4, [r7, #8]
  404f3c:	681a      	ldr	r2, [r3, #0]
  404f3e:	4291      	cmp	r1, r2
  404f40:	bf88      	it	hi
  404f42:	6019      	strhi	r1, [r3, #0]
  404f44:	4b1b      	ldr	r3, [pc, #108]	; (404fb4 <_malloc_r+0x354>)
  404f46:	681a      	ldr	r2, [r3, #0]
  404f48:	4291      	cmp	r1, r2
  404f4a:	6862      	ldr	r2, [r4, #4]
  404f4c:	bf88      	it	hi
  404f4e:	6019      	strhi	r1, [r3, #0]
  404f50:	f022 0203 	bic.w	r2, r2, #3
  404f54:	4296      	cmp	r6, r2
  404f56:	eba2 0306 	sub.w	r3, r2, r6
  404f5a:	d801      	bhi.n	404f60 <_malloc_r+0x300>
  404f5c:	2b0f      	cmp	r3, #15
  404f5e:	dc04      	bgt.n	404f6a <_malloc_r+0x30a>
  404f60:	4628      	mov	r0, r5
  404f62:	f000 fa1d 	bl	4053a0 <__malloc_unlock>
  404f66:	2400      	movs	r4, #0
  404f68:	e740      	b.n	404dec <_malloc_r+0x18c>
  404f6a:	19a2      	adds	r2, r4, r6
  404f6c:	f043 0301 	orr.w	r3, r3, #1
  404f70:	f046 0601 	orr.w	r6, r6, #1
  404f74:	6066      	str	r6, [r4, #4]
  404f76:	4628      	mov	r0, r5
  404f78:	60ba      	str	r2, [r7, #8]
  404f7a:	6053      	str	r3, [r2, #4]
  404f7c:	f000 fa10 	bl	4053a0 <__malloc_unlock>
  404f80:	3408      	adds	r4, #8
  404f82:	4620      	mov	r0, r4
  404f84:	b003      	add	sp, #12
  404f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404f8a:	2b14      	cmp	r3, #20
  404f8c:	d971      	bls.n	405072 <_malloc_r+0x412>
  404f8e:	2b54      	cmp	r3, #84	; 0x54
  404f90:	f200 80a3 	bhi.w	4050da <_malloc_r+0x47a>
  404f94:	0b33      	lsrs	r3, r6, #12
  404f96:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404f9a:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  404f9e:	00c3      	lsls	r3, r0, #3
  404fa0:	e680      	b.n	404ca4 <_malloc_r+0x44>
  404fa2:	bf00      	nop
  404fa4:	20400454 	.word	0x20400454
  404fa8:	20400ca0 	.word	0x20400ca0
  404fac:	20400c70 	.word	0x20400c70
  404fb0:	20400c98 	.word	0x20400c98
  404fb4:	20400c9c 	.word	0x20400c9c
  404fb8:	2040045c 	.word	0x2040045c
  404fbc:	2040085c 	.word	0x2040085c
  404fc0:	0a5a      	lsrs	r2, r3, #9
  404fc2:	2a04      	cmp	r2, #4
  404fc4:	d95b      	bls.n	40507e <_malloc_r+0x41e>
  404fc6:	2a14      	cmp	r2, #20
  404fc8:	f200 80ae 	bhi.w	405128 <_malloc_r+0x4c8>
  404fcc:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  404fd0:	00c9      	lsls	r1, r1, #3
  404fd2:	325b      	adds	r2, #91	; 0x5b
  404fd4:	eb07 0c01 	add.w	ip, r7, r1
  404fd8:	5879      	ldr	r1, [r7, r1]
  404fda:	f1ac 0c08 	sub.w	ip, ip, #8
  404fde:	458c      	cmp	ip, r1
  404fe0:	f000 8088 	beq.w	4050f4 <_malloc_r+0x494>
  404fe4:	684a      	ldr	r2, [r1, #4]
  404fe6:	f022 0203 	bic.w	r2, r2, #3
  404fea:	4293      	cmp	r3, r2
  404fec:	d273      	bcs.n	4050d6 <_malloc_r+0x476>
  404fee:	6889      	ldr	r1, [r1, #8]
  404ff0:	458c      	cmp	ip, r1
  404ff2:	d1f7      	bne.n	404fe4 <_malloc_r+0x384>
  404ff4:	f8dc 200c 	ldr.w	r2, [ip, #12]
  404ff8:	687b      	ldr	r3, [r7, #4]
  404ffa:	60e2      	str	r2, [r4, #12]
  404ffc:	f8c4 c008 	str.w	ip, [r4, #8]
  405000:	6094      	str	r4, [r2, #8]
  405002:	f8cc 400c 	str.w	r4, [ip, #12]
  405006:	e68f      	b.n	404d28 <_malloc_r+0xc8>
  405008:	19a1      	adds	r1, r4, r6
  40500a:	f046 0c01 	orr.w	ip, r6, #1
  40500e:	f042 0601 	orr.w	r6, r2, #1
  405012:	f8c4 c004 	str.w	ip, [r4, #4]
  405016:	4628      	mov	r0, r5
  405018:	6179      	str	r1, [r7, #20]
  40501a:	6139      	str	r1, [r7, #16]
  40501c:	f8c1 e00c 	str.w	lr, [r1, #12]
  405020:	f8c1 e008 	str.w	lr, [r1, #8]
  405024:	604e      	str	r6, [r1, #4]
  405026:	50e2      	str	r2, [r4, r3]
  405028:	f000 f9ba 	bl	4053a0 <__malloc_unlock>
  40502c:	3408      	adds	r4, #8
  40502e:	e6dd      	b.n	404dec <_malloc_r+0x18c>
  405030:	687b      	ldr	r3, [r7, #4]
  405032:	e679      	b.n	404d28 <_malloc_r+0xc8>
  405034:	f108 0801 	add.w	r8, r8, #1
  405038:	f018 0f03 	tst.w	r8, #3
  40503c:	f10c 0c08 	add.w	ip, ip, #8
  405040:	f47f ae85 	bne.w	404d4e <_malloc_r+0xee>
  405044:	e02d      	b.n	4050a2 <_malloc_r+0x442>
  405046:	68dc      	ldr	r4, [r3, #12]
  405048:	42a3      	cmp	r3, r4
  40504a:	bf08      	it	eq
  40504c:	3002      	addeq	r0, #2
  40504e:	f43f ae3e 	beq.w	404cce <_malloc_r+0x6e>
  405052:	e6bb      	b.n	404dcc <_malloc_r+0x16c>
  405054:	4419      	add	r1, r3
  405056:	461c      	mov	r4, r3
  405058:	684a      	ldr	r2, [r1, #4]
  40505a:	68db      	ldr	r3, [r3, #12]
  40505c:	f854 6f08 	ldr.w	r6, [r4, #8]!
  405060:	f042 0201 	orr.w	r2, r2, #1
  405064:	604a      	str	r2, [r1, #4]
  405066:	4628      	mov	r0, r5
  405068:	60f3      	str	r3, [r6, #12]
  40506a:	609e      	str	r6, [r3, #8]
  40506c:	f000 f998 	bl	4053a0 <__malloc_unlock>
  405070:	e6bc      	b.n	404dec <_malloc_r+0x18c>
  405072:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  405076:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40507a:	00c3      	lsls	r3, r0, #3
  40507c:	e612      	b.n	404ca4 <_malloc_r+0x44>
  40507e:	099a      	lsrs	r2, r3, #6
  405080:	f102 0139 	add.w	r1, r2, #57	; 0x39
  405084:	00c9      	lsls	r1, r1, #3
  405086:	3238      	adds	r2, #56	; 0x38
  405088:	e7a4      	b.n	404fd4 <_malloc_r+0x374>
  40508a:	42bc      	cmp	r4, r7
  40508c:	d054      	beq.n	405138 <_malloc_r+0x4d8>
  40508e:	68bc      	ldr	r4, [r7, #8]
  405090:	6862      	ldr	r2, [r4, #4]
  405092:	f022 0203 	bic.w	r2, r2, #3
  405096:	e75d      	b.n	404f54 <_malloc_r+0x2f4>
  405098:	f859 3908 	ldr.w	r3, [r9], #-8
  40509c:	4599      	cmp	r9, r3
  40509e:	f040 8086 	bne.w	4051ae <_malloc_r+0x54e>
  4050a2:	f010 0f03 	tst.w	r0, #3
  4050a6:	f100 30ff 	add.w	r0, r0, #4294967295
  4050aa:	d1f5      	bne.n	405098 <_malloc_r+0x438>
  4050ac:	687b      	ldr	r3, [r7, #4]
  4050ae:	ea23 0304 	bic.w	r3, r3, r4
  4050b2:	607b      	str	r3, [r7, #4]
  4050b4:	0064      	lsls	r4, r4, #1
  4050b6:	429c      	cmp	r4, r3
  4050b8:	f63f aec7 	bhi.w	404e4a <_malloc_r+0x1ea>
  4050bc:	2c00      	cmp	r4, #0
  4050be:	f43f aec4 	beq.w	404e4a <_malloc_r+0x1ea>
  4050c2:	421c      	tst	r4, r3
  4050c4:	4640      	mov	r0, r8
  4050c6:	f47f ae3e 	bne.w	404d46 <_malloc_r+0xe6>
  4050ca:	0064      	lsls	r4, r4, #1
  4050cc:	421c      	tst	r4, r3
  4050ce:	f100 0004 	add.w	r0, r0, #4
  4050d2:	d0fa      	beq.n	4050ca <_malloc_r+0x46a>
  4050d4:	e637      	b.n	404d46 <_malloc_r+0xe6>
  4050d6:	468c      	mov	ip, r1
  4050d8:	e78c      	b.n	404ff4 <_malloc_r+0x394>
  4050da:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4050de:	d815      	bhi.n	40510c <_malloc_r+0x4ac>
  4050e0:	0bf3      	lsrs	r3, r6, #15
  4050e2:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4050e6:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4050ea:	00c3      	lsls	r3, r0, #3
  4050ec:	e5da      	b.n	404ca4 <_malloc_r+0x44>
  4050ee:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4050f2:	e6ed      	b.n	404ed0 <_malloc_r+0x270>
  4050f4:	687b      	ldr	r3, [r7, #4]
  4050f6:	1092      	asrs	r2, r2, #2
  4050f8:	2101      	movs	r1, #1
  4050fa:	fa01 f202 	lsl.w	r2, r1, r2
  4050fe:	4313      	orrs	r3, r2
  405100:	607b      	str	r3, [r7, #4]
  405102:	4662      	mov	r2, ip
  405104:	e779      	b.n	404ffa <_malloc_r+0x39a>
  405106:	2301      	movs	r3, #1
  405108:	6053      	str	r3, [r2, #4]
  40510a:	e729      	b.n	404f60 <_malloc_r+0x300>
  40510c:	f240 5254 	movw	r2, #1364	; 0x554
  405110:	4293      	cmp	r3, r2
  405112:	d822      	bhi.n	40515a <_malloc_r+0x4fa>
  405114:	0cb3      	lsrs	r3, r6, #18
  405116:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40511a:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40511e:	00c3      	lsls	r3, r0, #3
  405120:	e5c0      	b.n	404ca4 <_malloc_r+0x44>
  405122:	f103 0b10 	add.w	fp, r3, #16
  405126:	e6ae      	b.n	404e86 <_malloc_r+0x226>
  405128:	2a54      	cmp	r2, #84	; 0x54
  40512a:	d829      	bhi.n	405180 <_malloc_r+0x520>
  40512c:	0b1a      	lsrs	r2, r3, #12
  40512e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  405132:	00c9      	lsls	r1, r1, #3
  405134:	326e      	adds	r2, #110	; 0x6e
  405136:	e74d      	b.n	404fd4 <_malloc_r+0x374>
  405138:	4b20      	ldr	r3, [pc, #128]	; (4051bc <_malloc_r+0x55c>)
  40513a:	6819      	ldr	r1, [r3, #0]
  40513c:	4459      	add	r1, fp
  40513e:	6019      	str	r1, [r3, #0]
  405140:	e6b2      	b.n	404ea8 <_malloc_r+0x248>
  405142:	f3ca 000b 	ubfx	r0, sl, #0, #12
  405146:	2800      	cmp	r0, #0
  405148:	f47f aeae 	bne.w	404ea8 <_malloc_r+0x248>
  40514c:	eb08 030b 	add.w	r3, r8, fp
  405150:	68ba      	ldr	r2, [r7, #8]
  405152:	f043 0301 	orr.w	r3, r3, #1
  405156:	6053      	str	r3, [r2, #4]
  405158:	e6ee      	b.n	404f38 <_malloc_r+0x2d8>
  40515a:	207f      	movs	r0, #127	; 0x7f
  40515c:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  405160:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  405164:	e59e      	b.n	404ca4 <_malloc_r+0x44>
  405166:	f104 0108 	add.w	r1, r4, #8
  40516a:	4628      	mov	r0, r5
  40516c:	9300      	str	r3, [sp, #0]
  40516e:	f7ff fc1b 	bl	4049a8 <_free_r>
  405172:	9b00      	ldr	r3, [sp, #0]
  405174:	6819      	ldr	r1, [r3, #0]
  405176:	e6df      	b.n	404f38 <_malloc_r+0x2d8>
  405178:	2001      	movs	r0, #1
  40517a:	f04f 0900 	mov.w	r9, #0
  40517e:	e6bc      	b.n	404efa <_malloc_r+0x29a>
  405180:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405184:	d805      	bhi.n	405192 <_malloc_r+0x532>
  405186:	0bda      	lsrs	r2, r3, #15
  405188:	f102 0178 	add.w	r1, r2, #120	; 0x78
  40518c:	00c9      	lsls	r1, r1, #3
  40518e:	3277      	adds	r2, #119	; 0x77
  405190:	e720      	b.n	404fd4 <_malloc_r+0x374>
  405192:	f240 5154 	movw	r1, #1364	; 0x554
  405196:	428a      	cmp	r2, r1
  405198:	d805      	bhi.n	4051a6 <_malloc_r+0x546>
  40519a:	0c9a      	lsrs	r2, r3, #18
  40519c:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4051a0:	00c9      	lsls	r1, r1, #3
  4051a2:	327c      	adds	r2, #124	; 0x7c
  4051a4:	e716      	b.n	404fd4 <_malloc_r+0x374>
  4051a6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4051aa:	227e      	movs	r2, #126	; 0x7e
  4051ac:	e712      	b.n	404fd4 <_malloc_r+0x374>
  4051ae:	687b      	ldr	r3, [r7, #4]
  4051b0:	e780      	b.n	4050b4 <_malloc_r+0x454>
  4051b2:	08f0      	lsrs	r0, r6, #3
  4051b4:	f106 0308 	add.w	r3, r6, #8
  4051b8:	e600      	b.n	404dbc <_malloc_r+0x15c>
  4051ba:	bf00      	nop
  4051bc:	20400c70 	.word	0x20400c70

004051c0 <memchr>:
  4051c0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4051c4:	2a10      	cmp	r2, #16
  4051c6:	db2b      	blt.n	405220 <memchr+0x60>
  4051c8:	f010 0f07 	tst.w	r0, #7
  4051cc:	d008      	beq.n	4051e0 <memchr+0x20>
  4051ce:	f810 3b01 	ldrb.w	r3, [r0], #1
  4051d2:	3a01      	subs	r2, #1
  4051d4:	428b      	cmp	r3, r1
  4051d6:	d02d      	beq.n	405234 <memchr+0x74>
  4051d8:	f010 0f07 	tst.w	r0, #7
  4051dc:	b342      	cbz	r2, 405230 <memchr+0x70>
  4051de:	d1f6      	bne.n	4051ce <memchr+0xe>
  4051e0:	b4f0      	push	{r4, r5, r6, r7}
  4051e2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4051e6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4051ea:	f022 0407 	bic.w	r4, r2, #7
  4051ee:	f07f 0700 	mvns.w	r7, #0
  4051f2:	2300      	movs	r3, #0
  4051f4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4051f8:	3c08      	subs	r4, #8
  4051fa:	ea85 0501 	eor.w	r5, r5, r1
  4051fe:	ea86 0601 	eor.w	r6, r6, r1
  405202:	fa85 f547 	uadd8	r5, r5, r7
  405206:	faa3 f587 	sel	r5, r3, r7
  40520a:	fa86 f647 	uadd8	r6, r6, r7
  40520e:	faa5 f687 	sel	r6, r5, r7
  405212:	b98e      	cbnz	r6, 405238 <memchr+0x78>
  405214:	d1ee      	bne.n	4051f4 <memchr+0x34>
  405216:	bcf0      	pop	{r4, r5, r6, r7}
  405218:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40521c:	f002 0207 	and.w	r2, r2, #7
  405220:	b132      	cbz	r2, 405230 <memchr+0x70>
  405222:	f810 3b01 	ldrb.w	r3, [r0], #1
  405226:	3a01      	subs	r2, #1
  405228:	ea83 0301 	eor.w	r3, r3, r1
  40522c:	b113      	cbz	r3, 405234 <memchr+0x74>
  40522e:	d1f8      	bne.n	405222 <memchr+0x62>
  405230:	2000      	movs	r0, #0
  405232:	4770      	bx	lr
  405234:	3801      	subs	r0, #1
  405236:	4770      	bx	lr
  405238:	2d00      	cmp	r5, #0
  40523a:	bf06      	itte	eq
  40523c:	4635      	moveq	r5, r6
  40523e:	3803      	subeq	r0, #3
  405240:	3807      	subne	r0, #7
  405242:	f015 0f01 	tst.w	r5, #1
  405246:	d107      	bne.n	405258 <memchr+0x98>
  405248:	3001      	adds	r0, #1
  40524a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40524e:	bf02      	ittt	eq
  405250:	3001      	addeq	r0, #1
  405252:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  405256:	3001      	addeq	r0, #1
  405258:	bcf0      	pop	{r4, r5, r6, r7}
  40525a:	3801      	subs	r0, #1
  40525c:	4770      	bx	lr
  40525e:	bf00      	nop

00405260 <memcpy>:
  405260:	4684      	mov	ip, r0
  405262:	ea41 0300 	orr.w	r3, r1, r0
  405266:	f013 0303 	ands.w	r3, r3, #3
  40526a:	d16d      	bne.n	405348 <memcpy+0xe8>
  40526c:	3a40      	subs	r2, #64	; 0x40
  40526e:	d341      	bcc.n	4052f4 <memcpy+0x94>
  405270:	f851 3b04 	ldr.w	r3, [r1], #4
  405274:	f840 3b04 	str.w	r3, [r0], #4
  405278:	f851 3b04 	ldr.w	r3, [r1], #4
  40527c:	f840 3b04 	str.w	r3, [r0], #4
  405280:	f851 3b04 	ldr.w	r3, [r1], #4
  405284:	f840 3b04 	str.w	r3, [r0], #4
  405288:	f851 3b04 	ldr.w	r3, [r1], #4
  40528c:	f840 3b04 	str.w	r3, [r0], #4
  405290:	f851 3b04 	ldr.w	r3, [r1], #4
  405294:	f840 3b04 	str.w	r3, [r0], #4
  405298:	f851 3b04 	ldr.w	r3, [r1], #4
  40529c:	f840 3b04 	str.w	r3, [r0], #4
  4052a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4052a4:	f840 3b04 	str.w	r3, [r0], #4
  4052a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4052ac:	f840 3b04 	str.w	r3, [r0], #4
  4052b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4052b4:	f840 3b04 	str.w	r3, [r0], #4
  4052b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4052bc:	f840 3b04 	str.w	r3, [r0], #4
  4052c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4052c4:	f840 3b04 	str.w	r3, [r0], #4
  4052c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4052cc:	f840 3b04 	str.w	r3, [r0], #4
  4052d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4052d4:	f840 3b04 	str.w	r3, [r0], #4
  4052d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4052dc:	f840 3b04 	str.w	r3, [r0], #4
  4052e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4052e4:	f840 3b04 	str.w	r3, [r0], #4
  4052e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4052ec:	f840 3b04 	str.w	r3, [r0], #4
  4052f0:	3a40      	subs	r2, #64	; 0x40
  4052f2:	d2bd      	bcs.n	405270 <memcpy+0x10>
  4052f4:	3230      	adds	r2, #48	; 0x30
  4052f6:	d311      	bcc.n	40531c <memcpy+0xbc>
  4052f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4052fc:	f840 3b04 	str.w	r3, [r0], #4
  405300:	f851 3b04 	ldr.w	r3, [r1], #4
  405304:	f840 3b04 	str.w	r3, [r0], #4
  405308:	f851 3b04 	ldr.w	r3, [r1], #4
  40530c:	f840 3b04 	str.w	r3, [r0], #4
  405310:	f851 3b04 	ldr.w	r3, [r1], #4
  405314:	f840 3b04 	str.w	r3, [r0], #4
  405318:	3a10      	subs	r2, #16
  40531a:	d2ed      	bcs.n	4052f8 <memcpy+0x98>
  40531c:	320c      	adds	r2, #12
  40531e:	d305      	bcc.n	40532c <memcpy+0xcc>
  405320:	f851 3b04 	ldr.w	r3, [r1], #4
  405324:	f840 3b04 	str.w	r3, [r0], #4
  405328:	3a04      	subs	r2, #4
  40532a:	d2f9      	bcs.n	405320 <memcpy+0xc0>
  40532c:	3204      	adds	r2, #4
  40532e:	d008      	beq.n	405342 <memcpy+0xe2>
  405330:	07d2      	lsls	r2, r2, #31
  405332:	bf1c      	itt	ne
  405334:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405338:	f800 3b01 	strbne.w	r3, [r0], #1
  40533c:	d301      	bcc.n	405342 <memcpy+0xe2>
  40533e:	880b      	ldrh	r3, [r1, #0]
  405340:	8003      	strh	r3, [r0, #0]
  405342:	4660      	mov	r0, ip
  405344:	4770      	bx	lr
  405346:	bf00      	nop
  405348:	2a08      	cmp	r2, #8
  40534a:	d313      	bcc.n	405374 <memcpy+0x114>
  40534c:	078b      	lsls	r3, r1, #30
  40534e:	d08d      	beq.n	40526c <memcpy+0xc>
  405350:	f010 0303 	ands.w	r3, r0, #3
  405354:	d08a      	beq.n	40526c <memcpy+0xc>
  405356:	f1c3 0304 	rsb	r3, r3, #4
  40535a:	1ad2      	subs	r2, r2, r3
  40535c:	07db      	lsls	r3, r3, #31
  40535e:	bf1c      	itt	ne
  405360:	f811 3b01 	ldrbne.w	r3, [r1], #1
  405364:	f800 3b01 	strbne.w	r3, [r0], #1
  405368:	d380      	bcc.n	40526c <memcpy+0xc>
  40536a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40536e:	f820 3b02 	strh.w	r3, [r0], #2
  405372:	e77b      	b.n	40526c <memcpy+0xc>
  405374:	3a04      	subs	r2, #4
  405376:	d3d9      	bcc.n	40532c <memcpy+0xcc>
  405378:	3a01      	subs	r2, #1
  40537a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40537e:	f800 3b01 	strb.w	r3, [r0], #1
  405382:	d2f9      	bcs.n	405378 <memcpy+0x118>
  405384:	780b      	ldrb	r3, [r1, #0]
  405386:	7003      	strb	r3, [r0, #0]
  405388:	784b      	ldrb	r3, [r1, #1]
  40538a:	7043      	strb	r3, [r0, #1]
  40538c:	788b      	ldrb	r3, [r1, #2]
  40538e:	7083      	strb	r3, [r0, #2]
  405390:	4660      	mov	r0, ip
  405392:	4770      	bx	lr

00405394 <__malloc_lock>:
  405394:	4801      	ldr	r0, [pc, #4]	; (40539c <__malloc_lock+0x8>)
  405396:	f7ff bc29 	b.w	404bec <__retarget_lock_acquire_recursive>
  40539a:	bf00      	nop
  40539c:	20400ce8 	.word	0x20400ce8

004053a0 <__malloc_unlock>:
  4053a0:	4801      	ldr	r0, [pc, #4]	; (4053a8 <__malloc_unlock+0x8>)
  4053a2:	f7ff bc25 	b.w	404bf0 <__retarget_lock_release_recursive>
  4053a6:	bf00      	nop
  4053a8:	20400ce8 	.word	0x20400ce8

004053ac <_Balloc>:
  4053ac:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4053ae:	b570      	push	{r4, r5, r6, lr}
  4053b0:	4605      	mov	r5, r0
  4053b2:	460c      	mov	r4, r1
  4053b4:	b14b      	cbz	r3, 4053ca <_Balloc+0x1e>
  4053b6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  4053ba:	b180      	cbz	r0, 4053de <_Balloc+0x32>
  4053bc:	6802      	ldr	r2, [r0, #0]
  4053be:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  4053c2:	2300      	movs	r3, #0
  4053c4:	6103      	str	r3, [r0, #16]
  4053c6:	60c3      	str	r3, [r0, #12]
  4053c8:	bd70      	pop	{r4, r5, r6, pc}
  4053ca:	2221      	movs	r2, #33	; 0x21
  4053cc:	2104      	movs	r1, #4
  4053ce:	f000 fcbb 	bl	405d48 <_calloc_r>
  4053d2:	64e8      	str	r0, [r5, #76]	; 0x4c
  4053d4:	4603      	mov	r3, r0
  4053d6:	2800      	cmp	r0, #0
  4053d8:	d1ed      	bne.n	4053b6 <_Balloc+0xa>
  4053da:	2000      	movs	r0, #0
  4053dc:	bd70      	pop	{r4, r5, r6, pc}
  4053de:	2101      	movs	r1, #1
  4053e0:	fa01 f604 	lsl.w	r6, r1, r4
  4053e4:	1d72      	adds	r2, r6, #5
  4053e6:	4628      	mov	r0, r5
  4053e8:	0092      	lsls	r2, r2, #2
  4053ea:	f000 fcad 	bl	405d48 <_calloc_r>
  4053ee:	2800      	cmp	r0, #0
  4053f0:	d0f3      	beq.n	4053da <_Balloc+0x2e>
  4053f2:	6044      	str	r4, [r0, #4]
  4053f4:	6086      	str	r6, [r0, #8]
  4053f6:	e7e4      	b.n	4053c2 <_Balloc+0x16>

004053f8 <_Bfree>:
  4053f8:	b131      	cbz	r1, 405408 <_Bfree+0x10>
  4053fa:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4053fc:	684a      	ldr	r2, [r1, #4]
  4053fe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  405402:	6008      	str	r0, [r1, #0]
  405404:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  405408:	4770      	bx	lr
  40540a:	bf00      	nop

0040540c <__multadd>:
  40540c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40540e:	690c      	ldr	r4, [r1, #16]
  405410:	b083      	sub	sp, #12
  405412:	460d      	mov	r5, r1
  405414:	4606      	mov	r6, r0
  405416:	f101 0e14 	add.w	lr, r1, #20
  40541a:	2700      	movs	r7, #0
  40541c:	f8de 0000 	ldr.w	r0, [lr]
  405420:	b281      	uxth	r1, r0
  405422:	fb02 3301 	mla	r3, r2, r1, r3
  405426:	0c01      	lsrs	r1, r0, #16
  405428:	0c18      	lsrs	r0, r3, #16
  40542a:	fb02 0101 	mla	r1, r2, r1, r0
  40542e:	b29b      	uxth	r3, r3
  405430:	3701      	adds	r7, #1
  405432:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  405436:	42bc      	cmp	r4, r7
  405438:	f84e 3b04 	str.w	r3, [lr], #4
  40543c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  405440:	dcec      	bgt.n	40541c <__multadd+0x10>
  405442:	b13b      	cbz	r3, 405454 <__multadd+0x48>
  405444:	68aa      	ldr	r2, [r5, #8]
  405446:	4294      	cmp	r4, r2
  405448:	da07      	bge.n	40545a <__multadd+0x4e>
  40544a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40544e:	3401      	adds	r4, #1
  405450:	6153      	str	r3, [r2, #20]
  405452:	612c      	str	r4, [r5, #16]
  405454:	4628      	mov	r0, r5
  405456:	b003      	add	sp, #12
  405458:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40545a:	6869      	ldr	r1, [r5, #4]
  40545c:	9301      	str	r3, [sp, #4]
  40545e:	3101      	adds	r1, #1
  405460:	4630      	mov	r0, r6
  405462:	f7ff ffa3 	bl	4053ac <_Balloc>
  405466:	692a      	ldr	r2, [r5, #16]
  405468:	3202      	adds	r2, #2
  40546a:	f105 010c 	add.w	r1, r5, #12
  40546e:	4607      	mov	r7, r0
  405470:	0092      	lsls	r2, r2, #2
  405472:	300c      	adds	r0, #12
  405474:	f7ff fef4 	bl	405260 <memcpy>
  405478:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40547a:	6869      	ldr	r1, [r5, #4]
  40547c:	9b01      	ldr	r3, [sp, #4]
  40547e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  405482:	6028      	str	r0, [r5, #0]
  405484:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  405488:	463d      	mov	r5, r7
  40548a:	e7de      	b.n	40544a <__multadd+0x3e>

0040548c <__hi0bits>:
  40548c:	0c02      	lsrs	r2, r0, #16
  40548e:	0412      	lsls	r2, r2, #16
  405490:	4603      	mov	r3, r0
  405492:	b9b2      	cbnz	r2, 4054c2 <__hi0bits+0x36>
  405494:	0403      	lsls	r3, r0, #16
  405496:	2010      	movs	r0, #16
  405498:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40549c:	bf04      	itt	eq
  40549e:	021b      	lsleq	r3, r3, #8
  4054a0:	3008      	addeq	r0, #8
  4054a2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  4054a6:	bf04      	itt	eq
  4054a8:	011b      	lsleq	r3, r3, #4
  4054aa:	3004      	addeq	r0, #4
  4054ac:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  4054b0:	bf04      	itt	eq
  4054b2:	009b      	lsleq	r3, r3, #2
  4054b4:	3002      	addeq	r0, #2
  4054b6:	2b00      	cmp	r3, #0
  4054b8:	db02      	blt.n	4054c0 <__hi0bits+0x34>
  4054ba:	005b      	lsls	r3, r3, #1
  4054bc:	d403      	bmi.n	4054c6 <__hi0bits+0x3a>
  4054be:	2020      	movs	r0, #32
  4054c0:	4770      	bx	lr
  4054c2:	2000      	movs	r0, #0
  4054c4:	e7e8      	b.n	405498 <__hi0bits+0xc>
  4054c6:	3001      	adds	r0, #1
  4054c8:	4770      	bx	lr
  4054ca:	bf00      	nop

004054cc <__lo0bits>:
  4054cc:	6803      	ldr	r3, [r0, #0]
  4054ce:	f013 0207 	ands.w	r2, r3, #7
  4054d2:	4601      	mov	r1, r0
  4054d4:	d007      	beq.n	4054e6 <__lo0bits+0x1a>
  4054d6:	07da      	lsls	r2, r3, #31
  4054d8:	d421      	bmi.n	40551e <__lo0bits+0x52>
  4054da:	0798      	lsls	r0, r3, #30
  4054dc:	d421      	bmi.n	405522 <__lo0bits+0x56>
  4054de:	089b      	lsrs	r3, r3, #2
  4054e0:	600b      	str	r3, [r1, #0]
  4054e2:	2002      	movs	r0, #2
  4054e4:	4770      	bx	lr
  4054e6:	b298      	uxth	r0, r3
  4054e8:	b198      	cbz	r0, 405512 <__lo0bits+0x46>
  4054ea:	4610      	mov	r0, r2
  4054ec:	f013 0fff 	tst.w	r3, #255	; 0xff
  4054f0:	bf04      	itt	eq
  4054f2:	0a1b      	lsreq	r3, r3, #8
  4054f4:	3008      	addeq	r0, #8
  4054f6:	071a      	lsls	r2, r3, #28
  4054f8:	bf04      	itt	eq
  4054fa:	091b      	lsreq	r3, r3, #4
  4054fc:	3004      	addeq	r0, #4
  4054fe:	079a      	lsls	r2, r3, #30
  405500:	bf04      	itt	eq
  405502:	089b      	lsreq	r3, r3, #2
  405504:	3002      	addeq	r0, #2
  405506:	07da      	lsls	r2, r3, #31
  405508:	d407      	bmi.n	40551a <__lo0bits+0x4e>
  40550a:	085b      	lsrs	r3, r3, #1
  40550c:	d104      	bne.n	405518 <__lo0bits+0x4c>
  40550e:	2020      	movs	r0, #32
  405510:	4770      	bx	lr
  405512:	0c1b      	lsrs	r3, r3, #16
  405514:	2010      	movs	r0, #16
  405516:	e7e9      	b.n	4054ec <__lo0bits+0x20>
  405518:	3001      	adds	r0, #1
  40551a:	600b      	str	r3, [r1, #0]
  40551c:	4770      	bx	lr
  40551e:	2000      	movs	r0, #0
  405520:	4770      	bx	lr
  405522:	085b      	lsrs	r3, r3, #1
  405524:	600b      	str	r3, [r1, #0]
  405526:	2001      	movs	r0, #1
  405528:	4770      	bx	lr
  40552a:	bf00      	nop

0040552c <__i2b>:
  40552c:	b510      	push	{r4, lr}
  40552e:	460c      	mov	r4, r1
  405530:	2101      	movs	r1, #1
  405532:	f7ff ff3b 	bl	4053ac <_Balloc>
  405536:	2201      	movs	r2, #1
  405538:	6144      	str	r4, [r0, #20]
  40553a:	6102      	str	r2, [r0, #16]
  40553c:	bd10      	pop	{r4, pc}
  40553e:	bf00      	nop

00405540 <__multiply>:
  405540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405544:	690c      	ldr	r4, [r1, #16]
  405546:	6915      	ldr	r5, [r2, #16]
  405548:	42ac      	cmp	r4, r5
  40554a:	b083      	sub	sp, #12
  40554c:	468b      	mov	fp, r1
  40554e:	4616      	mov	r6, r2
  405550:	da04      	bge.n	40555c <__multiply+0x1c>
  405552:	4622      	mov	r2, r4
  405554:	46b3      	mov	fp, r6
  405556:	462c      	mov	r4, r5
  405558:	460e      	mov	r6, r1
  40555a:	4615      	mov	r5, r2
  40555c:	f8db 3008 	ldr.w	r3, [fp, #8]
  405560:	f8db 1004 	ldr.w	r1, [fp, #4]
  405564:	eb04 0805 	add.w	r8, r4, r5
  405568:	4598      	cmp	r8, r3
  40556a:	bfc8      	it	gt
  40556c:	3101      	addgt	r1, #1
  40556e:	f7ff ff1d 	bl	4053ac <_Balloc>
  405572:	f100 0914 	add.w	r9, r0, #20
  405576:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40557a:	45d1      	cmp	r9, sl
  40557c:	9000      	str	r0, [sp, #0]
  40557e:	d205      	bcs.n	40558c <__multiply+0x4c>
  405580:	464b      	mov	r3, r9
  405582:	2100      	movs	r1, #0
  405584:	f843 1b04 	str.w	r1, [r3], #4
  405588:	459a      	cmp	sl, r3
  40558a:	d8fb      	bhi.n	405584 <__multiply+0x44>
  40558c:	f106 0c14 	add.w	ip, r6, #20
  405590:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  405594:	f10b 0b14 	add.w	fp, fp, #20
  405598:	459c      	cmp	ip, r3
  40559a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40559e:	d24c      	bcs.n	40563a <__multiply+0xfa>
  4055a0:	f8cd a004 	str.w	sl, [sp, #4]
  4055a4:	469a      	mov	sl, r3
  4055a6:	f8dc 5000 	ldr.w	r5, [ip]
  4055aa:	b2af      	uxth	r7, r5
  4055ac:	b1ef      	cbz	r7, 4055ea <__multiply+0xaa>
  4055ae:	2100      	movs	r1, #0
  4055b0:	464d      	mov	r5, r9
  4055b2:	465e      	mov	r6, fp
  4055b4:	460c      	mov	r4, r1
  4055b6:	f856 2b04 	ldr.w	r2, [r6], #4
  4055ba:	6828      	ldr	r0, [r5, #0]
  4055bc:	b293      	uxth	r3, r2
  4055be:	b281      	uxth	r1, r0
  4055c0:	fb07 1303 	mla	r3, r7, r3, r1
  4055c4:	0c12      	lsrs	r2, r2, #16
  4055c6:	0c01      	lsrs	r1, r0, #16
  4055c8:	4423      	add	r3, r4
  4055ca:	fb07 1102 	mla	r1, r7, r2, r1
  4055ce:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4055d2:	b29b      	uxth	r3, r3
  4055d4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4055d8:	45b6      	cmp	lr, r6
  4055da:	f845 3b04 	str.w	r3, [r5], #4
  4055de:	ea4f 4411 	mov.w	r4, r1, lsr #16
  4055e2:	d8e8      	bhi.n	4055b6 <__multiply+0x76>
  4055e4:	602c      	str	r4, [r5, #0]
  4055e6:	f8dc 5000 	ldr.w	r5, [ip]
  4055ea:	0c2d      	lsrs	r5, r5, #16
  4055ec:	d01d      	beq.n	40562a <__multiply+0xea>
  4055ee:	f8d9 3000 	ldr.w	r3, [r9]
  4055f2:	4648      	mov	r0, r9
  4055f4:	461c      	mov	r4, r3
  4055f6:	4659      	mov	r1, fp
  4055f8:	2200      	movs	r2, #0
  4055fa:	880e      	ldrh	r6, [r1, #0]
  4055fc:	0c24      	lsrs	r4, r4, #16
  4055fe:	fb05 4406 	mla	r4, r5, r6, r4
  405602:	4422      	add	r2, r4
  405604:	b29b      	uxth	r3, r3
  405606:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40560a:	f840 3b04 	str.w	r3, [r0], #4
  40560e:	f851 3b04 	ldr.w	r3, [r1], #4
  405612:	6804      	ldr	r4, [r0, #0]
  405614:	0c1b      	lsrs	r3, r3, #16
  405616:	b2a6      	uxth	r6, r4
  405618:	fb05 6303 	mla	r3, r5, r3, r6
  40561c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  405620:	458e      	cmp	lr, r1
  405622:	ea4f 4213 	mov.w	r2, r3, lsr #16
  405626:	d8e8      	bhi.n	4055fa <__multiply+0xba>
  405628:	6003      	str	r3, [r0, #0]
  40562a:	f10c 0c04 	add.w	ip, ip, #4
  40562e:	45e2      	cmp	sl, ip
  405630:	f109 0904 	add.w	r9, r9, #4
  405634:	d8b7      	bhi.n	4055a6 <__multiply+0x66>
  405636:	f8dd a004 	ldr.w	sl, [sp, #4]
  40563a:	f1b8 0f00 	cmp.w	r8, #0
  40563e:	dd0b      	ble.n	405658 <__multiply+0x118>
  405640:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  405644:	f1aa 0a04 	sub.w	sl, sl, #4
  405648:	b11b      	cbz	r3, 405652 <__multiply+0x112>
  40564a:	e005      	b.n	405658 <__multiply+0x118>
  40564c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  405650:	b913      	cbnz	r3, 405658 <__multiply+0x118>
  405652:	f1b8 0801 	subs.w	r8, r8, #1
  405656:	d1f9      	bne.n	40564c <__multiply+0x10c>
  405658:	9800      	ldr	r0, [sp, #0]
  40565a:	f8c0 8010 	str.w	r8, [r0, #16]
  40565e:	b003      	add	sp, #12
  405660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405664 <__pow5mult>:
  405664:	f012 0303 	ands.w	r3, r2, #3
  405668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40566c:	4614      	mov	r4, r2
  40566e:	4607      	mov	r7, r0
  405670:	d12e      	bne.n	4056d0 <__pow5mult+0x6c>
  405672:	460d      	mov	r5, r1
  405674:	10a4      	asrs	r4, r4, #2
  405676:	d01c      	beq.n	4056b2 <__pow5mult+0x4e>
  405678:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40567a:	b396      	cbz	r6, 4056e2 <__pow5mult+0x7e>
  40567c:	07e3      	lsls	r3, r4, #31
  40567e:	f04f 0800 	mov.w	r8, #0
  405682:	d406      	bmi.n	405692 <__pow5mult+0x2e>
  405684:	1064      	asrs	r4, r4, #1
  405686:	d014      	beq.n	4056b2 <__pow5mult+0x4e>
  405688:	6830      	ldr	r0, [r6, #0]
  40568a:	b1a8      	cbz	r0, 4056b8 <__pow5mult+0x54>
  40568c:	4606      	mov	r6, r0
  40568e:	07e3      	lsls	r3, r4, #31
  405690:	d5f8      	bpl.n	405684 <__pow5mult+0x20>
  405692:	4632      	mov	r2, r6
  405694:	4629      	mov	r1, r5
  405696:	4638      	mov	r0, r7
  405698:	f7ff ff52 	bl	405540 <__multiply>
  40569c:	b1b5      	cbz	r5, 4056cc <__pow5mult+0x68>
  40569e:	686a      	ldr	r2, [r5, #4]
  4056a0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  4056a2:	1064      	asrs	r4, r4, #1
  4056a4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4056a8:	6029      	str	r1, [r5, #0]
  4056aa:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  4056ae:	4605      	mov	r5, r0
  4056b0:	d1ea      	bne.n	405688 <__pow5mult+0x24>
  4056b2:	4628      	mov	r0, r5
  4056b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4056b8:	4632      	mov	r2, r6
  4056ba:	4631      	mov	r1, r6
  4056bc:	4638      	mov	r0, r7
  4056be:	f7ff ff3f 	bl	405540 <__multiply>
  4056c2:	6030      	str	r0, [r6, #0]
  4056c4:	f8c0 8000 	str.w	r8, [r0]
  4056c8:	4606      	mov	r6, r0
  4056ca:	e7e0      	b.n	40568e <__pow5mult+0x2a>
  4056cc:	4605      	mov	r5, r0
  4056ce:	e7d9      	b.n	405684 <__pow5mult+0x20>
  4056d0:	1e5a      	subs	r2, r3, #1
  4056d2:	4d0b      	ldr	r5, [pc, #44]	; (405700 <__pow5mult+0x9c>)
  4056d4:	2300      	movs	r3, #0
  4056d6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4056da:	f7ff fe97 	bl	40540c <__multadd>
  4056de:	4605      	mov	r5, r0
  4056e0:	e7c8      	b.n	405674 <__pow5mult+0x10>
  4056e2:	2101      	movs	r1, #1
  4056e4:	4638      	mov	r0, r7
  4056e6:	f7ff fe61 	bl	4053ac <_Balloc>
  4056ea:	f240 2171 	movw	r1, #625	; 0x271
  4056ee:	2201      	movs	r2, #1
  4056f0:	2300      	movs	r3, #0
  4056f2:	6141      	str	r1, [r0, #20]
  4056f4:	6102      	str	r2, [r0, #16]
  4056f6:	4606      	mov	r6, r0
  4056f8:	64b8      	str	r0, [r7, #72]	; 0x48
  4056fa:	6003      	str	r3, [r0, #0]
  4056fc:	e7be      	b.n	40567c <__pow5mult+0x18>
  4056fe:	bf00      	nop
  405700:	00407370 	.word	0x00407370

00405704 <__lshift>:
  405704:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405708:	4691      	mov	r9, r2
  40570a:	690a      	ldr	r2, [r1, #16]
  40570c:	688b      	ldr	r3, [r1, #8]
  40570e:	ea4f 1469 	mov.w	r4, r9, asr #5
  405712:	eb04 0802 	add.w	r8, r4, r2
  405716:	f108 0501 	add.w	r5, r8, #1
  40571a:	429d      	cmp	r5, r3
  40571c:	460e      	mov	r6, r1
  40571e:	4607      	mov	r7, r0
  405720:	6849      	ldr	r1, [r1, #4]
  405722:	dd04      	ble.n	40572e <__lshift+0x2a>
  405724:	005b      	lsls	r3, r3, #1
  405726:	429d      	cmp	r5, r3
  405728:	f101 0101 	add.w	r1, r1, #1
  40572c:	dcfa      	bgt.n	405724 <__lshift+0x20>
  40572e:	4638      	mov	r0, r7
  405730:	f7ff fe3c 	bl	4053ac <_Balloc>
  405734:	2c00      	cmp	r4, #0
  405736:	f100 0314 	add.w	r3, r0, #20
  40573a:	dd06      	ble.n	40574a <__lshift+0x46>
  40573c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  405740:	2100      	movs	r1, #0
  405742:	f843 1b04 	str.w	r1, [r3], #4
  405746:	429a      	cmp	r2, r3
  405748:	d1fb      	bne.n	405742 <__lshift+0x3e>
  40574a:	6934      	ldr	r4, [r6, #16]
  40574c:	f106 0114 	add.w	r1, r6, #20
  405750:	f019 091f 	ands.w	r9, r9, #31
  405754:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  405758:	d01d      	beq.n	405796 <__lshift+0x92>
  40575a:	f1c9 0c20 	rsb	ip, r9, #32
  40575e:	2200      	movs	r2, #0
  405760:	680c      	ldr	r4, [r1, #0]
  405762:	fa04 f409 	lsl.w	r4, r4, r9
  405766:	4314      	orrs	r4, r2
  405768:	f843 4b04 	str.w	r4, [r3], #4
  40576c:	f851 2b04 	ldr.w	r2, [r1], #4
  405770:	458e      	cmp	lr, r1
  405772:	fa22 f20c 	lsr.w	r2, r2, ip
  405776:	d8f3      	bhi.n	405760 <__lshift+0x5c>
  405778:	601a      	str	r2, [r3, #0]
  40577a:	b10a      	cbz	r2, 405780 <__lshift+0x7c>
  40577c:	f108 0502 	add.w	r5, r8, #2
  405780:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  405782:	6872      	ldr	r2, [r6, #4]
  405784:	3d01      	subs	r5, #1
  405786:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40578a:	6105      	str	r5, [r0, #16]
  40578c:	6031      	str	r1, [r6, #0]
  40578e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  405792:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405796:	3b04      	subs	r3, #4
  405798:	f851 2b04 	ldr.w	r2, [r1], #4
  40579c:	f843 2f04 	str.w	r2, [r3, #4]!
  4057a0:	458e      	cmp	lr, r1
  4057a2:	d8f9      	bhi.n	405798 <__lshift+0x94>
  4057a4:	e7ec      	b.n	405780 <__lshift+0x7c>
  4057a6:	bf00      	nop

004057a8 <__mcmp>:
  4057a8:	b430      	push	{r4, r5}
  4057aa:	690b      	ldr	r3, [r1, #16]
  4057ac:	4605      	mov	r5, r0
  4057ae:	6900      	ldr	r0, [r0, #16]
  4057b0:	1ac0      	subs	r0, r0, r3
  4057b2:	d10f      	bne.n	4057d4 <__mcmp+0x2c>
  4057b4:	009b      	lsls	r3, r3, #2
  4057b6:	3514      	adds	r5, #20
  4057b8:	3114      	adds	r1, #20
  4057ba:	4419      	add	r1, r3
  4057bc:	442b      	add	r3, r5
  4057be:	e001      	b.n	4057c4 <__mcmp+0x1c>
  4057c0:	429d      	cmp	r5, r3
  4057c2:	d207      	bcs.n	4057d4 <__mcmp+0x2c>
  4057c4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  4057c8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4057cc:	4294      	cmp	r4, r2
  4057ce:	d0f7      	beq.n	4057c0 <__mcmp+0x18>
  4057d0:	d302      	bcc.n	4057d8 <__mcmp+0x30>
  4057d2:	2001      	movs	r0, #1
  4057d4:	bc30      	pop	{r4, r5}
  4057d6:	4770      	bx	lr
  4057d8:	f04f 30ff 	mov.w	r0, #4294967295
  4057dc:	e7fa      	b.n	4057d4 <__mcmp+0x2c>
  4057de:	bf00      	nop

004057e0 <__mdiff>:
  4057e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4057e4:	690f      	ldr	r7, [r1, #16]
  4057e6:	460e      	mov	r6, r1
  4057e8:	6911      	ldr	r1, [r2, #16]
  4057ea:	1a7f      	subs	r7, r7, r1
  4057ec:	2f00      	cmp	r7, #0
  4057ee:	4690      	mov	r8, r2
  4057f0:	d117      	bne.n	405822 <__mdiff+0x42>
  4057f2:	0089      	lsls	r1, r1, #2
  4057f4:	f106 0514 	add.w	r5, r6, #20
  4057f8:	f102 0e14 	add.w	lr, r2, #20
  4057fc:	186b      	adds	r3, r5, r1
  4057fe:	4471      	add	r1, lr
  405800:	e001      	b.n	405806 <__mdiff+0x26>
  405802:	429d      	cmp	r5, r3
  405804:	d25c      	bcs.n	4058c0 <__mdiff+0xe0>
  405806:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  40580a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40580e:	42a2      	cmp	r2, r4
  405810:	d0f7      	beq.n	405802 <__mdiff+0x22>
  405812:	d25e      	bcs.n	4058d2 <__mdiff+0xf2>
  405814:	4633      	mov	r3, r6
  405816:	462c      	mov	r4, r5
  405818:	4646      	mov	r6, r8
  40581a:	4675      	mov	r5, lr
  40581c:	4698      	mov	r8, r3
  40581e:	2701      	movs	r7, #1
  405820:	e005      	b.n	40582e <__mdiff+0x4e>
  405822:	db58      	blt.n	4058d6 <__mdiff+0xf6>
  405824:	f106 0514 	add.w	r5, r6, #20
  405828:	f108 0414 	add.w	r4, r8, #20
  40582c:	2700      	movs	r7, #0
  40582e:	6871      	ldr	r1, [r6, #4]
  405830:	f7ff fdbc 	bl	4053ac <_Balloc>
  405834:	f8d8 3010 	ldr.w	r3, [r8, #16]
  405838:	6936      	ldr	r6, [r6, #16]
  40583a:	60c7      	str	r7, [r0, #12]
  40583c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  405840:	46a6      	mov	lr, r4
  405842:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  405846:	f100 0414 	add.w	r4, r0, #20
  40584a:	2300      	movs	r3, #0
  40584c:	f85e 1b04 	ldr.w	r1, [lr], #4
  405850:	f855 8b04 	ldr.w	r8, [r5], #4
  405854:	b28a      	uxth	r2, r1
  405856:	fa13 f388 	uxtah	r3, r3, r8
  40585a:	0c09      	lsrs	r1, r1, #16
  40585c:	1a9a      	subs	r2, r3, r2
  40585e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  405862:	eb03 4322 	add.w	r3, r3, r2, asr #16
  405866:	b292      	uxth	r2, r2
  405868:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  40586c:	45f4      	cmp	ip, lr
  40586e:	f844 2b04 	str.w	r2, [r4], #4
  405872:	ea4f 4323 	mov.w	r3, r3, asr #16
  405876:	d8e9      	bhi.n	40584c <__mdiff+0x6c>
  405878:	42af      	cmp	r7, r5
  40587a:	d917      	bls.n	4058ac <__mdiff+0xcc>
  40587c:	46a4      	mov	ip, r4
  40587e:	46ae      	mov	lr, r5
  405880:	f85e 2b04 	ldr.w	r2, [lr], #4
  405884:	fa13 f382 	uxtah	r3, r3, r2
  405888:	1419      	asrs	r1, r3, #16
  40588a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  40588e:	b29b      	uxth	r3, r3
  405890:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  405894:	4577      	cmp	r7, lr
  405896:	f84c 2b04 	str.w	r2, [ip], #4
  40589a:	ea4f 4321 	mov.w	r3, r1, asr #16
  40589e:	d8ef      	bhi.n	405880 <__mdiff+0xa0>
  4058a0:	43ed      	mvns	r5, r5
  4058a2:	442f      	add	r7, r5
  4058a4:	f027 0703 	bic.w	r7, r7, #3
  4058a8:	3704      	adds	r7, #4
  4058aa:	443c      	add	r4, r7
  4058ac:	3c04      	subs	r4, #4
  4058ae:	b922      	cbnz	r2, 4058ba <__mdiff+0xda>
  4058b0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  4058b4:	3e01      	subs	r6, #1
  4058b6:	2b00      	cmp	r3, #0
  4058b8:	d0fa      	beq.n	4058b0 <__mdiff+0xd0>
  4058ba:	6106      	str	r6, [r0, #16]
  4058bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4058c0:	2100      	movs	r1, #0
  4058c2:	f7ff fd73 	bl	4053ac <_Balloc>
  4058c6:	2201      	movs	r2, #1
  4058c8:	2300      	movs	r3, #0
  4058ca:	6102      	str	r2, [r0, #16]
  4058cc:	6143      	str	r3, [r0, #20]
  4058ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4058d2:	4674      	mov	r4, lr
  4058d4:	e7ab      	b.n	40582e <__mdiff+0x4e>
  4058d6:	4633      	mov	r3, r6
  4058d8:	f106 0414 	add.w	r4, r6, #20
  4058dc:	f102 0514 	add.w	r5, r2, #20
  4058e0:	4616      	mov	r6, r2
  4058e2:	2701      	movs	r7, #1
  4058e4:	4698      	mov	r8, r3
  4058e6:	e7a2      	b.n	40582e <__mdiff+0x4e>

004058e8 <__d2b>:
  4058e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4058ec:	b082      	sub	sp, #8
  4058ee:	2101      	movs	r1, #1
  4058f0:	461c      	mov	r4, r3
  4058f2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  4058f6:	4615      	mov	r5, r2
  4058f8:	9e08      	ldr	r6, [sp, #32]
  4058fa:	f7ff fd57 	bl	4053ac <_Balloc>
  4058fe:	f3c4 0413 	ubfx	r4, r4, #0, #20
  405902:	4680      	mov	r8, r0
  405904:	b10f      	cbz	r7, 40590a <__d2b+0x22>
  405906:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  40590a:	9401      	str	r4, [sp, #4]
  40590c:	b31d      	cbz	r5, 405956 <__d2b+0x6e>
  40590e:	a802      	add	r0, sp, #8
  405910:	f840 5d08 	str.w	r5, [r0, #-8]!
  405914:	f7ff fdda 	bl	4054cc <__lo0bits>
  405918:	2800      	cmp	r0, #0
  40591a:	d134      	bne.n	405986 <__d2b+0x9e>
  40591c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405920:	f8c8 2014 	str.w	r2, [r8, #20]
  405924:	2b00      	cmp	r3, #0
  405926:	bf0c      	ite	eq
  405928:	2101      	moveq	r1, #1
  40592a:	2102      	movne	r1, #2
  40592c:	f8c8 3018 	str.w	r3, [r8, #24]
  405930:	f8c8 1010 	str.w	r1, [r8, #16]
  405934:	b9df      	cbnz	r7, 40596e <__d2b+0x86>
  405936:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  40593a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  40593e:	6030      	str	r0, [r6, #0]
  405940:	6918      	ldr	r0, [r3, #16]
  405942:	f7ff fda3 	bl	40548c <__hi0bits>
  405946:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405948:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40594c:	6018      	str	r0, [r3, #0]
  40594e:	4640      	mov	r0, r8
  405950:	b002      	add	sp, #8
  405952:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405956:	a801      	add	r0, sp, #4
  405958:	f7ff fdb8 	bl	4054cc <__lo0bits>
  40595c:	9b01      	ldr	r3, [sp, #4]
  40595e:	f8c8 3014 	str.w	r3, [r8, #20]
  405962:	2101      	movs	r1, #1
  405964:	3020      	adds	r0, #32
  405966:	f8c8 1010 	str.w	r1, [r8, #16]
  40596a:	2f00      	cmp	r7, #0
  40596c:	d0e3      	beq.n	405936 <__d2b+0x4e>
  40596e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405970:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  405974:	4407      	add	r7, r0
  405976:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  40597a:	6037      	str	r7, [r6, #0]
  40597c:	6018      	str	r0, [r3, #0]
  40597e:	4640      	mov	r0, r8
  405980:	b002      	add	sp, #8
  405982:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405986:	e89d 000a 	ldmia.w	sp, {r1, r3}
  40598a:	f1c0 0220 	rsb	r2, r0, #32
  40598e:	fa03 f202 	lsl.w	r2, r3, r2
  405992:	430a      	orrs	r2, r1
  405994:	40c3      	lsrs	r3, r0
  405996:	9301      	str	r3, [sp, #4]
  405998:	f8c8 2014 	str.w	r2, [r8, #20]
  40599c:	e7c2      	b.n	405924 <__d2b+0x3c>
  40599e:	bf00      	nop

004059a0 <_sbrk_r>:
  4059a0:	b538      	push	{r3, r4, r5, lr}
  4059a2:	4c07      	ldr	r4, [pc, #28]	; (4059c0 <_sbrk_r+0x20>)
  4059a4:	2300      	movs	r3, #0
  4059a6:	4605      	mov	r5, r0
  4059a8:	4608      	mov	r0, r1
  4059aa:	6023      	str	r3, [r4, #0]
  4059ac:	f7fb fca0 	bl	4012f0 <_sbrk>
  4059b0:	1c43      	adds	r3, r0, #1
  4059b2:	d000      	beq.n	4059b6 <_sbrk_r+0x16>
  4059b4:	bd38      	pop	{r3, r4, r5, pc}
  4059b6:	6823      	ldr	r3, [r4, #0]
  4059b8:	2b00      	cmp	r3, #0
  4059ba:	d0fb      	beq.n	4059b4 <_sbrk_r+0x14>
  4059bc:	602b      	str	r3, [r5, #0]
  4059be:	bd38      	pop	{r3, r4, r5, pc}
  4059c0:	20400cfc 	.word	0x20400cfc

004059c4 <__sread>:
  4059c4:	b510      	push	{r4, lr}
  4059c6:	460c      	mov	r4, r1
  4059c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  4059cc:	f000 fb04 	bl	405fd8 <_read_r>
  4059d0:	2800      	cmp	r0, #0
  4059d2:	db03      	blt.n	4059dc <__sread+0x18>
  4059d4:	6d23      	ldr	r3, [r4, #80]	; 0x50
  4059d6:	4403      	add	r3, r0
  4059d8:	6523      	str	r3, [r4, #80]	; 0x50
  4059da:	bd10      	pop	{r4, pc}
  4059dc:	89a3      	ldrh	r3, [r4, #12]
  4059de:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  4059e2:	81a3      	strh	r3, [r4, #12]
  4059e4:	bd10      	pop	{r4, pc}
  4059e6:	bf00      	nop

004059e8 <__swrite>:
  4059e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4059ec:	4616      	mov	r6, r2
  4059ee:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
  4059f2:	461f      	mov	r7, r3
  4059f4:	05d3      	lsls	r3, r2, #23
  4059f6:	460c      	mov	r4, r1
  4059f8:	4605      	mov	r5, r0
  4059fa:	d507      	bpl.n	405a0c <__swrite+0x24>
  4059fc:	2200      	movs	r2, #0
  4059fe:	2302      	movs	r3, #2
  405a00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405a04:	f000 fa58 	bl	405eb8 <_lseek_r>
  405a08:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
  405a0c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  405a10:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  405a14:	81a2      	strh	r2, [r4, #12]
  405a16:	463b      	mov	r3, r7
  405a18:	4632      	mov	r2, r6
  405a1a:	4628      	mov	r0, r5
  405a1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405a20:	f000 b91a 	b.w	405c58 <_write_r>

00405a24 <__sseek>:
  405a24:	b510      	push	{r4, lr}
  405a26:	460c      	mov	r4, r1
  405a28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405a2c:	f000 fa44 	bl	405eb8 <_lseek_r>
  405a30:	89a3      	ldrh	r3, [r4, #12]
  405a32:	1c42      	adds	r2, r0, #1
  405a34:	bf0e      	itee	eq
  405a36:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  405a3a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  405a3e:	6520      	strne	r0, [r4, #80]	; 0x50
  405a40:	81a3      	strh	r3, [r4, #12]
  405a42:	bd10      	pop	{r4, pc}

00405a44 <__sclose>:
  405a44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405a48:	f000 b9ae 	b.w	405da8 <_close_r>
	...

00405a80 <strlen>:
  405a80:	f890 f000 	pld	[r0]
  405a84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  405a88:	f020 0107 	bic.w	r1, r0, #7
  405a8c:	f06f 0c00 	mvn.w	ip, #0
  405a90:	f010 0407 	ands.w	r4, r0, #7
  405a94:	f891 f020 	pld	[r1, #32]
  405a98:	f040 8049 	bne.w	405b2e <strlen+0xae>
  405a9c:	f04f 0400 	mov.w	r4, #0
  405aa0:	f06f 0007 	mvn.w	r0, #7
  405aa4:	e9d1 2300 	ldrd	r2, r3, [r1]
  405aa8:	f891 f040 	pld	[r1, #64]	; 0x40
  405aac:	f100 0008 	add.w	r0, r0, #8
  405ab0:	fa82 f24c 	uadd8	r2, r2, ip
  405ab4:	faa4 f28c 	sel	r2, r4, ip
  405ab8:	fa83 f34c 	uadd8	r3, r3, ip
  405abc:	faa2 f38c 	sel	r3, r2, ip
  405ac0:	bb4b      	cbnz	r3, 405b16 <strlen+0x96>
  405ac2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  405ac6:	fa82 f24c 	uadd8	r2, r2, ip
  405aca:	f100 0008 	add.w	r0, r0, #8
  405ace:	faa4 f28c 	sel	r2, r4, ip
  405ad2:	fa83 f34c 	uadd8	r3, r3, ip
  405ad6:	faa2 f38c 	sel	r3, r2, ip
  405ada:	b9e3      	cbnz	r3, 405b16 <strlen+0x96>
  405adc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  405ae0:	fa82 f24c 	uadd8	r2, r2, ip
  405ae4:	f100 0008 	add.w	r0, r0, #8
  405ae8:	faa4 f28c 	sel	r2, r4, ip
  405aec:	fa83 f34c 	uadd8	r3, r3, ip
  405af0:	faa2 f38c 	sel	r3, r2, ip
  405af4:	b97b      	cbnz	r3, 405b16 <strlen+0x96>
  405af6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  405afa:	f101 0120 	add.w	r1, r1, #32
  405afe:	fa82 f24c 	uadd8	r2, r2, ip
  405b02:	f100 0008 	add.w	r0, r0, #8
  405b06:	faa4 f28c 	sel	r2, r4, ip
  405b0a:	fa83 f34c 	uadd8	r3, r3, ip
  405b0e:	faa2 f38c 	sel	r3, r2, ip
  405b12:	2b00      	cmp	r3, #0
  405b14:	d0c6      	beq.n	405aa4 <strlen+0x24>
  405b16:	2a00      	cmp	r2, #0
  405b18:	bf04      	itt	eq
  405b1a:	3004      	addeq	r0, #4
  405b1c:	461a      	moveq	r2, r3
  405b1e:	ba12      	rev	r2, r2
  405b20:	fab2 f282 	clz	r2, r2
  405b24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  405b28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  405b2c:	4770      	bx	lr
  405b2e:	e9d1 2300 	ldrd	r2, r3, [r1]
  405b32:	f004 0503 	and.w	r5, r4, #3
  405b36:	f1c4 0000 	rsb	r0, r4, #0
  405b3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  405b3e:	f014 0f04 	tst.w	r4, #4
  405b42:	f891 f040 	pld	[r1, #64]	; 0x40
  405b46:	fa0c f505 	lsl.w	r5, ip, r5
  405b4a:	ea62 0205 	orn	r2, r2, r5
  405b4e:	bf1c      	itt	ne
  405b50:	ea63 0305 	ornne	r3, r3, r5
  405b54:	4662      	movne	r2, ip
  405b56:	f04f 0400 	mov.w	r4, #0
  405b5a:	e7a9      	b.n	405ab0 <strlen+0x30>

00405b5c <__ssprint_r>:
  405b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405b60:	6893      	ldr	r3, [r2, #8]
  405b62:	b083      	sub	sp, #12
  405b64:	4690      	mov	r8, r2
  405b66:	2b00      	cmp	r3, #0
  405b68:	d070      	beq.n	405c4c <__ssprint_r+0xf0>
  405b6a:	4682      	mov	sl, r0
  405b6c:	460c      	mov	r4, r1
  405b6e:	6817      	ldr	r7, [r2, #0]
  405b70:	688d      	ldr	r5, [r1, #8]
  405b72:	6808      	ldr	r0, [r1, #0]
  405b74:	e042      	b.n	405bfc <__ssprint_r+0xa0>
  405b76:	89a3      	ldrh	r3, [r4, #12]
  405b78:	f413 6f90 	tst.w	r3, #1152	; 0x480
  405b7c:	d02e      	beq.n	405bdc <__ssprint_r+0x80>
  405b7e:	6965      	ldr	r5, [r4, #20]
  405b80:	6921      	ldr	r1, [r4, #16]
  405b82:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  405b86:	eba0 0b01 	sub.w	fp, r0, r1
  405b8a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  405b8e:	f10b 0001 	add.w	r0, fp, #1
  405b92:	106d      	asrs	r5, r5, #1
  405b94:	4430      	add	r0, r6
  405b96:	42a8      	cmp	r0, r5
  405b98:	462a      	mov	r2, r5
  405b9a:	bf84      	itt	hi
  405b9c:	4605      	movhi	r5, r0
  405b9e:	462a      	movhi	r2, r5
  405ba0:	055b      	lsls	r3, r3, #21
  405ba2:	d538      	bpl.n	405c16 <__ssprint_r+0xba>
  405ba4:	4611      	mov	r1, r2
  405ba6:	4650      	mov	r0, sl
  405ba8:	f7ff f85a 	bl	404c60 <_malloc_r>
  405bac:	2800      	cmp	r0, #0
  405bae:	d03c      	beq.n	405c2a <__ssprint_r+0xce>
  405bb0:	465a      	mov	r2, fp
  405bb2:	6921      	ldr	r1, [r4, #16]
  405bb4:	9001      	str	r0, [sp, #4]
  405bb6:	f7ff fb53 	bl	405260 <memcpy>
  405bba:	89a2      	ldrh	r2, [r4, #12]
  405bbc:	9b01      	ldr	r3, [sp, #4]
  405bbe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  405bc2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  405bc6:	81a2      	strh	r2, [r4, #12]
  405bc8:	eba5 020b 	sub.w	r2, r5, fp
  405bcc:	eb03 000b 	add.w	r0, r3, fp
  405bd0:	6165      	str	r5, [r4, #20]
  405bd2:	6123      	str	r3, [r4, #16]
  405bd4:	6020      	str	r0, [r4, #0]
  405bd6:	60a2      	str	r2, [r4, #8]
  405bd8:	4635      	mov	r5, r6
  405bda:	46b3      	mov	fp, r6
  405bdc:	465a      	mov	r2, fp
  405bde:	4649      	mov	r1, r9
  405be0:	f000 f996 	bl	405f10 <memmove>
  405be4:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405be8:	68a2      	ldr	r2, [r4, #8]
  405bea:	6820      	ldr	r0, [r4, #0]
  405bec:	1b55      	subs	r5, r2, r5
  405bee:	4458      	add	r0, fp
  405bf0:	1b9e      	subs	r6, r3, r6
  405bf2:	60a5      	str	r5, [r4, #8]
  405bf4:	6020      	str	r0, [r4, #0]
  405bf6:	f8c8 6008 	str.w	r6, [r8, #8]
  405bfa:	b33e      	cbz	r6, 405c4c <__ssprint_r+0xf0>
  405bfc:	687e      	ldr	r6, [r7, #4]
  405bfe:	463b      	mov	r3, r7
  405c00:	3708      	adds	r7, #8
  405c02:	2e00      	cmp	r6, #0
  405c04:	d0fa      	beq.n	405bfc <__ssprint_r+0xa0>
  405c06:	42ae      	cmp	r6, r5
  405c08:	f8d3 9000 	ldr.w	r9, [r3]
  405c0c:	46ab      	mov	fp, r5
  405c0e:	d2b2      	bcs.n	405b76 <__ssprint_r+0x1a>
  405c10:	4635      	mov	r5, r6
  405c12:	46b3      	mov	fp, r6
  405c14:	e7e2      	b.n	405bdc <__ssprint_r+0x80>
  405c16:	4650      	mov	r0, sl
  405c18:	f000 f9f4 	bl	406004 <_realloc_r>
  405c1c:	4603      	mov	r3, r0
  405c1e:	2800      	cmp	r0, #0
  405c20:	d1d2      	bne.n	405bc8 <__ssprint_r+0x6c>
  405c22:	6921      	ldr	r1, [r4, #16]
  405c24:	4650      	mov	r0, sl
  405c26:	f7fe febf 	bl	4049a8 <_free_r>
  405c2a:	230c      	movs	r3, #12
  405c2c:	f8ca 3000 	str.w	r3, [sl]
  405c30:	89a3      	ldrh	r3, [r4, #12]
  405c32:	2200      	movs	r2, #0
  405c34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405c38:	f04f 30ff 	mov.w	r0, #4294967295
  405c3c:	81a3      	strh	r3, [r4, #12]
  405c3e:	f8c8 2008 	str.w	r2, [r8, #8]
  405c42:	f8c8 2004 	str.w	r2, [r8, #4]
  405c46:	b003      	add	sp, #12
  405c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405c4c:	2000      	movs	r0, #0
  405c4e:	f8c8 0004 	str.w	r0, [r8, #4]
  405c52:	b003      	add	sp, #12
  405c54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405c58 <_write_r>:
  405c58:	b570      	push	{r4, r5, r6, lr}
  405c5a:	460d      	mov	r5, r1
  405c5c:	4c08      	ldr	r4, [pc, #32]	; (405c80 <_write_r+0x28>)
  405c5e:	4611      	mov	r1, r2
  405c60:	4606      	mov	r6, r0
  405c62:	461a      	mov	r2, r3
  405c64:	4628      	mov	r0, r5
  405c66:	2300      	movs	r3, #0
  405c68:	6023      	str	r3, [r4, #0]
  405c6a:	f7fa fabd 	bl	4001e8 <_write>
  405c6e:	1c43      	adds	r3, r0, #1
  405c70:	d000      	beq.n	405c74 <_write_r+0x1c>
  405c72:	bd70      	pop	{r4, r5, r6, pc}
  405c74:	6823      	ldr	r3, [r4, #0]
  405c76:	2b00      	cmp	r3, #0
  405c78:	d0fb      	beq.n	405c72 <_write_r+0x1a>
  405c7a:	6033      	str	r3, [r6, #0]
  405c7c:	bd70      	pop	{r4, r5, r6, pc}
  405c7e:	bf00      	nop
  405c80:	20400cfc 	.word	0x20400cfc

00405c84 <__register_exitproc>:
  405c84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405c88:	4d2c      	ldr	r5, [pc, #176]	; (405d3c <__register_exitproc+0xb8>)
  405c8a:	4606      	mov	r6, r0
  405c8c:	6828      	ldr	r0, [r5, #0]
  405c8e:	4698      	mov	r8, r3
  405c90:	460f      	mov	r7, r1
  405c92:	4691      	mov	r9, r2
  405c94:	f7fe ffaa 	bl	404bec <__retarget_lock_acquire_recursive>
  405c98:	4b29      	ldr	r3, [pc, #164]	; (405d40 <__register_exitproc+0xbc>)
  405c9a:	681c      	ldr	r4, [r3, #0]
  405c9c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  405ca0:	2b00      	cmp	r3, #0
  405ca2:	d03e      	beq.n	405d22 <__register_exitproc+0x9e>
  405ca4:	685a      	ldr	r2, [r3, #4]
  405ca6:	2a1f      	cmp	r2, #31
  405ca8:	dc1c      	bgt.n	405ce4 <__register_exitproc+0x60>
  405caa:	f102 0e01 	add.w	lr, r2, #1
  405cae:	b176      	cbz	r6, 405cce <__register_exitproc+0x4a>
  405cb0:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405cb4:	2401      	movs	r4, #1
  405cb6:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  405cba:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405cbe:	4094      	lsls	r4, r2
  405cc0:	4320      	orrs	r0, r4
  405cc2:	2e02      	cmp	r6, #2
  405cc4:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  405cc8:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405ccc:	d023      	beq.n	405d16 <__register_exitproc+0x92>
  405cce:	3202      	adds	r2, #2
  405cd0:	f8c3 e004 	str.w	lr, [r3, #4]
  405cd4:	6828      	ldr	r0, [r5, #0]
  405cd6:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  405cda:	f7fe ff89 	bl	404bf0 <__retarget_lock_release_recursive>
  405cde:	2000      	movs	r0, #0
  405ce0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405ce4:	4b17      	ldr	r3, [pc, #92]	; (405d44 <__register_exitproc+0xc0>)
  405ce6:	b30b      	cbz	r3, 405d2c <__register_exitproc+0xa8>
  405ce8:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405cec:	f7fe ffb0 	bl	404c50 <malloc>
  405cf0:	4603      	mov	r3, r0
  405cf2:	b1d8      	cbz	r0, 405d2c <__register_exitproc+0xa8>
  405cf4:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  405cf8:	6002      	str	r2, [r0, #0]
  405cfa:	2100      	movs	r1, #0
  405cfc:	6041      	str	r1, [r0, #4]
  405cfe:	460a      	mov	r2, r1
  405d00:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405d04:	f04f 0e01 	mov.w	lr, #1
  405d08:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405d0c:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405d10:	2e00      	cmp	r6, #0
  405d12:	d0dc      	beq.n	405cce <__register_exitproc+0x4a>
  405d14:	e7cc      	b.n	405cb0 <__register_exitproc+0x2c>
  405d16:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  405d1a:	430c      	orrs	r4, r1
  405d1c:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405d20:	e7d5      	b.n	405cce <__register_exitproc+0x4a>
  405d22:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  405d26:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  405d2a:	e7bb      	b.n	405ca4 <__register_exitproc+0x20>
  405d2c:	6828      	ldr	r0, [r5, #0]
  405d2e:	f7fe ff5f 	bl	404bf0 <__retarget_lock_release_recursive>
  405d32:	f04f 30ff 	mov.w	r0, #4294967295
  405d36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405d3a:	bf00      	nop
  405d3c:	20400450 	.word	0x20400450
  405d40:	00407208 	.word	0x00407208
  405d44:	00404c51 	.word	0x00404c51

00405d48 <_calloc_r>:
  405d48:	b510      	push	{r4, lr}
  405d4a:	fb02 f101 	mul.w	r1, r2, r1
  405d4e:	f7fe ff87 	bl	404c60 <_malloc_r>
  405d52:	4604      	mov	r4, r0
  405d54:	b1d8      	cbz	r0, 405d8e <_calloc_r+0x46>
  405d56:	f850 2c04 	ldr.w	r2, [r0, #-4]
  405d5a:	f022 0203 	bic.w	r2, r2, #3
  405d5e:	3a04      	subs	r2, #4
  405d60:	2a24      	cmp	r2, #36	; 0x24
  405d62:	d818      	bhi.n	405d96 <_calloc_r+0x4e>
  405d64:	2a13      	cmp	r2, #19
  405d66:	d914      	bls.n	405d92 <_calloc_r+0x4a>
  405d68:	2300      	movs	r3, #0
  405d6a:	2a1b      	cmp	r2, #27
  405d6c:	6003      	str	r3, [r0, #0]
  405d6e:	6043      	str	r3, [r0, #4]
  405d70:	d916      	bls.n	405da0 <_calloc_r+0x58>
  405d72:	2a24      	cmp	r2, #36	; 0x24
  405d74:	6083      	str	r3, [r0, #8]
  405d76:	60c3      	str	r3, [r0, #12]
  405d78:	bf11      	iteee	ne
  405d7a:	f100 0210 	addne.w	r2, r0, #16
  405d7e:	6103      	streq	r3, [r0, #16]
  405d80:	6143      	streq	r3, [r0, #20]
  405d82:	f100 0218 	addeq.w	r2, r0, #24
  405d86:	2300      	movs	r3, #0
  405d88:	6013      	str	r3, [r2, #0]
  405d8a:	6053      	str	r3, [r2, #4]
  405d8c:	6093      	str	r3, [r2, #8]
  405d8e:	4620      	mov	r0, r4
  405d90:	bd10      	pop	{r4, pc}
  405d92:	4602      	mov	r2, r0
  405d94:	e7f7      	b.n	405d86 <_calloc_r+0x3e>
  405d96:	2100      	movs	r1, #0
  405d98:	f7fc f92c 	bl	401ff4 <memset>
  405d9c:	4620      	mov	r0, r4
  405d9e:	bd10      	pop	{r4, pc}
  405da0:	f100 0208 	add.w	r2, r0, #8
  405da4:	e7ef      	b.n	405d86 <_calloc_r+0x3e>
  405da6:	bf00      	nop

00405da8 <_close_r>:
  405da8:	b538      	push	{r3, r4, r5, lr}
  405daa:	4c07      	ldr	r4, [pc, #28]	; (405dc8 <_close_r+0x20>)
  405dac:	2300      	movs	r3, #0
  405dae:	4605      	mov	r5, r0
  405db0:	4608      	mov	r0, r1
  405db2:	6023      	str	r3, [r4, #0]
  405db4:	f7fb fab8 	bl	401328 <_close>
  405db8:	1c43      	adds	r3, r0, #1
  405dba:	d000      	beq.n	405dbe <_close_r+0x16>
  405dbc:	bd38      	pop	{r3, r4, r5, pc}
  405dbe:	6823      	ldr	r3, [r4, #0]
  405dc0:	2b00      	cmp	r3, #0
  405dc2:	d0fb      	beq.n	405dbc <_close_r+0x14>
  405dc4:	602b      	str	r3, [r5, #0]
  405dc6:	bd38      	pop	{r3, r4, r5, pc}
  405dc8:	20400cfc 	.word	0x20400cfc

00405dcc <_fclose_r>:
  405dcc:	b570      	push	{r4, r5, r6, lr}
  405dce:	b159      	cbz	r1, 405de8 <_fclose_r+0x1c>
  405dd0:	4605      	mov	r5, r0
  405dd2:	460c      	mov	r4, r1
  405dd4:	b110      	cbz	r0, 405ddc <_fclose_r+0x10>
  405dd6:	6b83      	ldr	r3, [r0, #56]	; 0x38
  405dd8:	2b00      	cmp	r3, #0
  405dda:	d03c      	beq.n	405e56 <_fclose_r+0x8a>
  405ddc:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405dde:	07d8      	lsls	r0, r3, #31
  405de0:	d505      	bpl.n	405dee <_fclose_r+0x22>
  405de2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405de6:	b92b      	cbnz	r3, 405df4 <_fclose_r+0x28>
  405de8:	2600      	movs	r6, #0
  405dea:	4630      	mov	r0, r6
  405dec:	bd70      	pop	{r4, r5, r6, pc}
  405dee:	89a3      	ldrh	r3, [r4, #12]
  405df0:	0599      	lsls	r1, r3, #22
  405df2:	d53c      	bpl.n	405e6e <_fclose_r+0xa2>
  405df4:	4621      	mov	r1, r4
  405df6:	4628      	mov	r0, r5
  405df8:	f7fe fc3c 	bl	404674 <__sflush_r>
  405dfc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  405dfe:	4606      	mov	r6, r0
  405e00:	b133      	cbz	r3, 405e10 <_fclose_r+0x44>
  405e02:	69e1      	ldr	r1, [r4, #28]
  405e04:	4628      	mov	r0, r5
  405e06:	4798      	blx	r3
  405e08:	2800      	cmp	r0, #0
  405e0a:	bfb8      	it	lt
  405e0c:	f04f 36ff 	movlt.w	r6, #4294967295
  405e10:	89a3      	ldrh	r3, [r4, #12]
  405e12:	061a      	lsls	r2, r3, #24
  405e14:	d422      	bmi.n	405e5c <_fclose_r+0x90>
  405e16:	6b21      	ldr	r1, [r4, #48]	; 0x30
  405e18:	b141      	cbz	r1, 405e2c <_fclose_r+0x60>
  405e1a:	f104 0340 	add.w	r3, r4, #64	; 0x40
  405e1e:	4299      	cmp	r1, r3
  405e20:	d002      	beq.n	405e28 <_fclose_r+0x5c>
  405e22:	4628      	mov	r0, r5
  405e24:	f7fe fdc0 	bl	4049a8 <_free_r>
  405e28:	2300      	movs	r3, #0
  405e2a:	6323      	str	r3, [r4, #48]	; 0x30
  405e2c:	6c61      	ldr	r1, [r4, #68]	; 0x44
  405e2e:	b121      	cbz	r1, 405e3a <_fclose_r+0x6e>
  405e30:	4628      	mov	r0, r5
  405e32:	f7fe fdb9 	bl	4049a8 <_free_r>
  405e36:	2300      	movs	r3, #0
  405e38:	6463      	str	r3, [r4, #68]	; 0x44
  405e3a:	f7fe fd3f 	bl	4048bc <__sfp_lock_acquire>
  405e3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
  405e40:	2200      	movs	r2, #0
  405e42:	07db      	lsls	r3, r3, #31
  405e44:	81a2      	strh	r2, [r4, #12]
  405e46:	d50e      	bpl.n	405e66 <_fclose_r+0x9a>
  405e48:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405e4a:	f7fe fecd 	bl	404be8 <__retarget_lock_close_recursive>
  405e4e:	f7fe fd3b 	bl	4048c8 <__sfp_lock_release>
  405e52:	4630      	mov	r0, r6
  405e54:	bd70      	pop	{r4, r5, r6, pc}
  405e56:	f7fe fd05 	bl	404864 <__sinit>
  405e5a:	e7bf      	b.n	405ddc <_fclose_r+0x10>
  405e5c:	6921      	ldr	r1, [r4, #16]
  405e5e:	4628      	mov	r0, r5
  405e60:	f7fe fda2 	bl	4049a8 <_free_r>
  405e64:	e7d7      	b.n	405e16 <_fclose_r+0x4a>
  405e66:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405e68:	f7fe fec2 	bl	404bf0 <__retarget_lock_release_recursive>
  405e6c:	e7ec      	b.n	405e48 <_fclose_r+0x7c>
  405e6e:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405e70:	f7fe febc 	bl	404bec <__retarget_lock_acquire_recursive>
  405e74:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405e78:	2b00      	cmp	r3, #0
  405e7a:	d1bb      	bne.n	405df4 <_fclose_r+0x28>
  405e7c:	6e66      	ldr	r6, [r4, #100]	; 0x64
  405e7e:	f016 0601 	ands.w	r6, r6, #1
  405e82:	d1b1      	bne.n	405de8 <_fclose_r+0x1c>
  405e84:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405e86:	f7fe feb3 	bl	404bf0 <__retarget_lock_release_recursive>
  405e8a:	4630      	mov	r0, r6
  405e8c:	bd70      	pop	{r4, r5, r6, pc}
  405e8e:	bf00      	nop

00405e90 <_fstat_r>:
  405e90:	b538      	push	{r3, r4, r5, lr}
  405e92:	460b      	mov	r3, r1
  405e94:	4c07      	ldr	r4, [pc, #28]	; (405eb4 <_fstat_r+0x24>)
  405e96:	4605      	mov	r5, r0
  405e98:	4611      	mov	r1, r2
  405e9a:	4618      	mov	r0, r3
  405e9c:	2300      	movs	r3, #0
  405e9e:	6023      	str	r3, [r4, #0]
  405ea0:	f7fb fa45 	bl	40132e <_fstat>
  405ea4:	1c43      	adds	r3, r0, #1
  405ea6:	d000      	beq.n	405eaa <_fstat_r+0x1a>
  405ea8:	bd38      	pop	{r3, r4, r5, pc}
  405eaa:	6823      	ldr	r3, [r4, #0]
  405eac:	2b00      	cmp	r3, #0
  405eae:	d0fb      	beq.n	405ea8 <_fstat_r+0x18>
  405eb0:	602b      	str	r3, [r5, #0]
  405eb2:	bd38      	pop	{r3, r4, r5, pc}
  405eb4:	20400cfc 	.word	0x20400cfc

00405eb8 <_lseek_r>:
  405eb8:	b570      	push	{r4, r5, r6, lr}
  405eba:	460d      	mov	r5, r1
  405ebc:	4c08      	ldr	r4, [pc, #32]	; (405ee0 <_lseek_r+0x28>)
  405ebe:	4611      	mov	r1, r2
  405ec0:	4606      	mov	r6, r0
  405ec2:	461a      	mov	r2, r3
  405ec4:	4628      	mov	r0, r5
  405ec6:	2300      	movs	r3, #0
  405ec8:	6023      	str	r3, [r4, #0]
  405eca:	f7fb fa35 	bl	401338 <_lseek>
  405ece:	1c43      	adds	r3, r0, #1
  405ed0:	d000      	beq.n	405ed4 <_lseek_r+0x1c>
  405ed2:	bd70      	pop	{r4, r5, r6, pc}
  405ed4:	6823      	ldr	r3, [r4, #0]
  405ed6:	2b00      	cmp	r3, #0
  405ed8:	d0fb      	beq.n	405ed2 <_lseek_r+0x1a>
  405eda:	6033      	str	r3, [r6, #0]
  405edc:	bd70      	pop	{r4, r5, r6, pc}
  405ede:	bf00      	nop
  405ee0:	20400cfc 	.word	0x20400cfc

00405ee4 <__ascii_mbtowc>:
  405ee4:	b082      	sub	sp, #8
  405ee6:	b149      	cbz	r1, 405efc <__ascii_mbtowc+0x18>
  405ee8:	b15a      	cbz	r2, 405f02 <__ascii_mbtowc+0x1e>
  405eea:	b16b      	cbz	r3, 405f08 <__ascii_mbtowc+0x24>
  405eec:	7813      	ldrb	r3, [r2, #0]
  405eee:	600b      	str	r3, [r1, #0]
  405ef0:	7812      	ldrb	r2, [r2, #0]
  405ef2:	1c10      	adds	r0, r2, #0
  405ef4:	bf18      	it	ne
  405ef6:	2001      	movne	r0, #1
  405ef8:	b002      	add	sp, #8
  405efa:	4770      	bx	lr
  405efc:	a901      	add	r1, sp, #4
  405efe:	2a00      	cmp	r2, #0
  405f00:	d1f3      	bne.n	405eea <__ascii_mbtowc+0x6>
  405f02:	4610      	mov	r0, r2
  405f04:	b002      	add	sp, #8
  405f06:	4770      	bx	lr
  405f08:	f06f 0001 	mvn.w	r0, #1
  405f0c:	e7f4      	b.n	405ef8 <__ascii_mbtowc+0x14>
  405f0e:	bf00      	nop

00405f10 <memmove>:
  405f10:	4288      	cmp	r0, r1
  405f12:	b5f0      	push	{r4, r5, r6, r7, lr}
  405f14:	d90d      	bls.n	405f32 <memmove+0x22>
  405f16:	188b      	adds	r3, r1, r2
  405f18:	4298      	cmp	r0, r3
  405f1a:	d20a      	bcs.n	405f32 <memmove+0x22>
  405f1c:	1884      	adds	r4, r0, r2
  405f1e:	2a00      	cmp	r2, #0
  405f20:	d051      	beq.n	405fc6 <memmove+0xb6>
  405f22:	4622      	mov	r2, r4
  405f24:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  405f28:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405f2c:	4299      	cmp	r1, r3
  405f2e:	d1f9      	bne.n	405f24 <memmove+0x14>
  405f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405f32:	2a0f      	cmp	r2, #15
  405f34:	d948      	bls.n	405fc8 <memmove+0xb8>
  405f36:	ea41 0300 	orr.w	r3, r1, r0
  405f3a:	079b      	lsls	r3, r3, #30
  405f3c:	d146      	bne.n	405fcc <memmove+0xbc>
  405f3e:	f100 0410 	add.w	r4, r0, #16
  405f42:	f101 0310 	add.w	r3, r1, #16
  405f46:	4615      	mov	r5, r2
  405f48:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405f4c:	f844 6c10 	str.w	r6, [r4, #-16]
  405f50:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405f54:	f844 6c0c 	str.w	r6, [r4, #-12]
  405f58:	f853 6c08 	ldr.w	r6, [r3, #-8]
  405f5c:	f844 6c08 	str.w	r6, [r4, #-8]
  405f60:	3d10      	subs	r5, #16
  405f62:	f853 6c04 	ldr.w	r6, [r3, #-4]
  405f66:	f844 6c04 	str.w	r6, [r4, #-4]
  405f6a:	2d0f      	cmp	r5, #15
  405f6c:	f103 0310 	add.w	r3, r3, #16
  405f70:	f104 0410 	add.w	r4, r4, #16
  405f74:	d8e8      	bhi.n	405f48 <memmove+0x38>
  405f76:	f1a2 0310 	sub.w	r3, r2, #16
  405f7a:	f023 030f 	bic.w	r3, r3, #15
  405f7e:	f002 0e0f 	and.w	lr, r2, #15
  405f82:	3310      	adds	r3, #16
  405f84:	f1be 0f03 	cmp.w	lr, #3
  405f88:	4419      	add	r1, r3
  405f8a:	4403      	add	r3, r0
  405f8c:	d921      	bls.n	405fd2 <memmove+0xc2>
  405f8e:	1f1e      	subs	r6, r3, #4
  405f90:	460d      	mov	r5, r1
  405f92:	4674      	mov	r4, lr
  405f94:	3c04      	subs	r4, #4
  405f96:	f855 7b04 	ldr.w	r7, [r5], #4
  405f9a:	f846 7f04 	str.w	r7, [r6, #4]!
  405f9e:	2c03      	cmp	r4, #3
  405fa0:	d8f8      	bhi.n	405f94 <memmove+0x84>
  405fa2:	f1ae 0404 	sub.w	r4, lr, #4
  405fa6:	f024 0403 	bic.w	r4, r4, #3
  405faa:	3404      	adds	r4, #4
  405fac:	4421      	add	r1, r4
  405fae:	4423      	add	r3, r4
  405fb0:	f002 0203 	and.w	r2, r2, #3
  405fb4:	b162      	cbz	r2, 405fd0 <memmove+0xc0>
  405fb6:	3b01      	subs	r3, #1
  405fb8:	440a      	add	r2, r1
  405fba:	f811 4b01 	ldrb.w	r4, [r1], #1
  405fbe:	f803 4f01 	strb.w	r4, [r3, #1]!
  405fc2:	428a      	cmp	r2, r1
  405fc4:	d1f9      	bne.n	405fba <memmove+0xaa>
  405fc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405fc8:	4603      	mov	r3, r0
  405fca:	e7f3      	b.n	405fb4 <memmove+0xa4>
  405fcc:	4603      	mov	r3, r0
  405fce:	e7f2      	b.n	405fb6 <memmove+0xa6>
  405fd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405fd2:	4672      	mov	r2, lr
  405fd4:	e7ee      	b.n	405fb4 <memmove+0xa4>
  405fd6:	bf00      	nop

00405fd8 <_read_r>:
  405fd8:	b570      	push	{r4, r5, r6, lr}
  405fda:	460d      	mov	r5, r1
  405fdc:	4c08      	ldr	r4, [pc, #32]	; (406000 <_read_r+0x28>)
  405fde:	4611      	mov	r1, r2
  405fe0:	4606      	mov	r6, r0
  405fe2:	461a      	mov	r2, r3
  405fe4:	4628      	mov	r0, r5
  405fe6:	2300      	movs	r3, #0
  405fe8:	6023      	str	r3, [r4, #0]
  405fea:	f7fa f8df 	bl	4001ac <_read>
  405fee:	1c43      	adds	r3, r0, #1
  405ff0:	d000      	beq.n	405ff4 <_read_r+0x1c>
  405ff2:	bd70      	pop	{r4, r5, r6, pc}
  405ff4:	6823      	ldr	r3, [r4, #0]
  405ff6:	2b00      	cmp	r3, #0
  405ff8:	d0fb      	beq.n	405ff2 <_read_r+0x1a>
  405ffa:	6033      	str	r3, [r6, #0]
  405ffc:	bd70      	pop	{r4, r5, r6, pc}
  405ffe:	bf00      	nop
  406000:	20400cfc 	.word	0x20400cfc

00406004 <_realloc_r>:
  406004:	2900      	cmp	r1, #0
  406006:	f000 8095 	beq.w	406134 <_realloc_r+0x130>
  40600a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40600e:	460d      	mov	r5, r1
  406010:	4616      	mov	r6, r2
  406012:	b083      	sub	sp, #12
  406014:	4680      	mov	r8, r0
  406016:	f106 070b 	add.w	r7, r6, #11
  40601a:	f7ff f9bb 	bl	405394 <__malloc_lock>
  40601e:	f855 ec04 	ldr.w	lr, [r5, #-4]
  406022:	2f16      	cmp	r7, #22
  406024:	f02e 0403 	bic.w	r4, lr, #3
  406028:	f1a5 0908 	sub.w	r9, r5, #8
  40602c:	d83c      	bhi.n	4060a8 <_realloc_r+0xa4>
  40602e:	2210      	movs	r2, #16
  406030:	4617      	mov	r7, r2
  406032:	42be      	cmp	r6, r7
  406034:	d83d      	bhi.n	4060b2 <_realloc_r+0xae>
  406036:	4294      	cmp	r4, r2
  406038:	da43      	bge.n	4060c2 <_realloc_r+0xbe>
  40603a:	4bc4      	ldr	r3, [pc, #784]	; (40634c <_realloc_r+0x348>)
  40603c:	6899      	ldr	r1, [r3, #8]
  40603e:	eb09 0004 	add.w	r0, r9, r4
  406042:	4288      	cmp	r0, r1
  406044:	f000 80b4 	beq.w	4061b0 <_realloc_r+0x1ac>
  406048:	6843      	ldr	r3, [r0, #4]
  40604a:	f023 0101 	bic.w	r1, r3, #1
  40604e:	4401      	add	r1, r0
  406050:	6849      	ldr	r1, [r1, #4]
  406052:	07c9      	lsls	r1, r1, #31
  406054:	d54c      	bpl.n	4060f0 <_realloc_r+0xec>
  406056:	f01e 0f01 	tst.w	lr, #1
  40605a:	f000 809b 	beq.w	406194 <_realloc_r+0x190>
  40605e:	4631      	mov	r1, r6
  406060:	4640      	mov	r0, r8
  406062:	f7fe fdfd 	bl	404c60 <_malloc_r>
  406066:	4606      	mov	r6, r0
  406068:	2800      	cmp	r0, #0
  40606a:	d03a      	beq.n	4060e2 <_realloc_r+0xde>
  40606c:	f855 3c04 	ldr.w	r3, [r5, #-4]
  406070:	f023 0301 	bic.w	r3, r3, #1
  406074:	444b      	add	r3, r9
  406076:	f1a0 0208 	sub.w	r2, r0, #8
  40607a:	429a      	cmp	r2, r3
  40607c:	f000 8121 	beq.w	4062c2 <_realloc_r+0x2be>
  406080:	1f22      	subs	r2, r4, #4
  406082:	2a24      	cmp	r2, #36	; 0x24
  406084:	f200 8107 	bhi.w	406296 <_realloc_r+0x292>
  406088:	2a13      	cmp	r2, #19
  40608a:	f200 80db 	bhi.w	406244 <_realloc_r+0x240>
  40608e:	4603      	mov	r3, r0
  406090:	462a      	mov	r2, r5
  406092:	6811      	ldr	r1, [r2, #0]
  406094:	6019      	str	r1, [r3, #0]
  406096:	6851      	ldr	r1, [r2, #4]
  406098:	6059      	str	r1, [r3, #4]
  40609a:	6892      	ldr	r2, [r2, #8]
  40609c:	609a      	str	r2, [r3, #8]
  40609e:	4629      	mov	r1, r5
  4060a0:	4640      	mov	r0, r8
  4060a2:	f7fe fc81 	bl	4049a8 <_free_r>
  4060a6:	e01c      	b.n	4060e2 <_realloc_r+0xde>
  4060a8:	f027 0707 	bic.w	r7, r7, #7
  4060ac:	2f00      	cmp	r7, #0
  4060ae:	463a      	mov	r2, r7
  4060b0:	dabf      	bge.n	406032 <_realloc_r+0x2e>
  4060b2:	2600      	movs	r6, #0
  4060b4:	230c      	movs	r3, #12
  4060b6:	4630      	mov	r0, r6
  4060b8:	f8c8 3000 	str.w	r3, [r8]
  4060bc:	b003      	add	sp, #12
  4060be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4060c2:	462e      	mov	r6, r5
  4060c4:	1be3      	subs	r3, r4, r7
  4060c6:	2b0f      	cmp	r3, #15
  4060c8:	d81e      	bhi.n	406108 <_realloc_r+0x104>
  4060ca:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4060ce:	f003 0301 	and.w	r3, r3, #1
  4060d2:	4323      	orrs	r3, r4
  4060d4:	444c      	add	r4, r9
  4060d6:	f8c9 3004 	str.w	r3, [r9, #4]
  4060da:	6863      	ldr	r3, [r4, #4]
  4060dc:	f043 0301 	orr.w	r3, r3, #1
  4060e0:	6063      	str	r3, [r4, #4]
  4060e2:	4640      	mov	r0, r8
  4060e4:	f7ff f95c 	bl	4053a0 <__malloc_unlock>
  4060e8:	4630      	mov	r0, r6
  4060ea:	b003      	add	sp, #12
  4060ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4060f0:	f023 0303 	bic.w	r3, r3, #3
  4060f4:	18e1      	adds	r1, r4, r3
  4060f6:	4291      	cmp	r1, r2
  4060f8:	db1f      	blt.n	40613a <_realloc_r+0x136>
  4060fa:	68c3      	ldr	r3, [r0, #12]
  4060fc:	6882      	ldr	r2, [r0, #8]
  4060fe:	462e      	mov	r6, r5
  406100:	60d3      	str	r3, [r2, #12]
  406102:	460c      	mov	r4, r1
  406104:	609a      	str	r2, [r3, #8]
  406106:	e7dd      	b.n	4060c4 <_realloc_r+0xc0>
  406108:	f8d9 2004 	ldr.w	r2, [r9, #4]
  40610c:	eb09 0107 	add.w	r1, r9, r7
  406110:	f002 0201 	and.w	r2, r2, #1
  406114:	444c      	add	r4, r9
  406116:	f043 0301 	orr.w	r3, r3, #1
  40611a:	4317      	orrs	r7, r2
  40611c:	f8c9 7004 	str.w	r7, [r9, #4]
  406120:	604b      	str	r3, [r1, #4]
  406122:	6863      	ldr	r3, [r4, #4]
  406124:	f043 0301 	orr.w	r3, r3, #1
  406128:	3108      	adds	r1, #8
  40612a:	6063      	str	r3, [r4, #4]
  40612c:	4640      	mov	r0, r8
  40612e:	f7fe fc3b 	bl	4049a8 <_free_r>
  406132:	e7d6      	b.n	4060e2 <_realloc_r+0xde>
  406134:	4611      	mov	r1, r2
  406136:	f7fe bd93 	b.w	404c60 <_malloc_r>
  40613a:	f01e 0f01 	tst.w	lr, #1
  40613e:	d18e      	bne.n	40605e <_realloc_r+0x5a>
  406140:	f855 1c08 	ldr.w	r1, [r5, #-8]
  406144:	eba9 0a01 	sub.w	sl, r9, r1
  406148:	f8da 1004 	ldr.w	r1, [sl, #4]
  40614c:	f021 0103 	bic.w	r1, r1, #3
  406150:	440b      	add	r3, r1
  406152:	4423      	add	r3, r4
  406154:	4293      	cmp	r3, r2
  406156:	db25      	blt.n	4061a4 <_realloc_r+0x1a0>
  406158:	68c2      	ldr	r2, [r0, #12]
  40615a:	6881      	ldr	r1, [r0, #8]
  40615c:	4656      	mov	r6, sl
  40615e:	60ca      	str	r2, [r1, #12]
  406160:	6091      	str	r1, [r2, #8]
  406162:	f8da 100c 	ldr.w	r1, [sl, #12]
  406166:	f856 0f08 	ldr.w	r0, [r6, #8]!
  40616a:	1f22      	subs	r2, r4, #4
  40616c:	2a24      	cmp	r2, #36	; 0x24
  40616e:	60c1      	str	r1, [r0, #12]
  406170:	6088      	str	r0, [r1, #8]
  406172:	f200 8094 	bhi.w	40629e <_realloc_r+0x29a>
  406176:	2a13      	cmp	r2, #19
  406178:	d96f      	bls.n	40625a <_realloc_r+0x256>
  40617a:	6829      	ldr	r1, [r5, #0]
  40617c:	f8ca 1008 	str.w	r1, [sl, #8]
  406180:	6869      	ldr	r1, [r5, #4]
  406182:	f8ca 100c 	str.w	r1, [sl, #12]
  406186:	2a1b      	cmp	r2, #27
  406188:	f200 80a2 	bhi.w	4062d0 <_realloc_r+0x2cc>
  40618c:	3508      	adds	r5, #8
  40618e:	f10a 0210 	add.w	r2, sl, #16
  406192:	e063      	b.n	40625c <_realloc_r+0x258>
  406194:	f855 3c08 	ldr.w	r3, [r5, #-8]
  406198:	eba9 0a03 	sub.w	sl, r9, r3
  40619c:	f8da 1004 	ldr.w	r1, [sl, #4]
  4061a0:	f021 0103 	bic.w	r1, r1, #3
  4061a4:	1863      	adds	r3, r4, r1
  4061a6:	4293      	cmp	r3, r2
  4061a8:	f6ff af59 	blt.w	40605e <_realloc_r+0x5a>
  4061ac:	4656      	mov	r6, sl
  4061ae:	e7d8      	b.n	406162 <_realloc_r+0x15e>
  4061b0:	6841      	ldr	r1, [r0, #4]
  4061b2:	f021 0b03 	bic.w	fp, r1, #3
  4061b6:	44a3      	add	fp, r4
  4061b8:	f107 0010 	add.w	r0, r7, #16
  4061bc:	4583      	cmp	fp, r0
  4061be:	da56      	bge.n	40626e <_realloc_r+0x26a>
  4061c0:	f01e 0f01 	tst.w	lr, #1
  4061c4:	f47f af4b 	bne.w	40605e <_realloc_r+0x5a>
  4061c8:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4061cc:	eba9 0a01 	sub.w	sl, r9, r1
  4061d0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4061d4:	f021 0103 	bic.w	r1, r1, #3
  4061d8:	448b      	add	fp, r1
  4061da:	4558      	cmp	r0, fp
  4061dc:	dce2      	bgt.n	4061a4 <_realloc_r+0x1a0>
  4061de:	4656      	mov	r6, sl
  4061e0:	f8da 100c 	ldr.w	r1, [sl, #12]
  4061e4:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4061e8:	1f22      	subs	r2, r4, #4
  4061ea:	2a24      	cmp	r2, #36	; 0x24
  4061ec:	60c1      	str	r1, [r0, #12]
  4061ee:	6088      	str	r0, [r1, #8]
  4061f0:	f200 808f 	bhi.w	406312 <_realloc_r+0x30e>
  4061f4:	2a13      	cmp	r2, #19
  4061f6:	f240 808a 	bls.w	40630e <_realloc_r+0x30a>
  4061fa:	6829      	ldr	r1, [r5, #0]
  4061fc:	f8ca 1008 	str.w	r1, [sl, #8]
  406200:	6869      	ldr	r1, [r5, #4]
  406202:	f8ca 100c 	str.w	r1, [sl, #12]
  406206:	2a1b      	cmp	r2, #27
  406208:	f200 808a 	bhi.w	406320 <_realloc_r+0x31c>
  40620c:	3508      	adds	r5, #8
  40620e:	f10a 0210 	add.w	r2, sl, #16
  406212:	6829      	ldr	r1, [r5, #0]
  406214:	6011      	str	r1, [r2, #0]
  406216:	6869      	ldr	r1, [r5, #4]
  406218:	6051      	str	r1, [r2, #4]
  40621a:	68a9      	ldr	r1, [r5, #8]
  40621c:	6091      	str	r1, [r2, #8]
  40621e:	eb0a 0107 	add.w	r1, sl, r7
  406222:	ebab 0207 	sub.w	r2, fp, r7
  406226:	f042 0201 	orr.w	r2, r2, #1
  40622a:	6099      	str	r1, [r3, #8]
  40622c:	604a      	str	r2, [r1, #4]
  40622e:	f8da 3004 	ldr.w	r3, [sl, #4]
  406232:	f003 0301 	and.w	r3, r3, #1
  406236:	431f      	orrs	r7, r3
  406238:	4640      	mov	r0, r8
  40623a:	f8ca 7004 	str.w	r7, [sl, #4]
  40623e:	f7ff f8af 	bl	4053a0 <__malloc_unlock>
  406242:	e751      	b.n	4060e8 <_realloc_r+0xe4>
  406244:	682b      	ldr	r3, [r5, #0]
  406246:	6003      	str	r3, [r0, #0]
  406248:	686b      	ldr	r3, [r5, #4]
  40624a:	6043      	str	r3, [r0, #4]
  40624c:	2a1b      	cmp	r2, #27
  40624e:	d82d      	bhi.n	4062ac <_realloc_r+0x2a8>
  406250:	f100 0308 	add.w	r3, r0, #8
  406254:	f105 0208 	add.w	r2, r5, #8
  406258:	e71b      	b.n	406092 <_realloc_r+0x8e>
  40625a:	4632      	mov	r2, r6
  40625c:	6829      	ldr	r1, [r5, #0]
  40625e:	6011      	str	r1, [r2, #0]
  406260:	6869      	ldr	r1, [r5, #4]
  406262:	6051      	str	r1, [r2, #4]
  406264:	68a9      	ldr	r1, [r5, #8]
  406266:	6091      	str	r1, [r2, #8]
  406268:	461c      	mov	r4, r3
  40626a:	46d1      	mov	r9, sl
  40626c:	e72a      	b.n	4060c4 <_realloc_r+0xc0>
  40626e:	eb09 0107 	add.w	r1, r9, r7
  406272:	ebab 0b07 	sub.w	fp, fp, r7
  406276:	f04b 0201 	orr.w	r2, fp, #1
  40627a:	6099      	str	r1, [r3, #8]
  40627c:	604a      	str	r2, [r1, #4]
  40627e:	f855 3c04 	ldr.w	r3, [r5, #-4]
  406282:	f003 0301 	and.w	r3, r3, #1
  406286:	431f      	orrs	r7, r3
  406288:	4640      	mov	r0, r8
  40628a:	f845 7c04 	str.w	r7, [r5, #-4]
  40628e:	f7ff f887 	bl	4053a0 <__malloc_unlock>
  406292:	462e      	mov	r6, r5
  406294:	e728      	b.n	4060e8 <_realloc_r+0xe4>
  406296:	4629      	mov	r1, r5
  406298:	f7ff fe3a 	bl	405f10 <memmove>
  40629c:	e6ff      	b.n	40609e <_realloc_r+0x9a>
  40629e:	4629      	mov	r1, r5
  4062a0:	4630      	mov	r0, r6
  4062a2:	461c      	mov	r4, r3
  4062a4:	46d1      	mov	r9, sl
  4062a6:	f7ff fe33 	bl	405f10 <memmove>
  4062aa:	e70b      	b.n	4060c4 <_realloc_r+0xc0>
  4062ac:	68ab      	ldr	r3, [r5, #8]
  4062ae:	6083      	str	r3, [r0, #8]
  4062b0:	68eb      	ldr	r3, [r5, #12]
  4062b2:	60c3      	str	r3, [r0, #12]
  4062b4:	2a24      	cmp	r2, #36	; 0x24
  4062b6:	d017      	beq.n	4062e8 <_realloc_r+0x2e4>
  4062b8:	f100 0310 	add.w	r3, r0, #16
  4062bc:	f105 0210 	add.w	r2, r5, #16
  4062c0:	e6e7      	b.n	406092 <_realloc_r+0x8e>
  4062c2:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4062c6:	f023 0303 	bic.w	r3, r3, #3
  4062ca:	441c      	add	r4, r3
  4062cc:	462e      	mov	r6, r5
  4062ce:	e6f9      	b.n	4060c4 <_realloc_r+0xc0>
  4062d0:	68a9      	ldr	r1, [r5, #8]
  4062d2:	f8ca 1010 	str.w	r1, [sl, #16]
  4062d6:	68e9      	ldr	r1, [r5, #12]
  4062d8:	f8ca 1014 	str.w	r1, [sl, #20]
  4062dc:	2a24      	cmp	r2, #36	; 0x24
  4062de:	d00c      	beq.n	4062fa <_realloc_r+0x2f6>
  4062e0:	3510      	adds	r5, #16
  4062e2:	f10a 0218 	add.w	r2, sl, #24
  4062e6:	e7b9      	b.n	40625c <_realloc_r+0x258>
  4062e8:	692b      	ldr	r3, [r5, #16]
  4062ea:	6103      	str	r3, [r0, #16]
  4062ec:	696b      	ldr	r3, [r5, #20]
  4062ee:	6143      	str	r3, [r0, #20]
  4062f0:	f105 0218 	add.w	r2, r5, #24
  4062f4:	f100 0318 	add.w	r3, r0, #24
  4062f8:	e6cb      	b.n	406092 <_realloc_r+0x8e>
  4062fa:	692a      	ldr	r2, [r5, #16]
  4062fc:	f8ca 2018 	str.w	r2, [sl, #24]
  406300:	696a      	ldr	r2, [r5, #20]
  406302:	f8ca 201c 	str.w	r2, [sl, #28]
  406306:	3518      	adds	r5, #24
  406308:	f10a 0220 	add.w	r2, sl, #32
  40630c:	e7a6      	b.n	40625c <_realloc_r+0x258>
  40630e:	4632      	mov	r2, r6
  406310:	e77f      	b.n	406212 <_realloc_r+0x20e>
  406312:	4629      	mov	r1, r5
  406314:	4630      	mov	r0, r6
  406316:	9301      	str	r3, [sp, #4]
  406318:	f7ff fdfa 	bl	405f10 <memmove>
  40631c:	9b01      	ldr	r3, [sp, #4]
  40631e:	e77e      	b.n	40621e <_realloc_r+0x21a>
  406320:	68a9      	ldr	r1, [r5, #8]
  406322:	f8ca 1010 	str.w	r1, [sl, #16]
  406326:	68e9      	ldr	r1, [r5, #12]
  406328:	f8ca 1014 	str.w	r1, [sl, #20]
  40632c:	2a24      	cmp	r2, #36	; 0x24
  40632e:	d003      	beq.n	406338 <_realloc_r+0x334>
  406330:	3510      	adds	r5, #16
  406332:	f10a 0218 	add.w	r2, sl, #24
  406336:	e76c      	b.n	406212 <_realloc_r+0x20e>
  406338:	692a      	ldr	r2, [r5, #16]
  40633a:	f8ca 2018 	str.w	r2, [sl, #24]
  40633e:	696a      	ldr	r2, [r5, #20]
  406340:	f8ca 201c 	str.w	r2, [sl, #28]
  406344:	3518      	adds	r5, #24
  406346:	f10a 0220 	add.w	r2, sl, #32
  40634a:	e762      	b.n	406212 <_realloc_r+0x20e>
  40634c:	20400454 	.word	0x20400454

00406350 <__ascii_wctomb>:
  406350:	b121      	cbz	r1, 40635c <__ascii_wctomb+0xc>
  406352:	2aff      	cmp	r2, #255	; 0xff
  406354:	d804      	bhi.n	406360 <__ascii_wctomb+0x10>
  406356:	700a      	strb	r2, [r1, #0]
  406358:	2001      	movs	r0, #1
  40635a:	4770      	bx	lr
  40635c:	4608      	mov	r0, r1
  40635e:	4770      	bx	lr
  406360:	238a      	movs	r3, #138	; 0x8a
  406362:	6003      	str	r3, [r0, #0]
  406364:	f04f 30ff 	mov.w	r0, #4294967295
  406368:	4770      	bx	lr
  40636a:	bf00      	nop

0040636c <__gedf2>:
  40636c:	f04f 3cff 	mov.w	ip, #4294967295
  406370:	e006      	b.n	406380 <__cmpdf2+0x4>
  406372:	bf00      	nop

00406374 <__ledf2>:
  406374:	f04f 0c01 	mov.w	ip, #1
  406378:	e002      	b.n	406380 <__cmpdf2+0x4>
  40637a:	bf00      	nop

0040637c <__cmpdf2>:
  40637c:	f04f 0c01 	mov.w	ip, #1
  406380:	f84d cd04 	str.w	ip, [sp, #-4]!
  406384:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406388:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  40638c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406390:	bf18      	it	ne
  406392:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  406396:	d01b      	beq.n	4063d0 <__cmpdf2+0x54>
  406398:	b001      	add	sp, #4
  40639a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  40639e:	bf0c      	ite	eq
  4063a0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4063a4:	ea91 0f03 	teqne	r1, r3
  4063a8:	bf02      	ittt	eq
  4063aa:	ea90 0f02 	teqeq	r0, r2
  4063ae:	2000      	moveq	r0, #0
  4063b0:	4770      	bxeq	lr
  4063b2:	f110 0f00 	cmn.w	r0, #0
  4063b6:	ea91 0f03 	teq	r1, r3
  4063ba:	bf58      	it	pl
  4063bc:	4299      	cmppl	r1, r3
  4063be:	bf08      	it	eq
  4063c0:	4290      	cmpeq	r0, r2
  4063c2:	bf2c      	ite	cs
  4063c4:	17d8      	asrcs	r0, r3, #31
  4063c6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4063ca:	f040 0001 	orr.w	r0, r0, #1
  4063ce:	4770      	bx	lr
  4063d0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4063d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4063d8:	d102      	bne.n	4063e0 <__cmpdf2+0x64>
  4063da:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4063de:	d107      	bne.n	4063f0 <__cmpdf2+0x74>
  4063e0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4063e4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4063e8:	d1d6      	bne.n	406398 <__cmpdf2+0x1c>
  4063ea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4063ee:	d0d3      	beq.n	406398 <__cmpdf2+0x1c>
  4063f0:	f85d 0b04 	ldr.w	r0, [sp], #4
  4063f4:	4770      	bx	lr
  4063f6:	bf00      	nop

004063f8 <__aeabi_cdrcmple>:
  4063f8:	4684      	mov	ip, r0
  4063fa:	4610      	mov	r0, r2
  4063fc:	4662      	mov	r2, ip
  4063fe:	468c      	mov	ip, r1
  406400:	4619      	mov	r1, r3
  406402:	4663      	mov	r3, ip
  406404:	e000      	b.n	406408 <__aeabi_cdcmpeq>
  406406:	bf00      	nop

00406408 <__aeabi_cdcmpeq>:
  406408:	b501      	push	{r0, lr}
  40640a:	f7ff ffb7 	bl	40637c <__cmpdf2>
  40640e:	2800      	cmp	r0, #0
  406410:	bf48      	it	mi
  406412:	f110 0f00 	cmnmi.w	r0, #0
  406416:	bd01      	pop	{r0, pc}

00406418 <__aeabi_dcmpeq>:
  406418:	f84d ed08 	str.w	lr, [sp, #-8]!
  40641c:	f7ff fff4 	bl	406408 <__aeabi_cdcmpeq>
  406420:	bf0c      	ite	eq
  406422:	2001      	moveq	r0, #1
  406424:	2000      	movne	r0, #0
  406426:	f85d fb08 	ldr.w	pc, [sp], #8
  40642a:	bf00      	nop

0040642c <__aeabi_dcmplt>:
  40642c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406430:	f7ff ffea 	bl	406408 <__aeabi_cdcmpeq>
  406434:	bf34      	ite	cc
  406436:	2001      	movcc	r0, #1
  406438:	2000      	movcs	r0, #0
  40643a:	f85d fb08 	ldr.w	pc, [sp], #8
  40643e:	bf00      	nop

00406440 <__aeabi_dcmple>:
  406440:	f84d ed08 	str.w	lr, [sp, #-8]!
  406444:	f7ff ffe0 	bl	406408 <__aeabi_cdcmpeq>
  406448:	bf94      	ite	ls
  40644a:	2001      	movls	r0, #1
  40644c:	2000      	movhi	r0, #0
  40644e:	f85d fb08 	ldr.w	pc, [sp], #8
  406452:	bf00      	nop

00406454 <__aeabi_dcmpge>:
  406454:	f84d ed08 	str.w	lr, [sp, #-8]!
  406458:	f7ff ffce 	bl	4063f8 <__aeabi_cdrcmple>
  40645c:	bf94      	ite	ls
  40645e:	2001      	movls	r0, #1
  406460:	2000      	movhi	r0, #0
  406462:	f85d fb08 	ldr.w	pc, [sp], #8
  406466:	bf00      	nop

00406468 <__aeabi_dcmpgt>:
  406468:	f84d ed08 	str.w	lr, [sp, #-8]!
  40646c:	f7ff ffc4 	bl	4063f8 <__aeabi_cdrcmple>
  406470:	bf34      	ite	cc
  406472:	2001      	movcc	r0, #1
  406474:	2000      	movcs	r0, #0
  406476:	f85d fb08 	ldr.w	pc, [sp], #8
  40647a:	bf00      	nop

0040647c <__aeabi_dcmpun>:
  40647c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  406480:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406484:	d102      	bne.n	40648c <__aeabi_dcmpun+0x10>
  406486:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  40648a:	d10a      	bne.n	4064a2 <__aeabi_dcmpun+0x26>
  40648c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  406490:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406494:	d102      	bne.n	40649c <__aeabi_dcmpun+0x20>
  406496:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  40649a:	d102      	bne.n	4064a2 <__aeabi_dcmpun+0x26>
  40649c:	f04f 0000 	mov.w	r0, #0
  4064a0:	4770      	bx	lr
  4064a2:	f04f 0001 	mov.w	r0, #1
  4064a6:	4770      	bx	lr

004064a8 <__aeabi_uldivmod>:
  4064a8:	b953      	cbnz	r3, 4064c0 <__aeabi_uldivmod+0x18>
  4064aa:	b94a      	cbnz	r2, 4064c0 <__aeabi_uldivmod+0x18>
  4064ac:	2900      	cmp	r1, #0
  4064ae:	bf08      	it	eq
  4064b0:	2800      	cmpeq	r0, #0
  4064b2:	bf1c      	itt	ne
  4064b4:	f04f 31ff 	movne.w	r1, #4294967295
  4064b8:	f04f 30ff 	movne.w	r0, #4294967295
  4064bc:	f000 b97a 	b.w	4067b4 <__aeabi_idiv0>
  4064c0:	f1ad 0c08 	sub.w	ip, sp, #8
  4064c4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4064c8:	f000 f806 	bl	4064d8 <__udivmoddi4>
  4064cc:	f8dd e004 	ldr.w	lr, [sp, #4]
  4064d0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4064d4:	b004      	add	sp, #16
  4064d6:	4770      	bx	lr

004064d8 <__udivmoddi4>:
  4064d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4064dc:	468c      	mov	ip, r1
  4064de:	460d      	mov	r5, r1
  4064e0:	4604      	mov	r4, r0
  4064e2:	9e08      	ldr	r6, [sp, #32]
  4064e4:	2b00      	cmp	r3, #0
  4064e6:	d151      	bne.n	40658c <__udivmoddi4+0xb4>
  4064e8:	428a      	cmp	r2, r1
  4064ea:	4617      	mov	r7, r2
  4064ec:	d96d      	bls.n	4065ca <__udivmoddi4+0xf2>
  4064ee:	fab2 fe82 	clz	lr, r2
  4064f2:	f1be 0f00 	cmp.w	lr, #0
  4064f6:	d00b      	beq.n	406510 <__udivmoddi4+0x38>
  4064f8:	f1ce 0c20 	rsb	ip, lr, #32
  4064fc:	fa01 f50e 	lsl.w	r5, r1, lr
  406500:	fa20 fc0c 	lsr.w	ip, r0, ip
  406504:	fa02 f70e 	lsl.w	r7, r2, lr
  406508:	ea4c 0c05 	orr.w	ip, ip, r5
  40650c:	fa00 f40e 	lsl.w	r4, r0, lr
  406510:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406514:	0c25      	lsrs	r5, r4, #16
  406516:	fbbc f8fa 	udiv	r8, ip, sl
  40651a:	fa1f f987 	uxth.w	r9, r7
  40651e:	fb0a cc18 	mls	ip, sl, r8, ip
  406522:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406526:	fb08 f309 	mul.w	r3, r8, r9
  40652a:	42ab      	cmp	r3, r5
  40652c:	d90a      	bls.n	406544 <__udivmoddi4+0x6c>
  40652e:	19ed      	adds	r5, r5, r7
  406530:	f108 32ff 	add.w	r2, r8, #4294967295
  406534:	f080 8123 	bcs.w	40677e <__udivmoddi4+0x2a6>
  406538:	42ab      	cmp	r3, r5
  40653a:	f240 8120 	bls.w	40677e <__udivmoddi4+0x2a6>
  40653e:	f1a8 0802 	sub.w	r8, r8, #2
  406542:	443d      	add	r5, r7
  406544:	1aed      	subs	r5, r5, r3
  406546:	b2a4      	uxth	r4, r4
  406548:	fbb5 f0fa 	udiv	r0, r5, sl
  40654c:	fb0a 5510 	mls	r5, sl, r0, r5
  406550:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406554:	fb00 f909 	mul.w	r9, r0, r9
  406558:	45a1      	cmp	r9, r4
  40655a:	d909      	bls.n	406570 <__udivmoddi4+0x98>
  40655c:	19e4      	adds	r4, r4, r7
  40655e:	f100 33ff 	add.w	r3, r0, #4294967295
  406562:	f080 810a 	bcs.w	40677a <__udivmoddi4+0x2a2>
  406566:	45a1      	cmp	r9, r4
  406568:	f240 8107 	bls.w	40677a <__udivmoddi4+0x2a2>
  40656c:	3802      	subs	r0, #2
  40656e:	443c      	add	r4, r7
  406570:	eba4 0409 	sub.w	r4, r4, r9
  406574:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406578:	2100      	movs	r1, #0
  40657a:	2e00      	cmp	r6, #0
  40657c:	d061      	beq.n	406642 <__udivmoddi4+0x16a>
  40657e:	fa24 f40e 	lsr.w	r4, r4, lr
  406582:	2300      	movs	r3, #0
  406584:	6034      	str	r4, [r6, #0]
  406586:	6073      	str	r3, [r6, #4]
  406588:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40658c:	428b      	cmp	r3, r1
  40658e:	d907      	bls.n	4065a0 <__udivmoddi4+0xc8>
  406590:	2e00      	cmp	r6, #0
  406592:	d054      	beq.n	40663e <__udivmoddi4+0x166>
  406594:	2100      	movs	r1, #0
  406596:	e886 0021 	stmia.w	r6, {r0, r5}
  40659a:	4608      	mov	r0, r1
  40659c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4065a0:	fab3 f183 	clz	r1, r3
  4065a4:	2900      	cmp	r1, #0
  4065a6:	f040 808e 	bne.w	4066c6 <__udivmoddi4+0x1ee>
  4065aa:	42ab      	cmp	r3, r5
  4065ac:	d302      	bcc.n	4065b4 <__udivmoddi4+0xdc>
  4065ae:	4282      	cmp	r2, r0
  4065b0:	f200 80fa 	bhi.w	4067a8 <__udivmoddi4+0x2d0>
  4065b4:	1a84      	subs	r4, r0, r2
  4065b6:	eb65 0503 	sbc.w	r5, r5, r3
  4065ba:	2001      	movs	r0, #1
  4065bc:	46ac      	mov	ip, r5
  4065be:	2e00      	cmp	r6, #0
  4065c0:	d03f      	beq.n	406642 <__udivmoddi4+0x16a>
  4065c2:	e886 1010 	stmia.w	r6, {r4, ip}
  4065c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4065ca:	b912      	cbnz	r2, 4065d2 <__udivmoddi4+0xfa>
  4065cc:	2701      	movs	r7, #1
  4065ce:	fbb7 f7f2 	udiv	r7, r7, r2
  4065d2:	fab7 fe87 	clz	lr, r7
  4065d6:	f1be 0f00 	cmp.w	lr, #0
  4065da:	d134      	bne.n	406646 <__udivmoddi4+0x16e>
  4065dc:	1beb      	subs	r3, r5, r7
  4065de:	0c3a      	lsrs	r2, r7, #16
  4065e0:	fa1f fc87 	uxth.w	ip, r7
  4065e4:	2101      	movs	r1, #1
  4065e6:	fbb3 f8f2 	udiv	r8, r3, r2
  4065ea:	0c25      	lsrs	r5, r4, #16
  4065ec:	fb02 3318 	mls	r3, r2, r8, r3
  4065f0:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4065f4:	fb0c f308 	mul.w	r3, ip, r8
  4065f8:	42ab      	cmp	r3, r5
  4065fa:	d907      	bls.n	40660c <__udivmoddi4+0x134>
  4065fc:	19ed      	adds	r5, r5, r7
  4065fe:	f108 30ff 	add.w	r0, r8, #4294967295
  406602:	d202      	bcs.n	40660a <__udivmoddi4+0x132>
  406604:	42ab      	cmp	r3, r5
  406606:	f200 80d1 	bhi.w	4067ac <__udivmoddi4+0x2d4>
  40660a:	4680      	mov	r8, r0
  40660c:	1aed      	subs	r5, r5, r3
  40660e:	b2a3      	uxth	r3, r4
  406610:	fbb5 f0f2 	udiv	r0, r5, r2
  406614:	fb02 5510 	mls	r5, r2, r0, r5
  406618:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  40661c:	fb0c fc00 	mul.w	ip, ip, r0
  406620:	45a4      	cmp	ip, r4
  406622:	d907      	bls.n	406634 <__udivmoddi4+0x15c>
  406624:	19e4      	adds	r4, r4, r7
  406626:	f100 33ff 	add.w	r3, r0, #4294967295
  40662a:	d202      	bcs.n	406632 <__udivmoddi4+0x15a>
  40662c:	45a4      	cmp	ip, r4
  40662e:	f200 80b8 	bhi.w	4067a2 <__udivmoddi4+0x2ca>
  406632:	4618      	mov	r0, r3
  406634:	eba4 040c 	sub.w	r4, r4, ip
  406638:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  40663c:	e79d      	b.n	40657a <__udivmoddi4+0xa2>
  40663e:	4631      	mov	r1, r6
  406640:	4630      	mov	r0, r6
  406642:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406646:	f1ce 0420 	rsb	r4, lr, #32
  40664a:	fa05 f30e 	lsl.w	r3, r5, lr
  40664e:	fa07 f70e 	lsl.w	r7, r7, lr
  406652:	fa20 f804 	lsr.w	r8, r0, r4
  406656:	0c3a      	lsrs	r2, r7, #16
  406658:	fa25 f404 	lsr.w	r4, r5, r4
  40665c:	ea48 0803 	orr.w	r8, r8, r3
  406660:	fbb4 f1f2 	udiv	r1, r4, r2
  406664:	ea4f 4518 	mov.w	r5, r8, lsr #16
  406668:	fb02 4411 	mls	r4, r2, r1, r4
  40666c:	fa1f fc87 	uxth.w	ip, r7
  406670:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  406674:	fb01 f30c 	mul.w	r3, r1, ip
  406678:	42ab      	cmp	r3, r5
  40667a:	fa00 f40e 	lsl.w	r4, r0, lr
  40667e:	d909      	bls.n	406694 <__udivmoddi4+0x1bc>
  406680:	19ed      	adds	r5, r5, r7
  406682:	f101 30ff 	add.w	r0, r1, #4294967295
  406686:	f080 808a 	bcs.w	40679e <__udivmoddi4+0x2c6>
  40668a:	42ab      	cmp	r3, r5
  40668c:	f240 8087 	bls.w	40679e <__udivmoddi4+0x2c6>
  406690:	3902      	subs	r1, #2
  406692:	443d      	add	r5, r7
  406694:	1aeb      	subs	r3, r5, r3
  406696:	fa1f f588 	uxth.w	r5, r8
  40669a:	fbb3 f0f2 	udiv	r0, r3, r2
  40669e:	fb02 3310 	mls	r3, r2, r0, r3
  4066a2:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4066a6:	fb00 f30c 	mul.w	r3, r0, ip
  4066aa:	42ab      	cmp	r3, r5
  4066ac:	d907      	bls.n	4066be <__udivmoddi4+0x1e6>
  4066ae:	19ed      	adds	r5, r5, r7
  4066b0:	f100 38ff 	add.w	r8, r0, #4294967295
  4066b4:	d26f      	bcs.n	406796 <__udivmoddi4+0x2be>
  4066b6:	42ab      	cmp	r3, r5
  4066b8:	d96d      	bls.n	406796 <__udivmoddi4+0x2be>
  4066ba:	3802      	subs	r0, #2
  4066bc:	443d      	add	r5, r7
  4066be:	1aeb      	subs	r3, r5, r3
  4066c0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4066c4:	e78f      	b.n	4065e6 <__udivmoddi4+0x10e>
  4066c6:	f1c1 0720 	rsb	r7, r1, #32
  4066ca:	fa22 f807 	lsr.w	r8, r2, r7
  4066ce:	408b      	lsls	r3, r1
  4066d0:	fa05 f401 	lsl.w	r4, r5, r1
  4066d4:	ea48 0303 	orr.w	r3, r8, r3
  4066d8:	fa20 fe07 	lsr.w	lr, r0, r7
  4066dc:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4066e0:	40fd      	lsrs	r5, r7
  4066e2:	ea4e 0e04 	orr.w	lr, lr, r4
  4066e6:	fbb5 f9fc 	udiv	r9, r5, ip
  4066ea:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4066ee:	fb0c 5519 	mls	r5, ip, r9, r5
  4066f2:	fa1f f883 	uxth.w	r8, r3
  4066f6:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  4066fa:	fb09 f408 	mul.w	r4, r9, r8
  4066fe:	42ac      	cmp	r4, r5
  406700:	fa02 f201 	lsl.w	r2, r2, r1
  406704:	fa00 fa01 	lsl.w	sl, r0, r1
  406708:	d908      	bls.n	40671c <__udivmoddi4+0x244>
  40670a:	18ed      	adds	r5, r5, r3
  40670c:	f109 30ff 	add.w	r0, r9, #4294967295
  406710:	d243      	bcs.n	40679a <__udivmoddi4+0x2c2>
  406712:	42ac      	cmp	r4, r5
  406714:	d941      	bls.n	40679a <__udivmoddi4+0x2c2>
  406716:	f1a9 0902 	sub.w	r9, r9, #2
  40671a:	441d      	add	r5, r3
  40671c:	1b2d      	subs	r5, r5, r4
  40671e:	fa1f fe8e 	uxth.w	lr, lr
  406722:	fbb5 f0fc 	udiv	r0, r5, ip
  406726:	fb0c 5510 	mls	r5, ip, r0, r5
  40672a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40672e:	fb00 f808 	mul.w	r8, r0, r8
  406732:	45a0      	cmp	r8, r4
  406734:	d907      	bls.n	406746 <__udivmoddi4+0x26e>
  406736:	18e4      	adds	r4, r4, r3
  406738:	f100 35ff 	add.w	r5, r0, #4294967295
  40673c:	d229      	bcs.n	406792 <__udivmoddi4+0x2ba>
  40673e:	45a0      	cmp	r8, r4
  406740:	d927      	bls.n	406792 <__udivmoddi4+0x2ba>
  406742:	3802      	subs	r0, #2
  406744:	441c      	add	r4, r3
  406746:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  40674a:	eba4 0408 	sub.w	r4, r4, r8
  40674e:	fba0 8902 	umull	r8, r9, r0, r2
  406752:	454c      	cmp	r4, r9
  406754:	46c6      	mov	lr, r8
  406756:	464d      	mov	r5, r9
  406758:	d315      	bcc.n	406786 <__udivmoddi4+0x2ae>
  40675a:	d012      	beq.n	406782 <__udivmoddi4+0x2aa>
  40675c:	b156      	cbz	r6, 406774 <__udivmoddi4+0x29c>
  40675e:	ebba 030e 	subs.w	r3, sl, lr
  406762:	eb64 0405 	sbc.w	r4, r4, r5
  406766:	fa04 f707 	lsl.w	r7, r4, r7
  40676a:	40cb      	lsrs	r3, r1
  40676c:	431f      	orrs	r7, r3
  40676e:	40cc      	lsrs	r4, r1
  406770:	6037      	str	r7, [r6, #0]
  406772:	6074      	str	r4, [r6, #4]
  406774:	2100      	movs	r1, #0
  406776:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40677a:	4618      	mov	r0, r3
  40677c:	e6f8      	b.n	406570 <__udivmoddi4+0x98>
  40677e:	4690      	mov	r8, r2
  406780:	e6e0      	b.n	406544 <__udivmoddi4+0x6c>
  406782:	45c2      	cmp	sl, r8
  406784:	d2ea      	bcs.n	40675c <__udivmoddi4+0x284>
  406786:	ebb8 0e02 	subs.w	lr, r8, r2
  40678a:	eb69 0503 	sbc.w	r5, r9, r3
  40678e:	3801      	subs	r0, #1
  406790:	e7e4      	b.n	40675c <__udivmoddi4+0x284>
  406792:	4628      	mov	r0, r5
  406794:	e7d7      	b.n	406746 <__udivmoddi4+0x26e>
  406796:	4640      	mov	r0, r8
  406798:	e791      	b.n	4066be <__udivmoddi4+0x1e6>
  40679a:	4681      	mov	r9, r0
  40679c:	e7be      	b.n	40671c <__udivmoddi4+0x244>
  40679e:	4601      	mov	r1, r0
  4067a0:	e778      	b.n	406694 <__udivmoddi4+0x1bc>
  4067a2:	3802      	subs	r0, #2
  4067a4:	443c      	add	r4, r7
  4067a6:	e745      	b.n	406634 <__udivmoddi4+0x15c>
  4067a8:	4608      	mov	r0, r1
  4067aa:	e708      	b.n	4065be <__udivmoddi4+0xe6>
  4067ac:	f1a8 0802 	sub.w	r8, r8, #2
  4067b0:	443d      	add	r5, r7
  4067b2:	e72b      	b.n	40660c <__udivmoddi4+0x134>

004067b4 <__aeabi_idiv0>:
  4067b4:	4770      	bx	lr
  4067b6:	bf00      	nop

004067b8 <sysfont_glyphs>:
	...
  4067d8:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  4067e8:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  4067f8:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  406810:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  406820:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  406830:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406848:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406858:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406868:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  406880:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  40689c:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4068ac:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4068bc:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4068cc:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  4068f4:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  40691c:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  40692c:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  406950:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  406960:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  406970:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  406980:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  406998:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  4069a8:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4069b8:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4069d0:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  4069e0:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  4069f0:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406a08:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406a18:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406a28:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  406a40:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  406a50:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  406a60:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  406a78:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  406a88:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  406a98:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  406ab4:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  406ac4:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  406ad4:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  406af0:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406b08:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  406b20:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  406b30:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  406b40:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406b58:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406b68:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  406b78:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  406b90:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  406ba0:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  406bb0:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  406bc8:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406bd8:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406be8:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  406c00:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  406c10:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  406c20:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406c38:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406c48:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406c58:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  406c70:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  406c80:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  406c90:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406ca8:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  406cb8:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  406cc8:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  406ce0:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406cf0:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  406d00:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406d18:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406d28:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406d38:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  406d50:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  406d60:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406d70:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  406d88:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406d98:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406da8:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  406dc0:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  406dd0:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  406de0:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406df8:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406e08:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406e18:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406e30:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406e40:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406e50:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406e68:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406e78:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406e88:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406eb0:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  406ec0:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406edc:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406ef4:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406f04:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406f14:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406f2c:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406f3c:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406f4c:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406f64:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406f74:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406f84:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406f94:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406fa4:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406fb4:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406fc4:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406fd4:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406fe4:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406ff4:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  40700c:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  40701c:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  40702c:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  407048:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  407064:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  407080:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  407090:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  4070a0:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  4070b8:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  4070d4:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  4070f0:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  40710c:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  407128:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  407144:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  407160:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  40717c:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  40718c:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  40719c:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  4071ac:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  4071bc:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  4071cc:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  4071dc:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  4071ec:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  4071fc:	0000 0000 6425 6320 006d 0000               ....%d cm...

00407208 <_global_impure_ptr>:
  407208:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  407218:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  407228:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  407238:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  407248:	296c 0000 0030 0000                         l)..0...

00407250 <blanks.7223>:
  407250:	2020 2020 2020 2020 2020 2020 2020 2020                     

00407260 <zeroes.7224>:
  407260:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  407270:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00407280 <__mprec_bigtens>:
  407280:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  407290:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  4072a0:	bf3c 7f73 4fdd 7515                         <.s..O.u

004072a8 <__mprec_tens>:
  4072a8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  4072b8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  4072c8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  4072d8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  4072e8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  4072f8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  407308:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  407318:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  407328:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  407338:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  407348:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  407358:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  407368:	9db4 79d9 7843 44ea                         ...yCx.D

00407370 <p05.6055>:
  407370:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  407380:	4f50 4953 0058 0000 002e 0000               POSIX.......

0040738c <_ctype_>:
  40738c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  40739c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  4073ac:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  4073bc:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  4073cc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  4073dc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  4073ec:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  4073fc:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  40740c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00407490 <_init>:
  407490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  407492:	bf00      	nop
  407494:	bcf8      	pop	{r3, r4, r5, r6, r7}
  407496:	bc08      	pop	{r3}
  407498:	469e      	mov	lr, r3
  40749a:	4770      	bx	lr

0040749c <__init_array_start>:
  40749c:	004036d9 	.word	0x004036d9

004074a0 <__frame_dummy_init_array_entry>:
  4074a0:	00400165                                e.@.

004074a4 <_fini>:
  4074a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4074a6:	bf00      	nop
  4074a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4074aa:	bc08      	pop	{r3}
  4074ac:	469e      	mov	lr, r3
  4074ae:	4770      	bx	lr

004074b0 <__fini_array_start>:
  4074b0:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 67b8 0040 0e0a 7d20               .....g@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <freq>:
20400020:	8000 0000                                   ....

20400024 <_impure_ptr>:
20400024:	0028 2040                                   (.@ 

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cd8 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	6351 0040 5ee5 0040 0000 0000 738c 0040     Qc@..^@......s@.
20400954:	7388 0040 722c 0040 722c 0040 722c 0040     .s@.,r@.,r@.,r@.
20400964:	722c 0040 722c 0040 722c 0040 722c 0040     ,r@.,r@.,r@.,r@.
20400974:	722c 0040 722c 0040 ffff ffff ffff ffff     ,r@.,r@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
